{"url": "https://docs.capillarytech.com", "title": "Capillary Documentation", "text": "Capillary Documentation\nCapillary Documentation Hub\nWelcome to the Capillary Documentation Hub! Here, you'll discover a world of resources to help you unleash the power of our innovative products and solutions. From expert tips to advanced features, we've got everything you need to make the most out of your Capillary experience. Ready to explore? Let's dive in!\nUser Documentation\nLoyalty+\nEncourage repeat business, offer rewards and boost your customer relationships with personalized loyalty programs\nEngage+\nBuild relationships at every interaction & Personalise your engagement with omnichannel marketing solutions\nInsights+\nLeverage the customer data with the right KPIs and metrics & analyze your data to get the best profitable insights out of it.\nCapillary Data Platform\nAn effective platform to unlock critical data insights, ingests data from multiple soures and helps companies make sense of their data\nDeveloper Documentation\nGet started with APIs\nKnow the basics of Capillary APIs and make your first API request\nCapillary SDK\nKnow how to integrate Capillary iOS and Android SDKs\nMore\nRelease notes\nCapillary Academy\nCapillary Blog\nCapillary Website\nTickets\nNewsletters"}
{"url": "https://docs.capillarytech.com/", "title": "Capillary Documentation", "text": "Capillary Documentation\nCapillary Documentation Hub\nWelcome to the Capillary Documentation Hub! Here, you'll discover a world of resources to help you unleash the power of our innovative products and solutions. From expert tips to advanced features, we've got everything you need to make the most out of your Capillary experience. Ready to explore? Let's dive in!\nUser Documentation\nLoyalty+\nEncourage repeat business, offer rewards and boost your customer relationships with personalized loyalty programs\nEngage+\nBuild relationships at every interaction & Personalise your engagement with omnichannel marketing solutions\nInsights+\nLeverage the customer data with the right KPIs and metrics & analyze your data to get the best profitable insights out of it.\nCapillary Data Platform\nAn effective platform to unlock critical data insights, ingests data from multiple soures and helps companies make sense of their data\nDeveloper Documentation\nGet started with APIs\nKnow the basics of Capillary APIs and make your first API request\nCapillary SDK\nKnow how to integrate Capillary iOS and Android SDKs\nMore\nRelease notes\nCapillary Academy\nCapillary Blog\nCapillary Website\nTickets\nNewsletters"}
{"url": "https://docs.capillarytech.com/docs", "title": "Introduction", "text": "Introduction\nAt Capillary, we offer AI-based cloud-native SaaS products and solutions such as automated loyalty management and consumer data platform. Our diverse product range enables you to manage end-to-end loyalty programs, gain a comprehensive view of your consumers, and offer unified, cross-channel strategies that provide consumers with real-time, omnichannel, personalized, and consistent experience.\nLoyalty+\n- Lets you increase repeat sales with personalized, omnichannel loyalty programs by intelligently rewarding your customers for desired behavior.\nKnow more details\n.\nEngage+\n- This allows you to personalize customer engagement with omnichannel retail marketing solutions.\nCustomer Data Platform (CDP)\n: An effective platform to ingest data from different sources and platforms. There are several products to help capture brand data from different sources.\nKnow more details\n.\nInsights+\n- Provides you with profitable insights with AI-powered customer analytics.\nKnow more details\n.\nUpdated\n3 months ago\nAccessing Capillary\nAsk AI"}
{"url": "https://docs.capillarytech.com/reference", "title": "Overview", "text": "Ask AI\nOverview\nThis page gives you the overview of Capillary APIs.\nCapillary APIs are structured following the REST model. Our APIs use HTTPS protocol and support requests and responses in JSON format.\nHTTP methods\nThe HTTP methods used in Capillary APIs are as follows:\nCommand\nDescription\nPOST\nTo create a new resource.\nPUT\nTo update an existing resource.\nGET\nTo retrieve a resource.\nDELETE\nTo delete a resource.\nPATCH\nTo partially update an existing resource.\nKnow about API URL structure, host URL and headers\nAPI URL structure\nThe below image displays Capillary API structure with an example:\nThe resource ID is a combination of the Entity and the action you tell the API to perform. In this case, adding a\ncustomer\nis the entity and\nadd\nis the action. For more information on entities, see\nEntities management\n.\nHost URLs\nA host is a server to which the API calls are made, usually the API cluster URL.\nThe host URLs are the same for both v1.1, v2, and v3 APIs. However, the v1 APIs mentioned in the documentation have different URLs for each entity. You can see those URLs under the respective section.\nCluster\nHost URL\nAsia\nhttps://apac.intouch.capillarytech.com\nEurope\nhttps://eu.intouch.capillarytech.com\nUS\nhttps://ushc.intouch.capillarytech.com\nAsia 2 (South East Asia)\nhttps://sea.intouch.capillarytech.com\nRequest Headers\nHeader\nDescription\nValue\nAccept\nRequest format from the server side\napplication/json\nfor JSON format\napplication/xml\nfor XML format\nContent-Type\nRepresentation of data at the client side.\napplication/json\nfor JSON format\napplication/xml\nfor XML format\nUser-Agent\nA characteristic string that lets servers and network peers identify the application, operating system, vendor, and/or version of the requesting user agent.\nFormat\n\\{product\\} {product-version} \\{comment\\}\nExample:\nUser-Agent: Mozilla\\{version\\} ({system-information}) \\{platform\\} ({platform-details}) \\{extensions\\}\nCAP-API-ACCESS-TOKEN\nUnique access token generated with the Key and Secret combination. Applicable for OAuth based authentication.\nGenerated token value.\nX-CAP-API-ATTRIBUTION-ENTITY-TYPE\nTill or store from which you want to post the data. This is applicable for the OAuth authentication only.\nTILL, STORE_CODE, STORE_NAME, STORE_EXTERNAL_ID, STORE_EXTERNAL_ID_1, STORE_EXTERNAL_ID_2.\nThe default value is\nTILL\n.\nX-CAP-API-ATTRIBUTION-ENTITY-CODE\nValue of the specified entity type.\nExample: If\nX-CAP-API-ATTRIBUTION-ENTITY-TYPE\nis\nSTORE_CODE\n, then\nX-CAP-API-ATTRIBUTION-ENTITY-CODE\nis the store code that you want to tag to POST data.\nBy default, it considers the Till associated with the client key and secret.\nX-CAP-API-ATTRIBUTION-LOOKUP-TYPE:\n\\{name}\nX-CAP-API-ATTRIBUTION-LOOKUP:\n\\{value}\nSupported only for v2 APIs:\nLets you submit requests on behalf of other TILLs (active TILLs) instead of the authenticating till. In db, the combination of attribution_lookup and lookup_code are mapped to TILL ids and org ids. When a new POST request is placed with the combination of a lookup name and lookup code, the data will be inserted in the db on behalf of the TILL that is mapped to the specified combination.\nNOTE:\n* It is recommended to use OAuth authentication.\nAccepted values are WECHAT and MOBILE_TRIGGER.\nResponse headers\nParameter\nDescription\nX-Cap-Requestid\nA unique ID generated for every promotional request. This ID is sent in the response headers and can be used to track the request and its response end-to-end. For batch transactions, this ID tracks the entire API call, including all promotions processed within the batch.\nx-cap-api-request-uri\nThis standardises endpoint identification by exposing the URI pattern in a response header instead of the raw URI, enabling cleaner metrics, better observability, and easier debugging. Example:\nRequest → GET /v1/promotions/customer/12345\nResponse header → x-cap-api-request-uri: /v1/promotions/customer/customerId\nAPI version\nCapillary's APIs are divided into four versions:\nv1\nv1.1\nv2\nv3\nThese versions are not merely upgrades; they are a combination of:\nnew sets of APIs that receive new version numbers, and\nupgraded versions of existing APIs.\nThe v1 APIs support both JSON and XML. The V2 and V3 APIs are developed in JSON.\nAdditional features of v2 and v3 APIs\nThe list below highlights the additional features that v2 and v3 APIs support compared to v1 and v1.1 APIs:\nProvide extended support for multiple sources, i.e., you can now manage accounts of different sources such as InStore, MartJack, WeChat, e-commerce and Facebook.\nSupport multiple accounts of a single source. For example, an org could have multiple accounts on WeChat and Facebook. Each account will have a different account ID. You would need to pass the respective account ID when making API calls.\nMerge accounts automatically when the same identifier is registered in different sources. For example, assume that a customer has registered on InStore using his mobile number and e-commerce site using his email ID. Now, if the customer registers the same mobile number on the e-commerce site, the accounts will be merged automatically to a single customer ID. You can retrieve the customer details from various sources of an organization using the unique customer ID.\nNOTE:\nBy default, all the API versions are enabled for the organisations across clusters.\nOrganization setup\nAn organization associated with Capillary is registered in Intouch. Based on the organization’s architecture, store TILL or Store Center accounts are created besides zones, concepts, and stores. Only Capillary users have access to register an organization in inTouch. For more information, contact your Account Manager or Delivery Manager of Capillary.\nTo set up an organization as a Capillary admin, see\nSetting up Organization\n."}
{"url": "https://docs.capillarytech.com/page/developerdocumentation", "title": "Developer Documentation", "text": "Developer Documentation\nDocumentation Hub\nExtension\nDev Console\nVulcan\nSDKs"}
{"url": "https://docs.capillarytech.com/page/product-release-notes", "title": "Release Notes", "text": "Release Notes\nRelease Notes\n2025\nJan-Feb-Mar\nEngage+\nLoyalty+\nIncentives\nInsights+\nCDP\nApr-May-June\nLoyalty+\nIncentives\nEngage+\nInsights+\nCDP\nNEO Extension\nJul-Aug-Sept\nLoyalty+\nIncentives\nEngage+\nRewards+\nCDP\nOct-Nov-Dec\nLoyalty+\nIncentives\nEngage+\nInsights+\nCDP\n2024\nJan-Feb-Mar\nLoyalty+\nIncentives\nEngage+\nInsights+\nCDP\nApr-May-June\nLoyalty+\nIncentives\nEngage+\nInsights+\nCDP\nJul-Aug-Sept\nLoyalty+\nIncentives\nEngage+\nRewards+\nOct-Nov-Dec\nLoyalty+\nIncentives\nEngage+\nInsights+\nCDP\n2023\nJan-Feb-Mar\nLoyalty+\nIncentives\nEngage+\nInsights+\nCDP\nApr-May-June\nLoyalty+\nIncentives\nEngage+\nInsights+\nCDP\nJul-Aug-Sept\nLoyalty+\nIncentives\nEngage+\nInsights+\nCDP\nOct-Nov-Dec\nLoyalty+\nIncentives\nEngage+\nInsights+\nCDP\n2022\nJan-Feb-Mar\nLoyalty+\nEngage+\nInsights+\nCDP\nApr-May-June\nLoyalty+\nEngage+\nInsights+\nCDP\nJul-Aug-Sept\nLoyalty+\nEngage+\nInsights+\nCDP\nOct-Nov-Dec\nLoyalty+\nEngage+\nInsights+\nCDP\n2021\nJan-Feb-Mar\nInsights+\nEngage+\nCDP\nApr-May-June\nInsights+\nEngage+\nCDP\nJul-Aug-Sept\nInsights+\nEngage+\nCDP\nOct-Nov-Dec\nLoyalty+\nEngage+\nCDP\nGet the Latest Updates on Our Releases!\nSubscribe"}
{"url": "https://docs.capillarytech.com/login?redirect_uri=/", "title": "ReadMe", "text": ""}
{"url": "https://docs.capillarytech.com/docs/loyalty-overview", "title": "Introduction to Loyalty+", "text": "Introduction to Loyalty+\nLoyalty+ is a platform that helps you incentivize your customers on the basis of their enrollment and engagement in the form of coupons and points. It lets you influence your customer lifecycle by rewarding them for different activities including transactions, and profile updates. Through effective loyalty programs, you can motivate your customers to become more loyal and increase repeat transactions.\nLoyalty+ helps you treat your customers differently, track their behavior, monitor their interactions, and incentivize them accordingly creating genuine connections.  Through effective loyalty programs, you can maximize customers' lifetime and maximize ROI.\nWith Loyalty+, you can grade your customers with loyalty tiers and depending on their purchase value and incentivize them separately by providing better benefits to highly loyal customers. It upsurges customer engagement with your brand and drives their interactions. The embedded rule sets with an expression editor provide complete flexibility in creating simple to any complex conditions that you want to evaluate to trigger an action. You can perform several actions such as activity-based tier upgrade, points allocation,  communication, issue coupon, renew tier, issue points to referrer or referee, and more.\nLoyalty programs are beneficial to both customers and brands as they not only provide benefits to customers but also build relationships with them.\nUpdated\n4 months ago\nFAQ\nFeatures of loyalty+\nAsk AI"}
{"url": "https://docs.capillarytech.com/docs/introduction-to-engage", "title": "Introduction to Engage+", "text": "Introduction to Engage+\nFlutter SDK Documentation\nEngage+ Overview\nAccessing Engage\nUpdated\n4 months ago\nMarvel games\nEngage+ Overview\nAsk AI"}
{"url": "https://docs.capillarytech.com/docs/insights-overview", "title": "Introduction to Insights+", "text": "Introduction to Insights+\nWhat is Insights+ and how can you leverage it?\nCapillary’s Insights+ is an effective business intelligence tool that offers a 360-degree analysis of an organization's business data. With Insights+ capabilities you can measure metrics such as the revenue impact of your marketing campaigns, loyalty program and much more to effortlessly optimize future performance.\nLeveraging such insights can:\nHelp you drive product innovation.\nTrack and improve the impact of product launches in real-time.\nAccelerate business outcomes across the lifecycle.\nDrive loyalty\nMake smart, quick and informed decisions with data-driven insights.\nWhere does Insights+ lie with respect to Loyalty+, Engage+ and CDP?\nInsights+ essentially consumes data from your Loyalty+, Engage+ and CDP platforms to magically transform it into useful data insights. Further, it provides multiple capabilities for you to visualize and analyze your data effectively so that you can take smart, quick and informed decisions to optimize your business performance.\nWhat are the building blocks of Insights+?\nThe nascent data in Insights+ transforms into KPIs, dimensions, charts and then finally into reports. KPIs are\nKey Performance Indicators\nand gives a\nquantifiable measure of performance\n. Eg Total bill Amount. Now upon the KPI you can apply\nDimensions\nwhich are essentially\nattributes\nof the KPIs . Dimensions are used to split the KPI data based on certain attributes and\ncreate charts\n. Insights+ is equipped with over 50 predefined charts and 250 key performance indicators (KPIs).\nA collection of charts is designated as reports on Insights. Refer to the image below to understand the building block of Insights+\nThere are two types of reports available in Insights.\nStandard Reports\n: These are product wise predefined reports created by Capillary which gives you an overview of each product performance\nCustom Reports\n:  Capillary gives you the provision to create personalized reports as per your requirements.\nWhat are the advanced features that Insights+ provides?\nApart from reports, Insights+ provides advanced capabilities such as, Customer Segmentation and Data Exports.\nCustomer Segmentation&#xA;\nWith Customer Segmentation feature you can segment the customers based on their behavior and demographics. Analytics on these segments will help you to understand the customer’s behavior better and subsequently make more effective business decisions in terms of pricing, offers and retention strategies. An excellent example of the same is RFM segmentation.\nData Exports&#xA;\nData Export helps you export the CRM data available in the Capillary's system to an FTP location or internal server. You can export data related to customers, transactions, coupons, points, Footfall, and campaigns. You can create an export job using templates. Each template is a combination of either KPIs or facts, and dimensions.\nUpdated\n4 months ago\nIntroduction\nAsk AI\nTable of Contents\nWhat is Insights+ and how can you leverage it?\nWhere does Insights+ lie with respect to Loyalty+, Engage+ and CDP?\nWhat are the building blocks of Insights+?\nWhat are the advanced features that Insights+ provides?"}
{"url": "https://docs.capillarytech.com/docs/member-care-old-ui", "title": "Member Care Old UI", "text": "Member Care Old UI\nMember Care helps you manage your customer database in an efficient manner and resolve issues customer issues. It helps you take data driven decisions using a complete data toolkit.\nMember Care is a web application that lets you manage and view customer accounts, goodwill requests, identifier change requests, and tickets. You can also view customer activities, behavioral events, and interactions.\nThe module lets you do the following:\nSearch for customers using names or identifiers across sources such as InStore, Facebook, WeChat, MartJack, and WebEngage.\nRegister a new customer - Add the registration page configured for your microsite on Member Care to register and update customers through Member Care.\nView a customer's activity and interaction information such as transactions, points, coupons, and communications.\nManage identifier change and account merge requests - Create identifier change requests such as for change in mobile number/email ID/external ID, account merge, and mobile number reallocation.  Also, process change requests on Member Care.\nEnsures better safety for identifier change requests with OTP-based verification.\nManage customers' subscriptions and fraud status.\nIssue cards from an active card series to a customer.\nView details of cart and catalog promotions of a customer.\nView loyalty events that are pending or failed and re-initiate the process through Member Care.\nIssue Goodwill points and coupons to loyalty program customers.\nSearch the details of coupons issued to customers.\nUpdated\n4 months ago\nIntroduction\nAsk AI"}
{"url": "https://docs.capillarytech.com/reference/apioverview", "title": "Overview", "text": "Ask AI\nOverview\nThis page gives you the overview of Capillary APIs.\nCapillary APIs are structured following the REST model. Our APIs use HTTPS protocol and support requests and responses in JSON format.\nHTTP methods\nThe HTTP methods used in Capillary APIs are as follows:\nCommand\nDescription\nPOST\nTo create a new resource.\nPUT\nTo update an existing resource.\nGET\nTo retrieve a resource.\nDELETE\nTo delete a resource.\nPATCH\nTo partially update an existing resource.\nKnow about API URL structure, host URL and headers\nAPI URL structure\nThe below image displays Capillary API structure with an example:\nThe resource ID is a combination of the Entity and the action you tell the API to perform. In this case, adding a\ncustomer\nis the entity and\nadd\nis the action. For more information on entities, see\nEntities management\n.\nHost URLs\nA host is a server to which the API calls are made, usually the API cluster URL.\nThe host URLs are the same for both v1.1, v2, and v3 APIs. However, the v1 APIs mentioned in the documentation have different URLs for each entity. You can see those URLs under the respective section.\nCluster\nHost URL\nAsia\nhttps://apac.intouch.capillarytech.com\nEurope\nhttps://eu.intouch.capillarytech.com\nUS\nhttps://ushc.intouch.capillarytech.com\nAsia 2 (South East Asia)\nhttps://sea.intouch.capillarytech.com\nRequest Headers\nHeader\nDescription\nValue\nAccept\nRequest format from the server side\napplication/json\nfor JSON format\napplication/xml\nfor XML format\nContent-Type\nRepresentation of data at the client side.\napplication/json\nfor JSON format\napplication/xml\nfor XML format\nUser-Agent\nA characteristic string that lets servers and network peers identify the application, operating system, vendor, and/or version of the requesting user agent.\nFormat\n\\{product\\} {product-version} \\{comment\\}\nExample:\nUser-Agent: Mozilla\\{version\\} ({system-information}) \\{platform\\} ({platform-details}) \\{extensions\\}\nCAP-API-ACCESS-TOKEN\nUnique access token generated with the Key and Secret combination. Applicable for OAuth based authentication.\nGenerated token value.\nX-CAP-API-ATTRIBUTION-ENTITY-TYPE\nTill or store from which you want to post the data. This is applicable for the OAuth authentication only.\nTILL, STORE_CODE, STORE_NAME, STORE_EXTERNAL_ID, STORE_EXTERNAL_ID_1, STORE_EXTERNAL_ID_2.\nThe default value is\nTILL\n.\nX-CAP-API-ATTRIBUTION-ENTITY-CODE\nValue of the specified entity type.\nExample: If\nX-CAP-API-ATTRIBUTION-ENTITY-TYPE\nis\nSTORE_CODE\n, then\nX-CAP-API-ATTRIBUTION-ENTITY-CODE\nis the store code that you want to tag to POST data.\nBy default, it considers the Till associated with the client key and secret.\nX-CAP-API-ATTRIBUTION-LOOKUP-TYPE:\n\\{name}\nX-CAP-API-ATTRIBUTION-LOOKUP:\n\\{value}\nSupported only for v2 APIs:\nLets you submit requests on behalf of other TILLs (active TILLs) instead of the authenticating till. In db, the combination of attribution_lookup and lookup_code are mapped to TILL ids and org ids. When a new POST request is placed with the combination of a lookup name and lookup code, the data will be inserted in the db on behalf of the TILL that is mapped to the specified combination.\nNOTE:\n* It is recommended to use OAuth authentication.\nAccepted values are WECHAT and MOBILE_TRIGGER.\nResponse headers\nParameter\nDescription\nX-Cap-Requestid\nA unique ID generated for every promotional request. This ID is sent in the response headers and can be used to track the request and its response end-to-end. For batch transactions, this ID tracks the entire API call, including all promotions processed within the batch.\nx-cap-api-request-uri\nThis standardises endpoint identification by exposing the URI pattern in a response header instead of the raw URI, enabling cleaner metrics, better observability, and easier debugging. Example:\nRequest → GET /v1/promotions/customer/12345\nResponse header → x-cap-api-request-uri: /v1/promotions/customer/customerId\nAPI version\nCapillary's APIs are divided into four versions:\nv1\nv1.1\nv2\nv3\nThese versions are not merely upgrades; they are a combination of:\nnew sets of APIs that receive new version numbers, and\nupgraded versions of existing APIs.\nThe v1 APIs support both JSON and XML. The V2 and V3 APIs are developed in JSON.\nAdditional features of v2 and v3 APIs\nThe list below highlights the additional features that v2 and v3 APIs support compared to v1 and v1.1 APIs:\nProvide extended support for multiple sources, i.e., you can now manage accounts of different sources such as InStore, MartJack, WeChat, e-commerce and Facebook.\nSupport multiple accounts of a single source. For example, an org could have multiple accounts on WeChat and Facebook. Each account will have a different account ID. You would need to pass the respective account ID when making API calls.\nMerge accounts automatically when the same identifier is registered in different sources. For example, assume that a customer has registered on InStore using his mobile number and e-commerce site using his email ID. Now, if the customer registers the same mobile number on the e-commerce site, the accounts will be merged automatically to a single customer ID. You can retrieve the customer details from various sources of an organization using the unique customer ID.\nNOTE:\nBy default, all the API versions are enabled for the organisations across clusters.\nOrganization setup\nAn organization associated with Capillary is registered in Intouch. Based on the organization’s architecture, store TILL or Store Center accounts are created besides zones, concepts, and stores. Only Capillary users have access to register an organization in inTouch. For more information, contact your Account Manager or Delivery Manager of Capillary.\nTo set up an organization as a Capillary admin, see\nSetting up Organization\n."}
{"url": "https://docs.capillarytech.com/reference/android-sdk", "title": "Android SDK", "text": "Android SDK\nFlutter SDK Documentation\nGetting Started\nConfigure Firebase\nConfigure Source Account\nConfigure Gateway\nInstall SDK\nInitialise SDK\nConfigure Push Notifications\nConfigure In-app Messaging\nConfigure Notification Center\nAPI Reference for Event Tracking and User Lifecycle Management\nXiaomi push notification (Push Amplification)\nUpdated\n19 days ago\nWhat’s Next\nInstalling SDK\nAsk AI"}
{"url": "https://docs.capillarytech.com/docs/product-highlights", "title": "Product Highlights", "text": "Product Highlights\nThis section provides weekly product highlights that we send out as newsletters to internal and external users.\nUpdated\n4 months ago\nAuthentication Scenarios and Recommendations\n✈️ Is it a layover or a loyalty stop?\nAsk AI"}
{"url": "https://docs.capillarytech.com/login?redirect_uri=/docs/introduction", "title": "ReadMe", "text": ""}
{"url": "https://docs.capillarytech.com/docs/introduction", "title": "Introduction", "text": "Introduction\nAt Capillary, we offer AI-based cloud-native SaaS products and solutions such as automated loyalty management and consumer data platform. Our diverse product range enables you to manage end-to-end loyalty programs, gain a comprehensive view of your consumers, and offer unified, cross-channel strategies that provide consumers with real-time, omnichannel, personalized, and consistent experience.\nLoyalty+\n- Lets you increase repeat sales with personalized, omnichannel loyalty programs by intelligently rewarding your customers for desired behavior.\nKnow more details\n.\nEngage+\n- This allows you to personalize customer engagement with omnichannel retail marketing solutions.\nCustomer Data Platform (CDP)\n: An effective platform to ingest data from different sources and platforms. There are several products to help capture brand data from different sources.\nKnow more details\n.\nInsights+\n- Provides you with profitable insights with AI-powered customer analytics.\nKnow more details\n.\nUpdated\n3 months ago\nAccessing Capillary\nAsk AI"}
{"url": "https://docs.capillarytech.com/docs/accessing-capillary", "title": "Accessing Capillary", "text": "Accessing Capillary\nThis article provides the different ways of accessing InTouch.\nInTouch is deployed in different clusters. Before accessing InTouch, you need to know the cluster of your org and login credentials provided by Capillary.\nThe following are the links to different clusters of InTouch:\nEU\n:\nhttps://eu.intouch.capillarytech.com\nIndia\n:\nhttps://intouch.capillary.co.in\nAPAC2\n:\nhttps://apac2.intouch.capillarytech.com/\nSG\n:\nhttps://sgcrm.cc.capillarytech.com/\nCN\n:\nhttp://intouch.capillarytech.cn.com/\nUS\n:\nhttps://north-america.intouch.capillarytech.com\nYou can access InTouch in three different ways:\nUsing Capillary InTouch email Id and Password\nUsing Capillary's Official Google account credentials\nUsing SSO\nYou can also enable two-factor authentication (MFA) for your org. To enable this, raise a JIRA ticket with the Capillary Product Support team. If SSO is enabled, Two-factor authentication will not be considered.\nLogin with Capillary Credentials\nGet Started with Capillary InTouch! InTouch is a cloud-based platform that contains the entire product modules, including Organization settings and Workbench. InTouch can be accessed by all authorized users and brands. There are several user roles on InTouch and access is managed at the page level. Not everyone will have write access or access to all modules. Super Admins will provide access to users based on their role and scope.\nEnter the credentials provided by Capillary in Email Id and Password then click on Sign in.\nLogin with Capillary Google account\nYou can now sign in to InTouch using your Capillary Google Workspace account.\nThat means:\nNo need to remember your Intouch password anymore\nNo more Intouch password reset every month\nConvenience and security\nPrerequisite\nYou should have a Capillary Google Workspace account (e-mail address with domain capillarytech.com)\nLogin with Google Credentials\nIn a browser, open the URL of your cluster.\nEU Cluster -\nhttps://eu.intouch.capillarytech.com/auth/login\nSG Cluster -\nhttps://apac2.intouch.capillarytech.com/auth/login\nIndia Cluster -\nhttps://intouch.capillary.co.in/auth/login\nClick on\nSign in with Google\nas shown below.\nEnter the email ID your Capillary Google Workspace account and click\nNext\n.\nEnter your password and click\nNext\n.\nYou will see Intouch Workbench. If you have already signed in to your Capillary Google Workspace account, you will directly see the Workbech page.\nLogin with SSO\nSign in with a single set of credentials used for multiple applications provided by third party like Microsoft ADFS, G Suite SAML. It allows brand users to login to Capillary Intouch using their Identity Provider (IdP).\nSetup SSO with Okta\nWe have partnered with Okta for the integration. SSO setup requires configuring a connection for Capillary in Org’s IdP and setting up Org’s Identity in Okta Admin Console.\nTo set up SSO with Okta, follow these steps.\nStep 1 - Set up a connection for Capillary in Org’s IdP\nCapillary PoC has to send an email to the Capillary access team with a request to set up SSO for the organization providing the following information.\nOrganization name and ID\nEmail domain of the organization. For example, the domain is org.com if the Email Id is\n[email protected]\nCapillary Access team will share the following information, which should be shared with the org PoC\nAssertion Consumer Service (ACS) URL.\nService Provider (SP) Entity ID or Audience URL or Entity ID.\nUser profile attributes need to be passed as SAML assertion - email, first name, and last name. Email ID mandatory.\n[Optional] Attribute that defines if the user has access to Capillary. For example, group, organization. This is required if the org wants to define which employees have access to Capillary.\nOrg PoC will use the above information to create a connection for Capillary in their IdP and respond with the following information.\nIdentity Provider SSO URL.\nIdentity Provider Entity ID.\nIdentity Provider Certificate signature.\nTo know about the SAML terminologies, read How SAML works?\nStep 2 - Setting up Identity Provider in Capillary\nCapillary or Org PoC will share the information provided in step 1.3 (above) with the Capillary Access team.\nCapillary Access team will add an Identity Provider in Okta Admin Console and respond with setup confirmation.\nStep 3 - Provide Capillary application’s access to Org users\nUse Data Import to add Org users to the Capillary application with the appropriate access level.\nWhen you add users on InTouch, a verification email is sent along with the password setup link. The required change to disable the step is in progress and will be released soon. Until then, only Data Import to add Org users.\nStep 4 - Authenticate with Single Sign-on\nOnce setup is completed, the org users can authenticate using SSO as explained in the following steps.\nOn the new sign-in page, click Sign in with SSO.\nIn\nUsername\n, enter a valid email address and click\nNext\n.\nYou are redirected to the Identity provider’s page to complete authentication.\nOn the Identity Provider’s page, enter your registered email address, password, and click\nSign in\n.\nWhen the login is successful, you will see the InTouch home page.\nConfiguring two-factor authentication (MFA)\nTo enable two-factor authentication, raise a JIRA ticket with the Capillary Product Support team. If SSO is enabled, two-factor authentication will not be required.\nTo configure the two-factor authentication settings, follow these steps:\nNavigate to\nIntouch > Organization Setup > Authentication Configurations\n.\nIn the\nValidity Period For 2 Factor Authentication (in days)\nfield, define how long a user's 2FA authentication remains valid before they need to re-authenticate using 2FA. Example: If set to 1 day, a user who logs in with 2FA today won't need to go through 2FA again for the next 24 hours. The maximum number of days that you can set is 90.\nIn the\nValidity Period For OTP Expiration (in minutes)\nfield, define how long a One-Time Password (OTP) remains valid before it expires. Example: If set to 15 minutes, an OTP sent to a user's email or phone will expire after 15 minutes if not used. The maximum allowed time is 15 minutes.\nIn the\nValidity Period For Login Session (in hours)\nfield, define how long a user's login session remains active before they are automatically logged out due to inactivity. Example: If set to 24 hours, a user who logs in will remain logged in for 24 hours unless they manually log out or the session expires due to inactivity. The maximum allowed time is 24 hours.\nUpdated\n2 months ago\nIntroduction\nHome Page Tour\nAsk AI\nTable of Contents\nLogin with Capillary Credentials\nLogin with Capillary Google account\nPrerequisite\nLogin with Google Credentials\nLogin with SSO\nConfiguring two-factor authentication (MFA)"}
{"url": "https://docs.capillarytech.com/docs/home-page-tour", "title": "Home Page Tour", "text": "Home Page Tour\nPost login, you will see a Home page. The Home page consists of several elements to help you find the key information about your products, programs, and links to product pages, tickets, support documentation, Capillary Academy, and much more.\nThe following sections provide detailed information on each section of the Home Page.\nGet Started\nThis section helps you get started with Capillary products. It provides useful links to relevant documentation or support content.\nExplore Features\nThis section provides links to powerful features across Capillary products. They could be major features that were launched recently or even some of the interesting older features.\nLoyalty suggestions\nThis section provides loyalty nudges, which help in taking the right actions for your loyalty programs. These are the same nudges that you see on the Loyalty+ landing page. Having them on the home page provides better accessibility to nudges.\nPerformance\nThis section shows the top level stats of the value delivered from the products. These are the same stats that you would see in the Loyalty+ and Engage+ landing pages.\nQuick links\nThis section provides links to live campaigns, Loyalty Programs, Member Care customer requests, and SMS credits view.\nHelp links\nThis section provides links to the support content. You can find links to access support documentation, tickets, and\nCapillary Academy\n.\nAccess products/Workbench\nYou can access all the products like Loyalty+, Member Care, Insights+, and Workbench on the home page. Navigate to\nSelect Product\nmenu and select the desired option.\nUpdated\nabout 1 month ago\nAccessing Capillary\nEntities Management\nAsk AI\nTable of Contents\nGet Started\nExplore Features\nLoyalty suggestions\nPerformance\nQuick links\nHelp links\nAccess products/Workbench"}
{"url": "https://docs.capillarytech.com/docs/data-entities", "title": "Entities Management", "text": "Entities Management\nAn entity refers to a specific object, like a customer, product, or transaction, that has its own unique details in a system or situation.\nThe different types of entities in Capillary platform are:\nCustomer\n: A customer is an individual who either buys goods/services or subscribes to the organization’s newsletters. An organization refers to a store, business firm, hospital, or restaurant. See\nv2 customer APIs\nand\nv1.1 customer APIs\n.\nTransactions\n: A transaction represents a purchase or return event. The parameters for transaction APIs are configuration dependent. See more details\nv2 transaction APIs\nand\nv1.1 transaction APIs\n.\nStore\n: The store entity holds information about an organization's stores and hierarchy. This entity provides APIs to manage stores. To know more, see\nStore APIs\n.\nProduct\n: The product entity holds all products of an org and product-related information such as size, color, type, and brand. Product APIs allow you to fetch details of a specific product, modify existing details, change a product's brand name, and create new attributes for a product. See\nProduct APIs\n.\nBehavioral Events\n: Behavioral events help capture customer activities such as registration, forgot passwords, and cart abandonment. You can create custom events, fetch event data, configure event fields, and do more with\nEvents APIs\n.\nCard\n: Cards are loyalty identifiers and enable orgs t o run card-based memberships. Cards are associated with a card series and each customer can have multiple cards. A card number or an card external ID is a unique identifier of a customer and is used in fetching customer details. See more about\nCards APIs.\nUser Group\n: The new user group (v2) solves the use cases of both B2B loyalty and B2C loyalty unlike the previous version which was designed for B2C cases. This entity contains APIs to manage user groups. See more about\nUser Group.\nLeads\n: A lead is a purchase an individual is interested in, especially for offline stores. Leads can be created for both loyalty and non-loyalty customers. This entity provides you the APIs to create, manage and fetch leads. See more about\nLeads APIs.\n.\nExtended Fields\nExtended Fields are proposed fields to standardize input values and keys across organizations. These fields make it easier for the Development and Analytics teams to get rid of the complex data that flows into the database, through existing custom fields. Developers control the field names, data types, enum values, and scopes for the extended fields and can capture values based on rules (logical or regex expressions).\nAn extended field is a predefined field with an id, name, entity type, label name, and data type.  Example: GUID, IMEI, making changes, and so on. Extended fields are used in customer registration, profile update, transaction, and transaction line item.\n📘\nExtended fields are created in the backend. You can just use whatever is required for you. to show or hide it on the UI.\nThe following are the topics discussed in this article.\nEntity Types\nSupported Entity Types: customer, regular_transaction, return_transaction, not_interested_transaction, not_interested_return_transaction, regular_lineitem, return_lineitem, not_interested_lineitem, not_interested_return_lineitem.\nData Type\nSupported Data types:  integer, string, double, date-time, standard_enum, custom_enum\ni. Standard Enum: Consists of predefined values that are common for any org. In the DB table, an extended field with the type standard_enum is mapped to one or more values.\nii. Custom Enum: Consists of predefined values for each field and each value is mapped to a specific org. A value can be mapped to different orgs.\nThe following example shows the values of an extended field are mapped to different orgs (scope_ids).\nJSON\nid: 1\n\n      ef_id: 9\n\n   scope_id: 797\n\n      value: 他他他他\n\n created_by: -1\n\n created_on: 2017-03-23 15:18:16\n\nmodified_by: -1\n\nmodified_on: 2017-03-23 15:18:16\n\n*************************** 2. row ***************************\n\n         id: 2\n\n      ef_id: 9\n\n   scope_id: 1115\n\n      value: 他他他\n\n created_by: -1\n\n created_on: 2017-03-23 15:22:39\n\nmodified_by: -1\n\nmodified_on: 2017-03-23 15:22:39\nProperties of Extended Fields\nFollowing are the properties of extended fields.\nThe combination of name and entity type for extended fields should be unique\nExtended fields are not case-sensitive\nMapping of Extended Fields\nOn a broader view, extended fields are mapped to vertical ids, and vertical ids are mapped to org ids as shown in the following diagram.\nVerticals and Vertical IDs\nA vertical is a group that defines the nature of the business. An org can have multiple verticals mapped to it.\nFor example, if an org ABC sells fitness items and apparel, and another org XYZ sells stationery and sports items, both orgs have one common vertical – sports.\nFollowing are the properties of verticals:\nEach vertical is mapped to the relevant set of extended fields\nThe vertical name should be unique across the table\nMapping Extended Fields and Vertical Ids\nFollowing are the properties of extended fields and vertical ids mapping:\nEach extended field can only be mapped to one vertical id\nOne vertical id can be mapped to multiple extended fields\nAn extended field with vertical id ‘-1’ is available for all the orgs. These are global fields and can be used by any org\nMapping Vertical IDs and Org\nFollowing are the properties of vertical ids and org ids mapping table\nOrg and verticals have a many-to-many mapping\nAn org cannot use an extended field that is not within the verticals associated with it.\nAny org can use extended fields with the vertical id ‘-1’ ( fields)\nValidation Rules\nA validation rule can contain a logical or regex expression that evaluates the extended field values. Validation rules verify whether a field value meets the defined standards before saving it to the Mongo DB.\nThat is, If a rule is applied on an extended field, a validation check is performed whenever the field value is received. Once the field value is validated successfully, it will be saved to the Mongo DB.\nExamples for logical rules: >, <, >=, <=, =\nWe first create rules (>, <) and then map each rule to the extended fields. Following are the properties of validation rules:\nMultiple rules can be applied to an extended field\nOne rule can be applied to different fields\nOther Validations\nApart from the rules validation, scope validation is also performed which is defined in the DB tables\nExtended fields with custom enum values can be used only by orgs that are mapped to it\nAn org can use only extended fields that are mapped to it through vertical ids\nExtended fields with vertical id mapping as -1 can be used by any org\nData fields\nStandard Fields\n: These are fields created for a specific module to capture basic details. This could be fields at customer level, transaction level, line-item level, coupon level and so on. Standard fields are created by Capillary and are available by default for each module.\nExtended Fields\n: Extended Fields are proposed fields to standardize input values and keys across organizations. These fields make it easier for the Development and Analytics teams to get rid of the complex data that flows into the database, through existing custom fields. Developers control the field names, data types, enum values, and scopes for the extended fields and can capture values based on rules (logical or regex expressions). See more about\nExtended fields\n.\nCustom Fields\n: As the name suggests there are custom fields that orgs need to capture for a specific module. It could be of any datatype and value. Reporting is not possible on custom field values. See more about\nCustom fields.\nExtended Fields\nExtended Fields are proposed fields to standardize input values and keys across organizations. These fields make it easier for the Development and Analytics teams to get rid of the complex data that flows into the database, through existing custom fields. Developers control the field names, data types, enum values, and scopes for the extended fields and can capture values based on rules (logical or regex expressions).\nAn extended field is a predefined field with an id, name, entity type, label name, and data type.  Example: GUID, IMEI, making changes, and so on. Extended fields are used in customer registration, profile update, transaction, and transaction line item.\nWhen an extended field is added to collect additional information, it starts accumulating data within our system. However, this data isn’t immediately visible in the user interface for audience creation.\nIf you want to build an audience using filters based on the information stored in these extended fields, you need to raise a request to the Customer Success Team to create these filters. Once implemented, you can use these filters to create audiences. For more information refer\naudience creation using filters\n.\n📘\nExtended fields are created at the backend. You can select the fields to be displayed on the UI.\nThe following are the topics discussed in this article.\nEntity Types\nSupported Entity Types: customer, regular_transaction, return_transaction, not_interested_transaction, not_interested_return_transaction, regular_lineitem, return_lineitem, not_interested_lineitem, not_interested_return_lineitem.\nData Type\nSupported Data types:  integer, string, double, date-time, standard_enum, custom_enum\ni. Standard Enum: Consists of predefined values that are common for any org. In the DB table, an extended field with the type standard_enum is mapped to one or more values.\nii. Custom Enum: Consists of predefined values for each field and each value is mapped to a specific org. A value can be mapped to different orgs.\nThe following example shows the values of an extended field are mapped to different orgs (scope_ids).\nJSON\nid: 1\n\n      ef_id: 9\n\n   scope_id: 797\n\n      value: 他他他他\n\n created_by: -1\n\n created_on: 2017-03-23 15:18:16\n\nmodified_by: -1\n\nmodified_on: 2017-03-23 15:18:16\n\n*************************** 2. row ***************************\n\n         id: 2\n\n      ef_id: 9\n\n   scope_id: 1115\n\n      value: 他他他\n\n created_by: -1\n\n created_on: 2017-03-23 15:22:39\n\nmodified_by: -1\n\nmodified_on: 2017-03-23 15:22:39\nProperties of Extended Fields\nFollowing are the properties of extended fields.\nThe combination of name and entity type for extended fields should be unique\nExtended fields are not case-sensitive\nMapping of Extended Fields\nOn a broader view, extended fields are mapped to vertical ids, and vertical ids are mapped to org ids as shown in the following diagram.\nVerticals and Vertical IDs\nA vertical is a group that defines the nature of the business. An org can have multiple verticals mapped to it.\nFor example, if an org ABC sells fitness items and apparel, and another org XYZ sells stationery and sports items, both orgs have one common vertical – sports.\nFollowing are the properties of verticals:\nEach vertical is mapped to the relevant set of extended fields\nThe vertical name should be unique across the table\nMapping Extended Fields and Vertical Ids\nFollowing are the properties of extended fields and vertical ids mapping:\nEach extended field can only be mapped to one vertical id\nOne vertical id can be mapped to multiple extended fields\nAn extended field with vertical id ‘-1’ is available for all the orgs. These are global fields and can be used by any org\nMapping Vertical IDs and Org\nFollowing are the properties of vertical ids and org ids mapping table\nOrg and verticals have a many-to-many mapping\nAn org cannot use an extended field that is not within the verticals associated with it.\nAny org can use extended fields with the vertical id ‘-1’ ( fields)\nValidation Rules\nA validation rule can contain a logical or regex expression that evaluates the extended field values. Validation rules verify whether a field value meets the defined standards before saving it to the Mongo DB.\nThat is, If a rule is applied on an extended field, a validation check is performed whenever the field value is received. Once the field value is validated successfully, it will be saved to the Mongo DB.\nExamples for logical rules: >, <, >=, <=, =\nWe first create rules (>, <) and then map each rule to the extended fields. Following are the properties of validation rules:\nMultiple rules can be applied to an extended field\nOne rule can be applied to different fields\nOther Validations\nApart from the rules validation, scope validation is also performed which is defined in the DB tables\nExtended fields with custom enum values can be used only by orgs that are mapped to it\nAn org can use only extended fields that are mapped to it through vertical ids\nExtended fields with vertical id mapping as -1 can be used by any or\nUpdated\n4 months ago\nHome Page Tour\nCustomer entity\nAsk AI\nTable of Contents\nExtended Fields\nData fields\nExtended Fields"}
{"url": "https://docs.capillarytech.com/docs/customer_entity", "title": "Customer entity", "text": "Customer entity\nThis page provides you with information on customer entity\nThe Customer entity is the focal point around which all our data revolves. This entity includes information about each customer, ranging from essential contact details to demographic and geographic data. In addition, It also includes information about their purchase history, behavioural activities, loyalty details, the user groups they are part of, reward and coupon details and other related information.\nWithin this framework, the source through which a customer is registered is called a customer data source. This source serves as the initial touchpoint, capturing the basic details that contribute to the making of a customer profile. Additionally, the channels available for communication with the customer are referred to as customer communication channels. These channels play a pivotal role in establishing meaningful connections and fostering effective communication with customers.\nRelated entities\nA customer entity can have information related to other entities and similarly the other entities can include customer entity information. For example, card entity, and transaction entity can include information related to customer entity and vice-versa.\nSupported objects and fields\nThe below image provides you with information about the supported objects and fields in the customer entity.\nUnderstanding data sources\nIn our system, a \"Source\" refers to the origin or system from which customer information is integrated. Each source represents a unique system, integration, or data feed.\nCustomers may be represented differently across various sources. For instance, a customer named \"Christopher\" in one source could appear as \"Christo\" in another. This discrepancy underscores the necessity for identity resolution to establish a unified and accurate view of the customer.\nData integration involves collecting information from different sources, including identifiers, subscription statuses, and email addresses. This process merges and creates a consolidated, reliable customer profile. When the system receives information from the same identifier already present but from a different source, it analyzes,\nmerges\n, and adds it to the existing customer profile under a different source.\nOn Member Care, within the customer profile, you can view all the sources from which the customer registered.\nSupported data sources\nThe entity supports the following data sources:\nFacebook\nWeb_engage\nWeChat\nInstore\nE-Commerce\nWebsite\nLine\nMobile-APp\nLinkedin\nMpush-FCM\nMapp_SDK\nOAuth_External\nUnderstanding communication channels\nA \"Communication Channel\" represents the medium through which customers receive messages. Examples include SMS, push notifications, web engagement, and POS (Point of Sale) systems.\nSome sources may act as both a source and a communication channel. For instance, WeChat not only provides customer information but also serves as a communication channel.\nCommunication channels can vary, and information may be collected from diverse sources. For instance, a customer's communication channel, such as WeChat, may exclusively come from the WeChat system.\nOverlapping scenarios may arise where the source and communication channel are the same, while in other cases, they can be different. The system is designed to handle these variations effectively.\nSupported communication channels\nThe entity supports the following communication channels:\nWeChat\nMobile\niOS\nLine\nEmail\nWhatsApp\nAndroid\nPostmail\nManaging customer lifecycle with customer status\nA customer status defines the relationship between a brand and a customer. For example, a customer who interacts often with the brand can be defined as an active customer. Further, these statuses can be used to run the loyalty program and assign coupons, reward points etc accordingly. For example, more offers can be offered to a customer to make an inactive customer to active customer..\nActivating customer status\nTo activate customer status for your organisation, navigate to\nOrganisation settings> Miscellaneous> Customer Status configuration\nand select the\nEnable customer status\ncheck box.\nOn enabling the customer status, the existing fraud status will be replaced by the customer status function.\nTypes of customer statuses\nThe various customer statuses available in the Capillary platform that you can configure are:\nActive\nSuspended\nDeleted\nFraud suspected\nFraud confirmed\nInternal\nPending deletion\nCreating a custom label\nYou can click the\nCreate new label\noption in the customer label and enter a new label name to assign a custom name for the status. You can add multiple labels if required. The first status label that you create is set as the default status value.\nActive customer status\nThe active status can be used to indicate that the customer is active.\n📘\nNOTES:\nThere are no restrictions for customers with Active status.\nAll customers are marked Active by default.\nSuspended, Fraud suspected, Fraud confirmed, and Internal customer status\nYou can restrict the following operations for the users with Suspended, Fraud suspected, Fraud confirmed or Internal status.\nRestriction\nDescription\nBlock coupons redemption\nRestrict from redeeming coupons.\nBlock issual of loyalty promotions\nRestrict from receiving points.\nBlock identifier change and account merge\nRestrict from account merging and identifier change requests.\nBlock issual of badges\nThis is a future development feature.\nBlock issual of coupons\nRestrict from providing coupons.\nBlock enrollment into loyalty promotions\nThis is a future development feature.\nBlock points allocation\nRestrict from providing points.\nWhen this restriction is added on any label, then the points allocation from any points-related action (like transaction point allocation, allocation points, target point allocation, issue to the referrer, issue to referee, goodwill points, import profile) will be blocked for the customer.\nBlock points redemption\nRestrict from redeeming points.\nBlock tier upgrade\nRestrict from tier upgrade.\nBlock transaction\nRestrict future transactions.\nMark transaction outlier\nMark the transactions made by the selected label(s) as outliers.\nTo restrict access, select the individual status labels or all the created status labels from the desired restriction drop-down. Click\nSelect\n, and then click\nUpdate\n.\nDeleted customer status\nThe deleted status allows you to block every action for customers with this status. To configure restriction, from the\nBlock everything\ndrop-down, select the individual custom labels or select all labels created for Deleted. Click\nSelect\nand then click\nUpdate\n.\nPending deletion customer status\nThis status is used to indicate the status of customers for whom a deletion request is raised. For\nPending Deletion\n, whenever a PII deletion request is triggered, a label Deletion_pending is automatically created and assigned to the customer, regardless of any other label that may have been created and set as default.\nManaging subscription\nA subscription refers to the voluntary action taken by customers to either opt in or opt out of receiving promotional or transactional communications from specific sources within the organization.\nYou can configure the promotional and transactional subscription settings for a customer according to their preferences. For more information, refer to the\nSubscription management\ndocumentation.\nYou can also view and set the subscription statuses on the customer's profile on\nMember Care\n.\nManaging loyalty status\nA customer can be of two types: a loyalty customer and a non-loyalty customer. A loyalty customer is a registered member of your organization's loyalty program, while non-loyalty customers are those who have not enrolled in your loyalty program but have subscribed using their mobile number or email ID with the organization. Transactions for these customers are tagged to their respective identifiers (mobile number/email ID).\nYou can define the loyalty type of a customer during\ncustomer registration\nor while\nadding a transaction\n.\nThe loyalty status of a customer is displayed on the\nCustomer status\nin the customer's Member Care profile.\nManaging test and control status\nThe customer list is split into a test and control group. Customers in the test audience group receive campaign communications, while those in the control audience group do not. The test and control statuses are displayed based on the group to which they belong. These statuses are maintained by the brands or auto-assigned and can be changed either through\nMember Care\nor\nConnect+\n.\nManaging fraud status\nYou can configure the fraud management and the statuses as per your requirements. For more information on fraud management, refer to the\nFraud management documentation\n.\n📘\nNote\nIf customer status is enabled, the fraud status will be superseded by the customer status.\nGetting started\nSetup customer fields\nStandard fields, Extended fields and Custom fields are the fields that are applicable for Customer entity. For more information on these, refer to the\ndocumentation on fields\n.\nSetup customer configs\nTo configure customer registration, follow these steps.\nOn the InTouch home page, navigate to\nProfile > Organization Settings > Miscellaneous > Registration Configuration\n.\nConfigure the required fields based on the description provided in the following table.\nOPTION\nDESCRIPTION\nCONF_REGISTRATION_PRIMARY_KEY\nChoose the primary identifier of the customer. This is the unique identifier of the customer required for registration.\nCONF_ALLOW_REGISTRATION_FROM_ANY_IDENTIFIERS\nSelect this to allow the registration of customers using any of the identifiers.\nCONF_USERS_IS_EMAIL_REQUIRED\nCheck this if email id is a mandatory parameter to register a customer.\nCONF_USERS_IS_EMAIL_UNIQUE\nCheck this to make the email ID a unique identifier. If any registered email ID is registered the accounts will be merged automatically.\nCONF_USERS_USE_EXTERNAL_ID\nCheck this to capture the external ID of customers while registering.\nCONF_USERS_IS_EXTERNAL_ID_REQUIRED\nCheck this to make the external ID mandatory to register a customer. Not applicable if the external ID is the primary identifier.\nCONF_USERS_IS_MOBILE_REQUIRED\nCheck this to make the mobile number mandatory to register a customer. Not applicable if mobile is the primary identifier.\nCONF_ALLOW_MOBILE_UPDATE\nCheck this to allow updating registered mobile numbers of customers.\nCONF_ALLOW_EMAIL_UPDATE\nCheck this to allow updating registered email IDs of customers.\nCONF_LOYALTY_ALLOW_EXTERNAL_ID_UPDATE\nCheck this to allow updating registered external IDs of customers.\nCONF_PRIMARY_IDENTIFIER_STRICT_CHECK\nCheck this to verify if the primary identifier is already registered in a different account.\nAn error message will be displayed that the secondary identifier match is found in a different account but not the primary identifier.\nCONF_SKIP_SECONDARY_ID_ON_PRIMARY_MISMATCH\nCheck this to skip account merging if only secondary identifiers match but primary identifiers are different.\nA new customer will be created with the provided primary identifier. The secondary identifier will be ignored automatically.\nUSE_CRM_REGISTRATION_INFO_FROM_BASE_STORE\nNA\nCONF_GIFT_CARD_ENABLED\nCheck this to enable gift card\nCONF_ORG_CURRENCY_CODE\nSet the ISO currency code of the org.\nCONF_ORG_CURRENCY_SYMBOL\nSet the currency symbol of the org as per the currency code.\nCONF_MIN_REGISTRATION_DATE\nSet the minimum date and time from which the registration is valid. Registration fails if the registration date and time is prior to the value set herein ( especially through API or Data Import).\nSERVER_VALIDATION_PIN_SMS\nConfigure the verification SMS that will be sent to customers to validate the registered mobile numbers. Use the tag {{pin}} to insert the verification PIN in the message.\nFor example, Please use the code {{pin}} to verify your mobile number.\nSERVER_VALIDATION_PIN_EMAIL\nConfigure the verification email that will be sent to customers to validate the registered email ID. Use the tag {{pin}} to insert the verification PIN in the message.\nFor example, Please use the code {{pin}} to verify your email ID.\nCONF_LOYALTY_REGISTER_CUSTOMER_GENDER\nChoose the custom field for gender from the drop-down.\nCONF_LOYALTY_REGISTER_CUSTOMER_AGE\nChoose the custom field for age from the drop-down.\nCONF_CLIENT_V2_API_ENABLED\nCheck this if sources other than InStore are supported for the org.\nCONF_GEN_CARD_NUMBER_AS_EXTERNAL_ID_ENABLED\nCheck this to enable generating external IDs automatically from the Capillary end.\nSOURCE_ACCOUNTS_EXTERNALID_ENABLED\nCheck this to enable support for external ID capture.\nCONF_CARD_NUMBER_GENERATION_ENABLED\nCheck this to enable generating card numbers automatically from the Capillary end.\nCONF_CARD_NUMBER_SUFFIX\nSpecify the suffix you want to have for the external card (supports alphanumeric value).\nCONF_CARD_NUMBER_PREFIX\nSpecify the prefix for the external card (supports alphanumeric value). For example, BRAND20.\nCONF_CARD_NUMBER_LENGTH\nSpecify the length of the external card. You can have up to 50 characters.\nCONF_CARD_NUMBER_OFFSET\nSpecify the card sequence numbers that you want to ignore from the top. For example, if you set 10, the first 10 cards will be considered invalid.\nCheck this to enable primary identifier checks when registering or updating customers.\nCONF_IDENTIFIERS_SYNC_ENABLED\nCheck this to synchronize identifiers such as mobile numbers, email addresses, and external IDs between Instore profiles and V2 profiles (external profiles such as WebEngage)  within the system.\n-\n*  When the identifier change request is made from Membercare, any changes to identifiers (mobile/email, externalId) will update both the Instore profile and the corresponding V2 profile identifiers.\n*Note: **The Customer Unique Identifier (CUID) will not change in V2 profiles if this identifier exists.\n*- ** To make changes to the external profile CUID, the following steps are performed after the identifier change request on Membercare:\n-Creation of a new payload with updated identifiers and pushing it to an S3 bucket.\n--Execution of\nv2/integrations/customer/upsert API\nwith the source set to\nWEB_ENGAGE\nand the new payload.  The upsert API ensures that the changes are reflected in all instances of the profile, including updating the CUID and communication channels.\n*Default value: **False.\n-CONF_CLIENT_DEFAULT_COUNTRYCODE_PASSED\nCheck this to auto select country code to the mobile number entered on the registration screen. The validation sequence will be as follows.\nvalidates initial letters of mobile numbers for base or supported currency codes.\ninserts each country code and validates the number. First with base country code, followed by supported country codes.\nExternal ID configuration\nYou can use the below configurations to enable the generation of a customised external ID for the customers. Once this configuration is enabled, the external ID in the customer add API payload will be replaced with the generated external ID.\n❗️\nAttention\nThere is no UI to enable this configuration. You need to raise a JIRA ticket (\nsample ticket\n) to the sustenance team to enable these configurations. Turn around time is five days.\nConfiguration & Description\nValue\nCONF_CARD_NUMBER_GENERATION_ENABLED (Mandatory)\nEnables external ID number generation.\n0 - Disable\n1 - Enable\nSOURCE_ACCOUNTS_EXTERNALID_ENABLED (Mandatory)\nEnables external ID generation only for the defined source account in the Customer ADD API.\n[\"INSTORE:\"] -  Instore\n[\"web_engage:1234\"][\"web_engage:1234\"] -\nWebengage where 1234 is the account id\n[\"INSTORE:\", \"web_engage:1234\"][\"INSTORE:\", \"web_engage:1234\"]  -  Both Instore and webengage where 1234 is account id.\nCONF_CARD_CHECKSUM_DIGIT_ALGO (Mandatory)\nDefines the algorithm to generate the checksum. The checksum is added as the last digit of the external ID.\nLUHN_ALGO (MOD10), MOD7_ALGO, AUTO_INC, RANDOM, RANDOM_LUHN, RANDOM_MOD7\nCONF_CARD_NUMBER_LENGTH (Mandatory)\nDefines the external ID length. This is the total length of the external id including prefix, suffix, and checksum.\nExample: If card number length = 12, Prefix = 1234, Suffix = 3401, Offset = 3000, and algorithm = AUTO_INC, then card number can be 123430003401.\nNote:\nSuffix is not applicable for MOD7 and LUHN_ALGO (MOD10) algorithms.\nIntegers ranging from 1-50.\nCONF_CARD_NUMBER_OFFSET (Optional)\nDefines the offset value for the external ID. For example for a card number series with offset value 3000, can be 111200000030004, 111200000030015 etc.\nAny integer value\nCONF_CARD_NUMBER_PREFIX  (Optional)\nDefines the prefix for the external ID number.\nAny integer value but prefix + suffix + system-generated number should not be more than 50.\nCONF_CARD_NUMBER_SUFFIX  (Optional)\nDefines the SUFFIX for the external ID number. This is only applicable for AUTO_INC alogrithm.\nAny integer value but prefix + suffix + system-generated number should not be more than 50.\nCONF_VALUES_TO_INCLUDE_FOR_CHECKSUM_DIGIT  (Optional)\nSpecifies whether the prefix should be considered when generating the checksum value.\nPREFIX - Prefix is considered\nNONE - Prefix is not considered\nCustomer ingestion restriction configuration\n❗️\nWarning\nThere is no UI to enable this configuration. You need to raise a JIRA ticket (\nsample ticket\n) to the sustenance team to enable these configurations. Turn around time is five days.\nCONF_RESTRICT_ORPHAN_V2_PROFILE\n- This configuration prevents the ingestion of a WebEngage profile into the Capillary platform for a specific customer if they do not already have an existing Instore profile.\nSetup customer status\nFor configuring customer status, refer to the\nActivating customer status section\n.\nDual eligibility\nThe Dual Eligibility feature allows you to register multiple users with the same secondary identifiers. When the Dual Eligibility feature is enabled, only one identifier is considered the primary identifier and the rest of the identifiers are considered for communication. The primary identifier for both of these profiles must be unique.\nExample:\nConsider a brand user who is registered on the platform using Email\n[email protected]\n, Mobile 123-456-7890 (primary identifier), and External ID ABC123. With the Dual Eligibility feature enabled, another user can be registered again using Email\n[email protected]\nand External ID ABC124.\nNotes:\nFor the users registered with Dual Eligibility, the information about the user can be retrieved only using the primary identifier.\nUse Case\nUser John\n:\nWorks for\nEmployer A\nand registers on the employer’s healthcare App with:\nEmail\n:\n[email protected]\nMobile\n: 123-456-7890\nJohn’s Spouse, Jane\n:\nWorks for\nEmployer B\nand registers her family on the healthcare App. During registration:\nShe adds John as a dependent using the\nsame email (\n[email protected]\n)\nbut a different\nmobile number 456-123-123)\n.\nOutcome\n:\nTwo\nunique profiles\nare created for John:\nOne is associated with\nEmployer A\n(where John is the primary user).\nAnother is associated with\nEmployer B\n(where John is a dependent under Jane’s profile).\nEnabling dual eligibility\nTo enable dual eligibility for an organization, create a JIRA ticket to the Product Support team and enable the configuration CONF_INSTORE_V2_ENABLED.\nIn addition, make sure that the below configurations are configured as per the table:\nConfiguration Name\nConfiguration\nCONF_REGISTRATION_PRIMARY_KEY\nExternal ID or mobile or email\nCONF_REGISTRATION_PRIMARY_KEY_REQUIRED\n1 - Enable\nCONF_ALLOW_REGISTRATION_FROM_ANY_IDENTIFIERS\n0 - Disable\nCONF_USERS_IS_MOBILE_REQUIRED\n0 - Not required\nFAQs\nQ: Is dual eligibility applicable for both loyalty and non-loyalty users?\nA: Dual eligibility is applicable only for Loyalty users.\nQ: Is it applicable to all types of orgs such as connected orgs, standard orgs, and Org Units?\nA: The dual eligibility feature applies to all the orgs.\nQ: Can we migrate users with the same secondary identifiers and unique primary identifiers?\nA: Yes. You can migrate.\nQ: What happens if I register a customer with the same primary identifier and other identifiers but a different source?\nA: The customer gets merged, and on MemberCare, you will be able to see both registration sources.\nUpdated\n3 months ago\nEntities Management\nSetup Store hierarchy\nAsk AI\nTable of Contents\nRelated entities\nSupported objects and fields\nUnderstanding data sources\nSupported data sources\nUnderstanding communication channels\nSupported communication channels\nManaging customer lifecycle with customer status\nActivating customer status\nTypes of customer statuses\nCreating a custom label\nActive customer status\nSuspended, Fraud suspected, Fraud confirmed, and Internal customer status\nDeleted customer status\nPending deletion customer status\nManaging subscription\nManaging loyalty status\nManaging test and control status\nManaging fraud status\nGetting started\nSetup customer fields\nSetup customer configs\nExternal ID configuration\nCustomer ingestion restriction configuration\nSetup customer status\nDual eligibility\nUse Case\nEnabling dual eligibility\nFAQs"}
{"url": "https://docs.capillarytech.com/docs/store-hierarchy", "title": "Setup Store hierarchy", "text": "Setup Store hierarchy\nSetup organization hierarchy\nAn Admin of the organization account can define org hierarchy, register stores, store tills, configure a local server for each store (Store Server), add users to the organization’s InTouch and provide role-based access for each user.\n📘\nNote\nFor multi-brand orgs, you need to create each Org Unit as a concept as mentioned in the Setup Org Hierarchy section below. Then, assign a ticket to the Platform team requesting to enable Org Units for the org.\nOnce the Org Unit (OU) is enabled for the org, you can have a user role management, loyalty program, audience filters, and reporting at the OU level.\nThis article covers the following topics.\nDefine Organization structure\n: This includes zones, concepts, store-servers, stores, and store-tills.\nOrganization Users\n: This includes registering admin users for your organization, creating user roles, and assigning user roles to define the scope of accessibility for each user to your organization's data.\nBefore starting with the organization setup, you need to understand the basic terminologies used in the hierarchy.\nConcept\n: These are a logical grouping of stores for a single brand org. For example, groceries, electronics, apparel, and home appliances; and logical separation of brands in case of multi-brand org. For example, if an org ABC is into different verticals (say a supermarket, retail, and electronics as brands), each brand can have its own account through concept hierarchy.\nThe following are the features of the Org Unit (OU).\nUsers and access management at the OU level.\nCampaign and loyalty program creation at OU level.\nReports  (Insights+) at OU level.\nView customer information at the OU level.\n📘\nNote\nCustomer registration remains the same across org. For example, a customer registered in an org unit will be registered automatically in all other org units. Hence, the registration date remains the same across org units.\nZones\n: These are a geographical grouping of stores. For example, north, south, east, and south-east.\nStore Server: It is a local server for a store. The data captured by InStore is first saved in the store-server and from there the data will sync to the main server. Tills are associated to Store Server. However, Store Server is not required for Tills with an internet connection.\nStores: These are usually the branches or outlets of an organization or you can say a physical store.\nTill/Store Till:  A Till is a POS machine where the billings happen. A store can have one or more Tills. All the tills should be connected to the store-server through LAN and hence no internet is required at the till level to sync data to the store-server. However, store-server communicates with the main server over the internet.\nThe hierarchy of an organization is as follows -\nZones > Stores (Stores can be grouped independently by zones and concepts) > Store Servers > Store Tills.\nStores are geographically grouped using zones and can also be logically grouped using the concept. Hence, a store can be for a zone or for a combination of a zone and a concept.\nOrg hierarchy\nAn org hierarchy can have up to 5 levels including Tills. In the hierarchy, Till is the lowest level and you can create other levels depending on the org structure.\nLogin to InTouch of your cluster and follow these steps.\nCreate Concept\nCreate Zone\nCreate Store\nAdd Store Server\nAdd Till\nCreate concept\nYou can use concepts for logical grouping for single-brand orgs, and as org units for multi-brand orgs. The creation process remains the same for both.\nIf you need to have concepts as org units, after creating concepts, log a ticket to enable org units for your org and assign it to the Platforms team.\n📘\nNote\nOnce the Org Unit (OU) is enabled for the org, you can have user role management, loyalty program, audience filters, and reporting at the OU level.\nTo create a concept, follow these steps.\nNavigate to\nProfile\n>\nOrganization Settings\n>\nMaster Data Management\n>\nStore Masters\n>\nConcepts\n.\nClick\nAdd New Concept\n.\nFill in the details based on the description provided in the following table and click Submit.\nCode\n: A unique code for the zone.\nName\n: Name of the zone.\nDescription\n: Short description of the zone.\nParent Concept\n: Choose the parent concept for the concept if any. For example, if you are creating a concept Apparel, you can have sub-concepts as men apparel, kids’ apparel women apparel and so on.\n*\nDefault Language\n: The default language used for the concept.\nDefault Currency\n: The default currency used across the concept.\nDefault Time Zone\n: The default time zone of the concept.\nSimilarly, you can create any number of concepts  required for the org.\nCreate zone\nThe following procedure guides you in creating zone hierarchy\nNavigate to\nProfile\n>\nOrganization Settings\n>\nMaster Data Management\n>\nStore Masters\n>\nZones\n.\nClick\nAdd New Zone\n.\nFill in the fields based on the description provided in the following table and click\nCreate Zone\n.\nCode\n: Enter a unique zone code in apha-numeric.\nName\n: Enter a name for the zone. For example, North\nDescription\n: Enter a short description of the zone.\nParent Zone\n:  Tag a parent zone for child zones. For example, if you want to create the India-east zone under the India zone. Then the parent zone for India-east will be India.\nDefault Language\n: Default language that you want to associate with the zone (regional language).\nDefault Country\n: Country of the zone.\nDefault Time Zone\n: Preferred time zone.\nSimilarly, create the entire zone hierarchy for your organization.\nCreate Store\nStores are the second level from the bottom in the hierarchy. A store can be associated with a zone and concept.\nTo create a store, follow these steps.\nNavigate to\nProfile\n>\nOrganization Settings\n>\nMaster Data Management\n>\nStore Masters\n>\nStores\n.\nClick\nAdd New Store\n.\nFill in the fields based on the description provided in the following table and click\nSubmit\n.\nStore Code\n: The store code to be identified in Capillary Cloud. It is recommended to use the following format for store code.\n....\nStore Name\n: Name of the store you want to register. The store name must be unique within the cluster. You cannot use the same name across organisations in the same cluster.\n📘\nNote\nNote:\nThe UI does not support the addition of special characters in the store name. Special characters in the store name can only be added when adding stores using the data import option.\nStore Description\n: Short description of your store.\nParent Store\n: The parent store for the store. You can create child stores for a parent store. This option displays the list of all the stores you have registered for your organization.\nParent Concept\n: The logical group (Concept) of the store.\nStore Default Language\n: The language used at the store.\nStore Default Currency\n: The base currency at the store location (currency of the country where the store is located).\nStore Default Time Zone\n: The geographical location of the store. All the zones created for your organization is displayed in the drop-down.\nAccess Group\n: Access group to which the store has access. All the tills under the store inherit the access group of the store and will have access to the APIs accordingly.  You can also assign a default access group for all the stores under your organisation. For information on access groups, see\nAccess group\n.\nStore Code Representation for the Org\n: The external id of your brand. External ids.This should be unique and should not be a used external code.\nSet the Admin Type\n: Set this as\nGeneral\nfor a live store. If you would like to test the store before making it live, choose\nAdmin\n.\nSimilarly, you can create all the required stores for your org.\nAdd Store Server\nIn stores where PoS machines do not have access to the internet, you will have a store server that has an internet connection. All POS machines (or TILLs) are connected to the store server through LAN.\nA store will usually have one store server.\nTo add a store server, follow these steps.\nNavigate to\nProfile\n>\nOrganization Settings\n>\nMaster Data Management\n>\nStore Masters\n>\nStore Servers\n.\nClick\nAdd New Store Server\n.\nEnter the store server details based on the description provided in the following table and click\nSubmit\n.\nStore\n: The store to which store-server needs to be configured.\nStore Server Username\n: Enter the username of the store-server provided by Capillary for that particular store.\nStore Server Password\n: Enter the password of the store server provided by the Capillary for that specific store.\nConfirm Password\n: Reenter the password of the store server.\nSimilarly, you can add all the necessary store servers required for your brand.\nAdd Till\nTILL is a PoS machine and is the last entry in the org hierarchy. Each TILL needs to be mapped to a store. You also need to map to a store server, for models where TILLs have no internet access.\nTo add a new TILL, follow these steps.\nNavigate to\nProfile\n>\nOrganization Settings\n>\nMaster Data Management\n>\nStore Masters\n>\nStore Tills\n.\nClick\nAdd New Till\n.\nEnter TILL details based on the description provided in the following. Click\nSubmit\nto save your changes and create the Till.\nStore\n: The store to which store-till needs to be assigned.\nStore Server\n: Store Server for the till. This acts as a local server for the POS machine (Store Till).\nTill Name\n: Username of the In-Store application for that till. The name must start with a lowercase letter (\na\n–\nz\n). The rest can include lowercase letters, digits, dot (\n.\n), underscore (\n_\n), or hyphen (\n-\n). Uppercase letters and other special characters are not allowed. The name must be at least 3 characters long. The Till name specified will also be copied to Till code in the backend.\nTill Description\n: Description for the till, if any.\nTill Password\n: The password of the In-Store application for that till.\nConfirm Password\n: Reenter the password of the In-Store.\nSimilarly, you can add all the TILLs required for the org.\nUpdated\n3 months ago\nCustomer entity\nSetup Transactions\nAsk AI\nTable of Contents\nSetup organization hierarchy\nCreate concept\nCreate zone\nCreate Store\nAdd Store Server\nAdd Till"}
{"url": "https://docs.capillarytech.com/docs/set-transactions", "title": "Setup Transactions", "text": "Setup Transactions\nTransaction Configuration\nBilling configuration lets you configure rules or conditions related to billing types, bill data syncing, outlier bills, currency conversion, and more at the organization level.\nTo configure billing details, navigate to InTouch Profile >\nOrganization Settings >Systems & Deployment > !ntouch POS Configuration > Billing\n.\nOPTION\nDESCRIPTION\nCONF_CLIENT_AUTO_BILLING_ENABLED\nEnable to capture bill details from the POS automatically. Else, you need to enter bill details manually\nCONF_CLIENT_BACKGROUND_NETWORK_BILL_SUBMIT\n* This feature is not in use/deprecated -\nCONF_CLIENT_ONE_STEP_BILLING_ENABLED\n* This feature is not in use/deprecated -\nCONF_CLIENT_BILL_NO_REGEX\nA regular expression for the bill number. A transaction submitted on the Transaction screen should match with the regex configured here.\nCONF_CLIENT_IS_BILL_AMOUNT_ZERO\nEnable to accept transactions with 0 transaction amounts.\nCONF_CLIENT_DISABLE_CANCEL_BILL\n* This feature is not in use/deprecated -\nCONF_ALLOW_LOYALTY_BILL_SUBMITION_WITH_PARTIAL_DETAILS\nOther than the primary identifier, if any custom field is mandatory, you can submit a bill even with out the\nCONF_RETRO_TRANSACTION_ENABLE\nCheck to enable retro transaction - save not-interested transactions and tag to customers once registered.\nThese bills are saved until the number of days set in CONF CLIENT RETRO MAX ALLOWED AGE DAYS\nCONF_RETRO_TRANSACTION_CASHIER\nEnable to allow a cashier to convert a not-interested transaction to a regular (loyalty) transaction.\nCONF_RETRO_TRANSACTION_STORE_ASSOCIATE\nEnable to allow a store associate to convert a not-interested transaction to a regular (loyalty) transaction.\nCONF_CLIENT_BILLING_CUSTOMER_REPORT_ENABLED\n* This feature is not in use/deprecated -\nCONF_CLIENT_AUTOSAVE_BILL_HOOK_KEY\nHotkey for capturing bill details from bill picker. Example: Alt+Ctrl+z\nCONF_CLIENT_BILL_NOTES_READONLY\nEnable to not allow a cashier to enter bill notes. In this case, notes will be captured only through bill pick or integration.\nENHANCE BILL CAPTURE\nCheck this option not to save loyalty transactions with missing or invalid identifiers as not-interested transactions.\nNote: If this is unchecked, the system does not capture loyalty transactions with invalid or missing identifiers.\nCONF_LOYALTY_IS_BILL_NUMBER_REQUIRED\nEnable to make bill number mandatory to submit a transaction or capture bill details.\nCONF_LOYALTY_BILL_NUMBER_UNIQUE_IN_DAYS\nSet the number of days for which the bill number has to be unique. For example, if you set 30, then a transaction number cannot be repeated for 30 days. Again, you can set uniqueness at the org level, store level, or Till level using the configs mentioned below.\nCONF_LOYALTY_IS_BILL_NUMBER_UNIQUE\nEnable this option to set bill number unique across the organization. You also need to set the number of days in which you want the bill number unique.\nCONF_LOYALTY_BILL_NUMBER_UNIQUE_ONLY_STORE\nEnable this option to set bill number unique at the store level. You also need to set the number of days in which you want the bill number unique.\nCONF_LOYALTY_BILL_NUMBER_UNIQUE_ONLY_TILL\nEnable this option to set bill number unique at the Till level. You also need to set the number of days in which you want the bill number unique.\nIS_RETURN_BILL_UNIQUE\nEnable to make return bill number unique for the org.\nCONF_MARK_ZERO_BILL_AS_OUTLIER\nEnable this option to mark transactions with bill amount 0 as outlier transactions.\nCONF_LOYALTY_MAX_BILL_AMOUNT\nSet the minimum bill amount to be accepted across the organization. Any bill amount beyond the minimum and maximum limit set will not be accepted.\nCONF_LOYALTY_MIN_BILL_AMOUNT\nSet the maximum bill amount to be accepted across the organization. Any bill amount beyond the minimum and maximum limit set will not be accepted.\nBILL_NUMBER_WISE_IGNORE_POINTS\nCheck this to stop allocating points for transaction number that start with a specific keyword you mention in IGNORE BILLS FOR BILL NUMBER STARTS WITH.\nIGNORE_POINTS_FOR_BILL_NUMBER_STARTS_WITH\nEnter the starting keyword of transaction numbers that need to ignored from issuing points.\nMARK_BILLS_OUTLIER_STARTING_WITH\nBills that start with the keyword you specify here will be considered as outlier bills.\nCONF_OUTLIER_ITEM_SKU\nEnter SKUs (comma separated) that you want to consider as outlier.\nCONF_LOYALTY_MAX_BILL_LINEITEM_AMOUNT\nSet the maximum line-item amount that is acceptable. Any line-item amount not in the range of the minimum and maximum value will be accepted by the Capillary system.\nCONF_LOYALTY_MIN_BILL_LINEITEM_AMOUNT\nSet the minimum line-item amount that is acceptable. Any line-item amount not in the range of the minimum and maximum value will be accepted by the Capillary system.\nMARK_BILLS_OUTLIER_FROM_STORE\nThese stores are used for testing purpose and the bills generated in these stores will be ignored.\nSelect each store and click Add. The stores that you add will be considered as outlier stores.\nCONF_MIN_BILLING_DATE\nSet the minimum date acceptable for billing. Any bill date (especially, while import) less than the date that you set here will be ignored automatically.\nCONF_LOYALTY_IS_RETURN_BILL_NUMBER_REQUIRED\nEnable to make the transaction number mandatory for return bills.\nCONF_LOYALTY_IS_RETURN_BILL_MANUAL_HANDLING_ENABLED\nCheck to enable manual deduction of points on return transactions.\nCONF_CLIENT_ENTER_LATER_SHORTCUT\nSet hotkey for enter-later transactions. Example: Ctrl+Alt+E.\nCONF_CLIENT_NOT_INTR_SHORTCUT\nSet hotkey for not-interested transactions. Example: Ctrl+Alt+N.\nCONF_CLIENT_CLIENT_GROSS_DISCOUNT_ENABLED\nEnable to show the gross discount amount of a transaction in the invoice.\nCONF_LOYALTY_TRANSACTION_AMOUNT_MARGIN\nCONF_CLIENT_RETRO_DELAY_SINCE_REGISTRATION_HOURS\nCONF_CLIENT_RETRO_MAX_ALLOWED_AGE_DAYS\nMaximum number of days allowed for a not-interested transaction to tag it to a loyalty customer once registered.\nFor example, if you set 7, once a customer is registered, you can tag bills that are made by the customer in the last 7 days.\nThere is no limit on the number of days.\nCONF_CURRENCY_CONVERSION_ENABLE\nCheck this to enable currency conversion\nBILL_OUTLIER_BASKET_SIZE_LIMIT\nAn outlier is an observation (or configuration) to identify abnormal behavior in bills.\nThis option lets you set the basket size limit for a bill. Any number beyond this will be considered as an outlier bill.\nFor example, if you set BILL_OUTLIER_BASKET_SIZE_LIMIT as 20, any bill with basket size more than 20 is considered as an outlier bill. Set -1 if the outlier is not applicable to your organization.\nAMOUNT_ROUNDING_OFF_TO_DECIMAL_PLACES\nThis configuration specifies the number of decimal places to retain for transaction values. For example, if you set it to 2 decimal places and a transaction value is 100.567, the system will store the value as 100.56. This setting also applies to line-item transactions.\nNote:\nIf the\nDecimal Places for Base Currency\nin the\nbilling configuration\nis defined, the system always prioritizes this setting. In the above example, if\nDecimal Places for Base Currency\nis set to 1, the system will store the value as 100.6.\nAdd payment modes\nA payment mode will have attributes and attribute values. Before configuring payment mode combinations, you need to add the supported payment modes of the organization as explained in the following.\nLog on to InTouch and go to\nSettings\n>\nOrganization Setup\n>\nPayment Modes\n.\nClick\nAdd Tender\nand choose the payment mode that you want to add.\nIn\nLabel\n, enter your preferred name for the payment mode.\nClick the\nSave\nicon to add the payment mode to your organization. Then, you need to add attributes to the payment mode.\nClick the\nEdit\nicon to add attributes.\nClick\nAdd Attribute\nto add an attribute to the current payment mode and select the required attribute from the drop-down.\n📘\nNote\nNote\nAttributes are not supported for all payment modes. The Attribute field will appear only for payment modes that support it. For details on which payment modes support attributes, refer to the documentation\nhere\n.\nEnter your preferred name for the attribute (to appear on the UI) and click Save.\nSimilarly, you can also add attribute values if applicable for the attribute.\nClick the\nEdit\nicon of an attribute to add the attribute value.\nIn the\nSupported attribute values\ndrop-down, select the supported input type - Text, Selection, Numeric, Float. Refer to the table below for more details.\nThe options differ based on the chosen attribute type.\nSimilarly, you add all the supported payment modes with attributes and values.\nThe following screenshot shows a payment mode, Card, with two attributes added to it.\n📘\nNote\nTo remove a payment mode or attribute, click the respective\nDelete\noption.\nAlways ensure to\nSave\nchanges whenever you add or modify a payment mode/attribute.\nAttributes supported for payment modes\nTender Name\nAttributes Supported\nAttribute Names\nCard\nYes\ncard_type, number, bank_name, name_on_card, expiry_date, CardIssuerCode, CardEntryMethodCode, AuthorizationMethodCode\nCash\nYes\ncurrency\nCheck\nYes\nnumber, bank_name, branch_name\nWallet\nYes\nwallet_Type\nPoints\nNo\nN/A\nCredit\nNo\nN/A\nBank Credit\nYes\nBankName\nGift Card\nYes\nbrand, number\nDiscount Coupon\nYes\ncoupon_code, CouponTypeCode\nPrepaid\nNo\nN/A\nExchange Lineitem\nYes\nitem_code\nFood Coupon\nYes\ncoupon_code, CouponTypeCode\nCredit Note\nNo\nN/A\nCash Card\nYes\ncard_number\nCash On Delivery\nNo\nN/A\nNetbanking\nYes\nbank_name\nEmi\nYes\ninstallment_months, installment_start_date, EMI_type, bank_name, card_issuer_code\nUpi\nYes\nupi_id, service_provider\nUpdated\n4 months ago\nSetup Store hierarchy\nHandling of rejected transactions\nAsk AI\nTable of Contents\nTransaction Configuration\nAdd payment modes\nAttributes supported for payment modes"}
{"url": "https://docs.capillarytech.com/docs/handling-of-rejected-transactions", "title": "Handling of rejected transactions", "text": "Handling of rejected transactions\nIn this page, information of how Capillary handled rejected transactions will be available.\nBasically, whenever a transaction happens, the bill comes to the capillary system and will be processed. However, sometimes, in those transactions, we might get:\nLine item that is not present in the master list\nPayment method that is not registered in the system\nStores whose details are not yet added in the capillary system\nMissing transaction extended field\nMissing customer extended field\nWhenever these situations occur, those transactions will be stopped from processing (rejected), and will be moved to a centralised sanity queue instead based on below.\nAfter this enhancement, the handling will be as below:\nIf they are of 1st, 2nd, 3rd type, they will be moved to the sanity queue.\nIf they are of 4rth, 5th type:\nIf they are of enum (basically a bunch of options), they will be moved to the sanity queue.\nFor all the other types, they will be marked as failed permanently.\nRemember, all these transactions will be marked either as “pending” or “failed” as per above flow. All these configurations need to be enabled by the brands, otherwise the system will default to current behavior.\nOnce these transitions are moved to the sanity queue, an event notification will be sent to the respective brands notifying them that we have received these types of transactions. Brands can fetch these transactions from APIs too to check about them as per their policies (daily, weekly, etc..)\nIn the event notification that will be sent to brands, it contains following information:\nEvent name\nEvent datetime\nBill number\nCustomer identifier\nRejection type, .i.e., can be reprocessed or not\nReason of the rejection\nSource details of the bill\nBrands can get these transactions from API  based on:\nRejection type\nAll pending transactions for a customer\nThen brands need to provide the new data points (new line items, new payment methods, new store, new extended field values) that can be considered for transactions to Capillary. Once they are updated in the Capillary system, all these transactions in the sanity queue will be re-processed once again by our capillary system.\nDuring the reprocessing, the process will happen based on the processed date not the original bill date. The APIs involved in this entire sanity queue are following:\ngetRejectedTransactions: Fetches all the rejected transactions for the org, based on the input query params.\nretriggerTransactionAdd: Checks and updates the status of rejected Transaction. Retriggers the transaction add for  the rejected transaction  which are completely fixed.\nmarkFailed: Updates the rejected transaction status to PERMANENT_FAILED\ngetReTriggerStatus: Gives the status of retriggered rejected transactions for the given retrigger Id\nAPI links will be available here:\nhttps://docs.capillarytech.com/reference/getrejectedtransactions\nUpdated\n4 months ago\nSetup Transactions\nSetup Behavioral events\nAsk AI"}
{"url": "https://docs.capillarytech.com/docs/setup-test-behavioral-events", "title": "Setup Behavioral events", "text": "Setup Behavioral events\nBehavioral Events Overview\nEvents are activities of a customer either on an online store or at a physical store. Behavioural Event is a platform that lets you create standard and custom events to capture customer activities across channels. After you create an event, whenever it is triggered, the payload containing the defined attribute information is sent to the webhook. The Behavioral Event framework listens to this event, validates it, and sends it to the corresponding destination such as loyalty, journey, etc.\nObjective\nThe Behavioral Events data collected across sources can be used to develop personalized content, segment customers, or even incentivize customers.\nThis product solves different use cases for different verticals.\nFor example:\nIn an offline retail or brick-and-mortar store, you can send coupons to customers for different events such as scanning a QR code of a particular product category, or showing interest in a particular item.  This increases conversion without customers visiting the store again.\nIn an e-commerce platform (website or app), customers can be engaged through games or quizzes.\nIn the healthcare domain, customers can be rewarded for completing health-related activities to drive better engagement and loyalty of the customers.\nIn Consumer Packaged Goods (CPG), customers can be rewarded for participating in sales promotion events.\nIn the case of hospitality, you can send tailored messages to customers based on the stage of their purchase cycles such as inquiry, booking, check-in, and checkout.\nModules that consume Behavioral Events\nCurrently, events data can be consumed by Insights+ and Loyalty+. By default, Insights+ consumes any event that you create on Behavioral Events. However, you need to manually set if you want to consume by Loyalty+.\nLoyalty+\n: This includes both loyalty and DVS (Dynamic Voucher System).\nConsumed by\nLoyalty Manager\nto send messages to customers or incentivize them based on events data. For example, you could send a message when a product a customer is looking for is of limited stock.\nConsumed by\nBounceback Campaign\nto run engagement programs based on the events data. For example, you could send discount coupons on product abandonment or product add-to-cart events.\nInsights+ (upcoming feature) to analyze events data. For example, most searched products frequently searched products during a festival season.\nTypes of Behavioral Events\nThe following are two types of Behavioral Events available.\nStandard Events (Library of predefined events)\n: These are predefined events with all the required attributes and values. The following is the list of standard events. Administrators can enable events that are required for an organization.\nProduct Removed From Cart, Customer Logged Out, App Installed, Product Added To Cart, Customer Registered, Category Viewed, Product Viewed, Customer Logged In, Coupon Applied, Product Searched, Coupon Denied, and App Uninstalled.\nCustom Events\n: If you want to capture a specific customer activity other than in Standard Events, you can create custom events with the event names, attributes, and values.\nThe following table provides an understanding of choosing between standard and custom events.\nSCENARIO\nSTANDARD EVENTS\nCUSTOM EVENTS\nAdd standard attributes (such as SKU and Till) before publishing\nNo\nYes\nEdit standard attributes before publish\nNo\nYes\nDelete standard attributes before publishing\nNo\nYes\nAdd standard attributes (such as SKU and Till) after publishing\nNo\nNo\nEdit standard attributes after publishing\nNo\nNo\nDelete standard attributes after publishing\nNo\nNo\nAdd custom attributes (string, enum, double, date) before publishing\nYes\nYes\nEdit custom attributes before publishing\nYes\nYes\nDelete custom attributes before publishing\nYes\nYes\nEdit custom attributes after publishing\nNo\nNo\nDelete custom attributes after publishing\nNo\nNo\nAdd custom attributes (string, enum, double, date) before publishing\nYes\nYes\nNew terminologies\nWebhook\nEnables syncing and relaying data between third-party applications and the Capillary Server facilitating automated calls and real-time updates.\nWebEngage\nMulti-channel user engagement platform that lets you automate communications.\nTransformer\nUsed to convert the payload sent by the third-party app to a payload understood by Capillary. In simple terms, it is a field mapping.\nWebhook Adapter\nUsed to track real-time events data that consists of payload understandable by the Capillary system.\nIntegration\nAutomates pushing event data from a third-party app or website to the Capillary system. There are two types of integrations-\nWebEngage to integrate Capillary Behavioural Events platform with WebEngage.\nCustom integration to integrate Capillary Behavioural Events platform to any other third-party apps.\nSource Account\nSource in which a customer is registered. Example: Facebook, WebEngage, WeChat, InStore, Martjack, TMall, Taobao, JD, Ecommerce, Website, and Line.\nEvent and Attribute\nEvent is customer activity such as logging out, adding items to cart, and so on. Whereas, attributes are entries of an event that needs to be captured by our system. For example, for the event product review, you could have attributes like title and review message body.\nStandard Event\nA predefined event with a defined set of attributes.\nCustom Event\nA user-defined event that lets you define your own attributes that you want to capture.\nStandard Attributes\nThe standard attribute in a behavioural event system is a default attribute that will be applicable for all the events. There are two standard attributes,\neventDateTime\nand\nstoreUnitID\n. These attributes need not be defined during the creation of an event and are applicable for all events by default.\nstoreUnitID\n- This attribute is used only for internal usage.\neventDateTime\n- This is a standard attribute that captures the event processing time. If a value is sent for the\neventDateTime\nattribute, such as 2024-03-24 12:00:00, it serves as the timestamp for the event. However, if no value is sent or the attribute is missing in the payload, the time of event processing becomes the event timestamp.\nThe formats that are acceptable for the eventDateTime attribute are given below:\nyyyy-MM-dd'T'HH:mm:ssXXX\nyyyy-MM-dd'T'HH:mm:s.S\nyyyy-MM-dd HH:mm:ss\nyyyy-MM-dd\ndd-MM-yyyy HH:mm:ss\nMM/dd/yyyy HH:mm:ss\nyyyy/MM/dd HH:mm:ss\nyyyy/MM/dd\ndd-MM-yyyy\nMM/dd/yyyy\nyyyyMMdd HH:mm:ss\ndd-MMM-yy\nyyyy-MM-dd'T'HH:mm:ss\nEEE MMM dd HH:mm:ss z yyyy\nMMMM,dd,yyyy\nMMMM,dd\nyyyy-dd-MM HH:mm:ss\n📘\nNote\nThe Behavioural event system saves the value for the eventDateTime attribute in the system as is, without any timezone offset. If there is no value provided for the attribute, it processes the time according to the GMT timezone and saves the datetime value without the timezone offset.\nCustom Attributes\nThe custom attributes are user-defined attributes for each event. You can define attributes such as customer ID, product code, booking ID, product category, etc., and map the fields to capture the corresponding information. For example, you can create an attribute named\nCustomerMobileNumber\nand map it to Customer ID > Mobile number.\nThese attributes can be of any of the following data types:\nEnum\nGroup ID\nTill Code\nCoupon Code\nCustomer ID\nDate\nProduct SKU\nProduct Brand\nCurrency Code\nProduct Category\nString\nDouble\nEvent routing in Connected Organizations\nWhen a customer performs an action, two events are generated—one for the child organization and one for the parent. Both events are delivered to the parent organization’s webhook and have unique event IDs.\nTo enable centralised routing, the app sends all behavioural events to the parent webhook. The event payload includes a custom attribute called\norgResolver\n, which contains the\nchildOrgId\n.\nThe parent webhook uses this ID to route each event to the correct child organization. The child org then processes the event and applies the relevant logic—for example, awarding reward points.\nHow it works\nThe app sends all behavioural events to the\nparent organization’s webhook\n.\nThe event payload includes a custom attribute named\norgResolver\n, which contains the\nchild organization ID\n.\nThe parent webhook reads the\nchildOrgId\nand\nroutes\nthe event to the appropriate child organization.\nThe child organization processes the event and applies any relevant logic (e.g., awarding reward points).\n{\n  \"event_flag\": 5.19,\n  \"event_name\": \"clickEventPromoPoint\",\n  \"identifier_value\": \"unionId918871834592\",\n  \"eventDateTime\": \"2023-12-11 12:13:14\",\n  \"orgResolver\": {\n    \"type\": \"PARENT_CHILD_ORG\",\n    \"childOrgId\": 1115,\n    \"tillCode\": \"12342\" //child till code\n  }\n}\nExample: Multi-org health app\nA health app is used by employees across 400 companies. Instead of configuring 400 webhooks, the app:\nSends all events to a\nparent org webhook\n.\nUses\nNeo\nto map the customer to the correct organization.\nAdds the\nchildOrgId\nto the event payload using the\norgResolver\nattribute.\nThe parent webhook routes the event to the correct child organization.\nThe child organization processes the event and awards points accordingly.\nMapping\nAlso called attribute mapping that lets you map attributes of a behavioural event with the attributes of a third-party application.\nLimitations of Behavioral Events\nThe following are the limitations of Behavioral Events.\nNo support for standard entities such as SKU, and category in filters and KPIs for custom events.\nNo support for anonymous events, customer identifier is required.\nData is captured only from predefined integrations (such as WebEngage or Webhook), and not directly from sources (such as eCommerce websites, apps, and WeChat).\nThe platform registers customers from the registered user profiles data shared in the S3 bucket. If there is no WebEngage integration, customer registration needs to handle through API Integration.\nLimitations for Custom Events:\nA maximum of 10 active events are allowed in an org.\nA maximum of 20 attributes are allowed in an event.\nCustom attribute names can have only up to 50 characters.\nCustom attributes can have only enum, date, Boolean, integer, double, and string as data types.\nSteps to configure and publish an event\nCreate a Webhook integration for a WebEngage platform or any other third-party apps or platforms.\nCreate a new custom event or add a standard event.\nCreate attribute mapping.\nRun a sample test to validate whether the data is flowing correctly as desired.\nPublish the event.\nAdd Webhook Integration\nWebhook facilitates pushing real-time data from a third-party application or website to the Capillary database through a web callback or HTTP push API. A Webhook integration is a combination of a third-party app and Till code. For every Webhook integration you create, a unique URL is generated. The respective third-party apps need to make a POST call to the URL passing events data.\nThere are two types of integrations\nWebEngage integration\nto capture events data from the WebEngage platform.\nCustom integration\nto capture events data from other platforms or apps other than WebEngage.\nTo create a Webhook integration, follow these steps.\nClick\nCreate Webhook\n.\nChoose WebEngage for WebEngage integration, else choose Custom for integration with other apps.\nIn\nSelect till code\n, choose the Till code that you want to associate with the selected source. If an event has the attribute\nTill Code\n, then the Till Code that is captured for the event will be considered as a default one.\nClick\nDone\nYou need to use the integration URL to POST event data to Webhook through an API call.\n📘\nIf an event has the Till Code attribute, then the till code tagged in the Webhook or any other integration will not be considered.\nWebhook Configuration for Behavioural Events in Connected Organizations\nIn a Connected organization setup, you only need to configure the webhook at the\nparent organization\nlevel. The system automatically routes events from both the parent and all connected child organizations to this webhook.\nKey Behaviours\nSingle webhook setup -\nConfigure the webhook only in the parent organization. No separate setup is required in the child organizations.\nEvent routing -\nAll behavioural events, whether triggered in the parent or a child organization, are routed to the parent’s webhook.\nProcessing order -\nEvents are first processed in the child organization where they originated. The same event is then processed again at the parent level.\nChild-only webhooks -\nIf a webhook is set up only in a child organization (outside the connected org setup), it processes events\nlocally\n. These events are\nnot sent\nto the parent webhook. If needed, you can enable listening to child events when\nsetting up the parent webhook\n.\nAdd & map custom event\nCreate custom events if you want to capture specific details that are not available in standard events. You can use both standard and custom attributes to create custom events.\nThe following are the steps involved in publishing a custom event.\nTo create a custom event, follow these steps.\nLog on to InTouch\nGo to >\nOrganization Settings\n>\nMaster Data Management\n>\nData Model\n>\nBehavioral Events\n.\nClick +\nAdd Events.\nClick\nCreate New Event\nand follow these steps\nIn\nEvent Name\n, specify a name for the event without any space or special characters (except underscore). For example, DemoEvent. If there are spaces in the event name, the system automatically replaces the spaces with a double underscore. Hence, do not use double underscores while naming the event.\nIn\nDisplay Name\n, specify a name that you want to be displayed.\nIn\nDescription\n, give a short description of the event.\nClick +\nAdd Attribute\nto add event attributes and follow these steps.\nIn\nName\n, specify an appropriate name for the attribute.\nCustomer Identifier is a mandatory attribute for a custom event\n.\nIn\nData Type\n, choose the type of the attribute.\nTYPE\nDESCRIPTION\nCUSTOMER IDENTIFIER*\n(MANDATORY)\nThis is a mandatory attribute for an event and is used to identify an existing customer and also to register a new customer if required.\nYou need to configure identifier type, source, and associated source account.\nCustomer Identifier\n: Choose the identifier type from the available options - Mobile number, email ID, external id, WeChat ID, userId, Martjack ID.\nSource\n: Choose the source from which you want to identify customers. Facebook, WebEngage, WeChat, Instore, Martjack, TMall, Taobao, JD, e-Commerce, Website, Line, and other sources.\nSource Account\n: For sources with multiple accounts, such as WeChat or Facebook, choose the desired account to identify registered customers from that source account.\nAdd customer if not available\n: Enable this option to automatically register new customers (in the loyalty program) that are captured through the event.\nFor example, if you set customer identifier as email ID, and Source as InStore,\nwhen an email id that is already registered on InStore is identified, the data is tagged to the customer and saved in the Capillary system\nwhen a new email id identified, the customer will be first registered\nif Add customer id not already present\nis enabled. The event details are tagged to the customer before saving the data.\nEnum\nChoose this to capture the predefined values for the attribute. In POSSIBLE VALUES enter the supported values for the field separating each by a comma (do not leave space after a comma). For example, if Name is Hobby, you could have the values Music, Sports, Fishing, Archery, Gardening, Others.\nEnum is a data type consisting of a set of predefined values.\nTill Code\nChoose this to capture Till codes.\nCoupon Code\nChoose this to capture coupon codes and configure the Regex (regular expression) for coupon codes accordingly.\nA customer identifier attribute is required for any custom event.\nChoose this to capture customer identifiers, associated sources, and source accounts from which the event is triggered.\nNOTE\n*: Customer Identifier capturing is mandatory for custom events. You cannot save an event without this attribute.\nCUSTOMER IDENTIFIER\n*: Mobile number, email ID, external id, WeChat ID, Martjack ID.\nSOURCE\n*: Facebook, WebEngage, WeChat, Instore, Martjack, TMall, Taobao, JD, e-Commerce, Website, Line, and other sources.\nSOURCE ACCOUNT\n*: For sources with multiple accounts such as WeChat and Facebook, choose the account that you want to associate with the attribute.\nADD CUSTOMER IF NOT AVAILABLE\n*: Enable this option to automatically register new customers (in the loyalty program) that are captured through the event.\nDate\nChoose this to capture date values. The following are the different date formats supported.\nyyyy-MM-dd'T'HH:mm:ssXXX, yyyy-MM-dd'T'HH:mm:s.S, yyyy-MM-dd HH:mm:ss, yyyy-MM-dd, dd-MM-yyyy HH:mm:ss,\nMM/dd/yyyy HH:mm:ss, yyyy/MM/dd HH:mm:ss, yyyy/MM/dd, dd-MM-yyyy, MM/dd/yyyy, yyyyMMdd HH:mm:ss, dd-MMM-yy, yyyy-MM-dd'T'HH:mm:ss, EEE MMM dd HH:mm:ss z yyyy, MMMM,dd,yyyy, MMMM,dd, and yyyy-dd-MM HH:mm:ss.\nProduct SKU\nChoose this to capture product SKUs or item codes.\nProduct Brand\nChoose this to capture product brands.\nProduct Category\nChoose this to capture product categories.\nString\nChoose this to capture free-flowing text that could contain alphabets, numbers, and spaces.\nDouble\nChoose this to capture a double data type.\nDouble is a 64-bit floating value with precision up to 15 decimal places_.\nEnable Required if the attribute is a required field for the event.\nEnable\nIs part of unique key\n, if you want the attribute to be a part of unique key. For information on uniqueness check, see\nEvent uniqueness check\n. Any attribute that is made as part of the unique key, cannot be reverted to a non-unique field.\nEnable\nIs PSI data\n, if you want to classify the attribute as sensitive data. This is applicable for attributes that are of type Enum, String, and Double. Refer to the PSI data documentation for more\ninformation on classifying PSI data\n.\nSimilarly, click\n+ Add Attribute\nto create more attributes for the event.\nClick\nNext\nto continue\nCheck\nEMF Consumer\nto show the event in Loyalty Manager, and Bounceback Campaign to reward points, coupons, or just send messages. By default, these events are consumed by Essential Insights.\nIn the\nAdd destination\npage, select the\nLoyalty\ncheck box to send the event to Loyalty and process it. If it is not selected, the event is not sent to Loyalty and will not be considered for any points, rewards or any other loyalty program. By default, the\nLoyalty check box\nis not selected. You must manually select this option to send the event to Loyalty and Journey.\nClick\nDone\nto save the event.\nTest the event to see whether data is flowing to the system as expected. For example, for the Add to Cart event, open the WebEngage portal, and try adding items to the cart. The system will automatically validate the data and complete the testing process. For detailed instructions, see Test & Publish Event.\n📘\nThe Publish button will be active only once the page is refreshed after pushing the event's data to the system. You need to refresh the page manually.\nClick Publish to publish the event.\n📘\nOnce the event is published, you cannot edit or delete either standard or custom attributes.\nAfter creating, testing, or publishing the custom event successfully you can map it with the source event. For details, refer to mapping custom events to source events.\nEnabling uniqueness check\nIn behavioural events, you can enable uniqueness checks and avoid issuing reward points for duplicate events. After the uniqueness check, duplicate events are not deleted nor does the Behavioral Event framework reject it. The EMF identifies duplicate events by checking their uniqueness. If there is a duplicate event, it is not processed. This ensures that points are not provided for duplicate events.\nUse case\nA behavioural event comes to Capillary from WebEngage and the timeout set for this request is 5 seconds at WebEngage. If Capillary fails to respond within 5 secs, WebEngage triggers the same request again. The uniqueness check enables to identify the duplicate events and avoids issuing reward points for duplicate events.\nTo enable uniqueness-check in the behavioural events, perform the following:\nEnable the uniqueness check configuration in the webhook. There is no UI to enable uniqueness check configuration in the webhook and this must be performed using the webhook API call.\nFor new orgs, use the POST call and create a webhook with uniqueness check configuration or create a webhook using UI and use PUT API call to update the webhook. For more information, see\nAdd webhook\nand\nUpdate webhook\n.\nFor existing orgs, use PUT API call and update the webhook to enable the uniqueness check.\n📘\nNotes:\nOnce enabled, you cannot disable the unique check configuration.\nOnce uniqueness check is configured for the webhook, all the events in the org should have uniqueness check enabled.\nIn the events page, use the toggle switch and add the desired attributes to unique key. You can do this using API or from the UI.  To add it from the UI,\nEnable the\nIs part of unique key\nswitch.\nBy default, the event name and customer identifier form the unique key. If an attribute is enabled, it is added as a part of the unique key with the event name and customer identifier.\nUnique key format\n: EventName_Customerid_Attribute1_Attribute2_....\nUnique key\n:  md5 hash generated from combining the event name, customer identifier, and additional attributes in the EventName_Customerid_Attribute1_Attribute2 format.\nExample\nConsider the following scenario:\nEvent name:\nAppointment\nCustomer ID: 9123456789\nCustom attribute for the event:\nrefID\nIn this scenario, the unique key format is Appointment_9123456789_refID, and the unique key is 779069e41a8afde74b2c526bce59e51a, which is the MD5 hash of Appointment_9123456789_refID.\nMake sure that the\nRequired\nswitch gets enabled. The unique key attributes are marked automatically when we enable the unique key switch.\n📘\nOnce the attribute is enabled as part of the unique key, it cannot be disabled.\nBy default, the event name and customer identifier are part of the unique key and the enabled attribute is added as a part of the unique key along with the event name and customer identifier.\nMap custom event to source event\nThere are some instances where events that come to Capillary's system are not in a format supported by Capillary. For example, the Capillary does not support an event name with a blank space. Suppose an event named Promotion Viewed is coming from WebEngage (source). You need to create a custom useevent - promotionViewed (custom event name) and map it to Promotion Viewed (source event name) using the event mapping process.\nBehavioral Events lets you map a custom event to a source event.  You can do it at any phase - after creating, testing, or publishing a custom event. You can map the source event name and attributes to a custom event name and attributes stored in Capillary's system.\nThe following are the different stages of event publishing when you can map a custom event to a source event.\nCreate custom event\nTo create a custom event, follow these steps.\nNavigate to\nOrganization Settings\n>\nMaster Data Management\n>\nData Model\n>\nBehavioral Events.\nIn the\nAll Events\ntab, click + Add Event\nOn the\nAdd Events\npage, click +\nCreate New Event\nto create, test, and publish a custom event with attributes.\nMap custom events and their attributes\nTo map a custom event to a source event, follow these steps.\nNavigate to\nOrganization Settings\n>\nMaster Data Management\n>\nData Model\n>\nBehavioral Events.\nIn the\nAll Events\ntab, search the existing or newly created custom event using the event name.\nClick +\nAdd Mapping\nto map the custom event with the source event.\nOn the\nAdd Mapping\npage, choose the source (For example, WebEngage or Custom). Once you save mapping details, you cannot change the source.\nIn\nEvent Name\n, enter the event name of the source to map to the custom event name.\nEnter the source's event attribute to map the custom event and the source event attributes.\nClick\nSave\n.\nView and modify a custom event\nTo view and edit mapping, follow these steps.\nNavigate to\nOrganization Settings\n>\nMaster Data Management\n>\nData Model\n>\nBehavioral Events.\nIn the\nAll Events\ntab, search your preferred custom event using the event name.\nClick on the mapped custom event and navigate to the\nMappings\ntab to view the event mapping.\nNavigate to the\nMappings\ntab, click the\nEdit\nicon.\nModify the mapping as You can modify the event name and event attributes - the event name and source attributes. The system does not allow to change the source.\nClick\nSave\n.\nAdd a Standard Event\nIn\nSource\n, select the source of the event. For now, only WebEngage is supported.\nIn\nEvent Name,\nspecify your preferred name for the event.\nIn Attributes, enter the name of each attribute as in the Source(WebEngage). The attributes on the left refer to the names as in the Capillary system.\nTest the event to see whether data is flowing to the system or not. For example, for the Add to Cart event, open the WebEngage portal, and try adding items to the cart. The system will automatically validate the data and complete the testing process.\n📘\nThe Publish button will be active only once the page is refreshed after pushing the event's data to the system. You need to refresh the page manually.\nClick\nPublish\nto publish the event\nTest & Publish Event\nBy default, an event that is created will be in draft mode. Once the event is tested successfully and if the data is flowing as desired, you can publish the event to make it live.\nFor testing an event, you need to either pass the data in the supported format or in the code from where you want to implement or through API.\nTest event data using API\nBelow is the flow chart showing the steps involved in testing an event.\nHere are the steps to test an event using API.\nOn the Behavioral Events home page, in the\nAll Events\ntab, search for the event that needs testing and click on the event name.\nThe events attribute page opens.\nOn the event attributes page, go to the\n{ } Code\ntab. Copy the payload of the event.\nOpen an editor like Notepad to edit the payload. Fill in the correct values of the fields.\nThis payload is used as the request payload to Post Event API.\nOn the Behavioral Events home page, go to the\nWebhook\ntab and\ncreate a new custom Webhook\nor copy the URL of an existing custom Webhook.\n📘\nNote\nCreate a custom Webhook URL. When selecting the integration under the\nSelect Integration\ndrop-down, choose\nCustom\n.\nPOST the event\nusing the webhook URL and the event payload.\nValidate if the data flow of the event is successful using the\nGet Events Logs\nAPI.\nThe message and status fields indicate if the POST call was a success.\nRefresh the Behavioral Events home page.  The status changes from Testing Pending to Publish.\nClick\nPublish\nto publish the event.\nValidate event publishing in Member Care UI.\nFrom the customer home page, navigate to\nEvents\n>\nBehavioral events\nto see the event published.\nTimezone in behavioural events\nScenario 1: Behavioural Event payload without\neventDateTime\nvalue.\nDescription:\nThe system processes event times using GMT (Greenwich Mean Time). For instance, if an event is logged at 6 PM IST (Indian Standard Time), the system records the processing time as 12:30 PM GMT.\nScenario 2: Behavioural Event payload with eventDateTime\neventDateTime\nvalue\nDescription:\nThe system considers the date mentioned by the user in the specified format. This can be used in scenarios where you want to capture a past-dated event.\nExample:\nFor example,\n2024-08-05T14:30:5.3\nif the date format is\nyyyy-MM-dd'T'HH:mm:s.S\nReporting\nBehavioural events created within the system are automatically onboarded into the Insights database once the data is pushed into the event. After an organization is onboarded to the automated Behavioral Events (BE) flow, the data corresponding to all the BEs will be available for reporting within 24 hours after completion of ETL sync. This would allow the users to create normal charts and migration charts powered on BE data.\nAudience Filters\nAs soon as a behavioural event is created and its data is available in Insights, an audience filter is available in Engage+ for segregating users and creating an\naudience group\n. For more information on audience filter-based reporting, refer to the\nAudience group filter in reports\ndocumentation.\nUpdated\n26 days ago\nHandling of rejected transactions\nSetup Cards\nAsk AI\nTable of Contents\nBehavioral Events Overview\nObjective\nModules that consume Behavioral Events\nTypes of Behavioral Events\nNew terminologies\nWebhook\nWebEngage\nTransformer\nWebhook Adapter\nIntegration\nEvent and Attribute\nStandard Event\nCustom Event\nStandard Attributes\nCustom Attributes\nEvent routing in Connected Organizations\nHow it works\nExample: Multi-org health app\nMapping\nLimitations of Behavioral Events\nSteps to configure and publish an event\nAdd Webhook Integration\nWebhook Configuration for Behavioural Events in Connected Organizations\nAdd & map custom event\nEnabling uniqueness check\nUse case\nMap custom event to source event\nAdd a Standard Event\nTest & Publish Event\nTimezone in behavioural events\nReporting"}
{"url": "https://docs.capillarytech.com/docs/card", "title": "Setup Cards", "text": "Setup Cards\nIntroduction\nA card series represents different types of cards. For example, you can have card series for Digital and Physical Card. A card series contains information such as card series name, card type, card number configuration details, and expiry details. You can also extended fields for cards. You can either have auto-generated cards or manually generated cards.\nCard linked loyalty program: Card linked loyalty enables creating loyalty programs for each card series. This is applicable only for MLP enabled orgs. If a loyalty program is created based on card series, you cannot create another program based on zone or concept.\nFeatures\nThe following are the features of the Card Series module.\nCreate physical and digital card series for an org.\nCreate a card series\nwith either auto-generated card numbers or manually generated card numbers.\nAuto-assign card numbers to customers during registration or first transaction after card-series creation.\nManually issue cards to customers through\nmember care\nand integration platform (APIs).\nIssue one or more cards to customers from a card series.\nCreate a separate\nloyalty program for each card series\n.\nTerminologies in card module\nThere are a few terminologies that you need to know before starting card configuration.\nCard series\n: The card series represents different card types of an organization. For example. Value card, Premium card, Digital card, Physical card, and more. A card series stores information such as card series name, how to create card numbers for the card series, whether the card can expire and after how many days, and more. The following is the information stored in the card series.\nCard series name\nCard series code\nCard number generation configuration\nCard expiry configuration\nCard\n: This represents a card from a card series issued to a customer. A card stores information such as when the card was issued, when will it expire, from which store or source account the card was issued, and more. A customer can have multiple cards of the same card series. The following information is stored at the card level.\nCard expiry date\nCard issue date\nCard status\nStore code (where the card is registered)\nCard status\n: A card has a system-defined status code and a user-defined status label. Internal validations and out-of-box functionalities such as card-related KPIs use status codes and status labels. It also allows following different naming conventions to define card statuses. You can map multiple status labels to a status code. The system supports the following status codes.\nNOT_ISSUED\n:  This card is not issued to any customer\nACTIVE\n:  The card is in an active status.\nSUSPENDED\n: The card is temporarily blocked but you can reactivate it. If the card number is used as an identifier, you cannot make any transaction or redeem points and vouchers using the card in this status.\nDELETED\n: You can modify nothing in a card with this status. You cannot use this card in transactions, points, or voucher redemption.\nEXPIRED\n: You cannot use this card in transactions, points, or voucher redemption. You cannot change the status as well.\nThe following are examples of status labels.\nCard Assigned status label mapped to ACTIVE status code\nCard Blocked status label mapped to SUSPENDED status code.\nNew Card status label mapped to NOT_ISSUED status code.\nCard Generated Card Printed and Card Distributed to Store’ multiple status labels mapped to NOT_ISSUED status code.\nCard Permanently Deleted’ status label mapped to DELETED status code.\nCard Expired status label mapped to EXPIRED status code.\nCard issue\n: Card issue means linking cards to customers. The following are the three possible scenarios that can happen during registration or post-registration. For details, see\nissue card to a customer\nA digital or virtual card is issued to the customer.\nA physical card generated in Capillary is issued to the customer.\nA physical card not generated in Capillary is issued to the customer.\nCard configurations (Org level)\nYou need to configure the following card-related settings before creating the card series.\nMap standard status with preferred status labels.\nCreate multiple status labels for each standard status.\nSet the maximum number of cards issued to a customer.\nTo configure the card at the org level, follow these steps.\nNavigate to\nOrganization Settings\n>\nMiscellaneous\n>\nCard Configurations\n.\nClick\nModify global settings\nIn the\nMaximum no. of active cards per customer\n, enter the value to set the maximum number of cards (total number of card series) for a customer.\nIn\nStatus Mapping\n, tag standard statuses to your preferred statuses (custom status labels). There are five different standard statuses - Not issued, Active, Inactive, Deleted, and Expired.\nTo create and map a status label, follow these steps.\na. Navigate to a status for which you want to add a custom status label.\nb. Click\nCreate a new tag\nc. Enter a\nname\nfor the status label.\n📘\nOnce the tag(status label) is created and saved you cannot edit or delete the tag.\nd. Click on the newly created tag to make it the default tag. If only one tag(status label) is created for a status code, the system considers this tag as the default status tag.\nClick\nUpdate\n.\n📘\nAfter successfully configuring the card at the org level,\ncreate a card series\n,\ngenerate card numbers\n, and\nissue cards to customers\n.\nCounting Only Active Cards for Customer Limits\nTo count only cards labeled as ACTIVE towards a customer's card limit, you can enable the configuration CONF_COUNT_ONLY_ACTIVE_LABEL_CARD. Once enabled, only cards marked as ACTIVE will count towards the limit, while cards with statuses such as SUSPENDED or ISSUED will be ignored.\nBy default this configuration is disabled.\nTo enable the Configuration\n, raise a JIRA request to the Product Support team requesting activation of CONF_COUNT_ONLY_ACTIVE_LABEL_CARDS.\n📘\nNote\nOrg Level: The system will count only cards labeled as ACTIVE when enforcing the maximum card limit for a customer.\nCard Series Level: Similarly, only ACTIVE cards will be counted when determining the limit within a card series.\nWhen merging two customer profiles, the system will count only ACTIVE cards from both profiles.\nUse case - A customer’s card limit is set to 5.\nWhen Configuration Disabled:\nThe system counted ACTIVE, SUSPENDED, and ISSUED cards. If the customer had 3 ACTIVE, 1 SUSPENDED, and 1 ISSUED card, the system considered the total as 5, preventing additional card issuance.\nWhen configuration Enabled\nOnly ACTIVE cards are counted. The customer now has 3 ACTIVE cards, so they can receive 2 more ACTIVE cards.\nPrerequisite\nBefore configuring the card series, you need to set an\norg-related card configuration\n.\nCreate card series\nTo create a card series, follow these steps.\nNavigate to\nOrganization Settings\n>\nMiscellaneous\n>\nCard Configurations\nSelect the\nCards\ntab.\nClick\nCreate card series\n.\nIn\nName\n, enter the name of the card series.\nIn\nSeries code\n, enter a unique series code. It is recommended to use alphanumeric code. Once the card series is created, you cannot modify the series code.\nIn Series type, choose the type of card series -\nDigital\n: A digital card is a modern version of the loyalty card. Customers can manage these loyalty cards through InTouch or mobile applications. You can generate and download card numbers for digital cards.\nPhysical\n: A physical card is a traditional version of a loyalty card. You have to carry these cards to the store to redeem or issue points during or post-transaction.\nConfigure the selected card series. If the\nPhysical\ncard is selected follow steps\n7(a)\nand\n7(b)\nelse skip these steps.\nSelect the\nPhysical\ncard type.\nIn\nEnable card number generation\n, enable or disable the dynamic card number generation.\nEnable\nthe option to dynamically generate card numbers. Usually, auto-generated card numbers are not suitable for physical cards. However, if you wish to have it for the org, you can enable it. For details on automated card generation, refer to\nstep 8\n.\nDisable\nthe option to manually generate card numbers.\nIn\nCard generation\n, choose the options -\nCustomer registered with this card series, Customer registered from specific Org Unit\n, or Any registered customer to generate the card numbers dynamically. The card generation option does not appear for the physical card series type when the Enable card number generation is disabled.\nCustomer registered from this card series\n: Select this option to generate card numbers when this card series code is passed during customer registration. By default Customer registered with this card, the series is selected for card series creation.\nCustomer registered from a specific Org Unit\n: Select this option to generate a card number using this card series where the customer registration request comes from a till code that is mapped to the selected org unit(concept). For the first time, cards will be generated when the customer transaction or update request comes from the selected org unit.\ni. Select the preferred org unit name using the drop-down list.\nii.  **Any registered customer**:  Select this option to generate a card number and issue it to any registered customer in an org.\nIn the\nCard generation method\n, select the Basic option. By default, the basic option is selected. The card generation method does not appear for the physical card series type when the\nEnable card number generation\nis disabled.\nThe following are the configuration options.\nCard Prefix\n: Starting character of the card number. Maximum 50 characters are allowed.\nCard Length\n: Length of the card excluding prefix and suffix. Maximum 150 characters are allowed. This option is mandatory.\nCard Offset\n: Starting index of the cards to be generated.\nCard Suffix\n: Ending character of the card number. Maximum 50 characters are allowed.\nFor example: Create a card series with prefix\nGOLD\n, suffix\n2021\n, offset\n10\n, and length\n16\n, the first generated card number is ‘\nGOLD00000000000000102021\n’.\nIn a Maximum number of cards per active customer, set the value for the maximum number of active cards for a customer. Issue of new cards to the customer is not possible if the count of active cards (using this card series) exceeds the limit. The default value is 1.\nIn Enable card expiry, enable the option to set card expiry duration. Disable the option if you do not want to set an expiry duration.\nEnter the value to set a card series expiry period in days. Based on this configuration, the card expiry date depends on the date of the card issue to a customer.\nClick\nCreate series\n.\n📘\nAfter successfully creating a card series,\ngenerate card numbers\nand\nissue cards to customers\n.\nGenerate cards\nYou can generate the card numbers for a specific card series and download the list of card numbers in .txt format. At once the system can generate up to one lakh card numbers.\nTo generate and view card numbers, follow these steps.\nNavigate to\nOrganization Settings\n>\nMiscellaneous\n>\nCard Configuration\ns.\nSelect\nGenerated card tab\n.\nClick\nGenerate card number\n.\nIn the\nSelect card series\n, choose card series using the drop-down list. To see the options in the drop-down list configure the card series during card series creation. For details,\nsee create card series\n.\nIn the\nNumber of cards\n, enter the number of cards that you want to generate.\nIn\nStatus\n, select the card status using the drop-down list. In the drop-down list, you can select only Not issued status options. To see the options in the drop-down list configure the global settings. For details, see\ncard-related configurations (Org Level)\n.\nClick\nGenerate cards\n.\nIn\nGenerated cards\n, view the list of generated cards. The system generates the card number automatically based on card series configuration - Card Prefix, Card Suffix, and Card Length.\nSeries Name and Series Code\n: This field shows the card series name and code.\nGenerated on:\nDate or time when card numbers are generated.\nNo. of cards\n: Total number of cards generated.\nDownload\n: Download and check the generated card numbers in a text format.\n📘\nGenerated card numbers remain on the system for 30 days.\nAfter successfully generating card numbers,  you can issue cards to customers either using\nMember Care\nor API integration.\nModify Card Series\nTo view and modify a card series, follow these steps.\nNavigate to\nOrganization Settings\n>\nMiscellaneous\n>\nCard Configurations\n.\nSelect the\nCards\ntab.\nNavigate to the card series that you need to modify. You can use the\nSearch\noption to get a specific card series.\nClick the more options (...) icon  >\nEdit\n.\nYou can modify all the card series details except Series code, Series type, and Card generation type.\nClick\nUpdate series\n.\nDelete card series\nTo delete a card series, follow these steps\nNavigate to\nOrganization Settings\n>\nMiscellaneous\n>\nCard Configurations\n.\nClick the\nCards\ntab, navigate to the card series that you want to delete. You can use the\nSearch\noption to get a specific card series.\nClick\nDelete\n. The card series is deactivated and removed from the system.\nCard-based program\nA group company issues multiple loyalty cards of that org and a customer could have one or more loyalty cards that they could use across countries. The loyalty benefits such as points balance, earning rules, redemption rules, and tiers - are associated with a loyalty card (and not a country).\nMulti-Currency and Multi-Country Programs\nFields\nDescription\nBill Amount\nCaptures in local currency and uses conversion ratio for local-to-base currency conversion.\nBill Amount in Loyalty\nCaptures only in base currency.\nPoints Earning\nPoints on a bill amount in on the base currency.\nUpgrade on Amount\nEarning of points/bill amount in base currency or based on the custom field of bill amount in local currency.\nPoints Redemption across Programs\nSingle redemption across programs with single points-to-currency conversion (upcoming)\nPoints Redemption Discount\nCurrency is not applicable for points discount.\nTo configure and create loyalty programs for multi-brand orgs, follow these steps\n-\nLog on to InTouch and go to the Loyalty tab. You will see existing programs and an option to create a new program.\nClick\n+Loyalty Program\n. MLP workflow can be broadly categorized into the following three phases.\nStep 1: MLP Configuration\nPlease note that there should be no overlap between any two programs.\nYou can define the boundaries of a loyalty program either by a zone or concept hierarchy.  If a loyalty program is defined on a concept basis, then all events originating from all tills of that concept will pass through its configured program.\nDefault Program\n: A default program is created when we create an org in our system. All concepts and zones are mapped to the default program irrespective a separate program is running for that concept/zone.\nStep 2: Events\nFor any event such as transaction and customer update, first, the relevant programs will be identified and then the configured rules and actions will be executed for that particular program.\n📘\nThe default program will always be executed. If the event also matches with any other non-default program, that will also be executed\nStep 3: Get Details (API Call)\nWhenever any information such as Current points, tier, and a bulk call is required, either the calling module will pass the corresponding program or the system will identify the corresponding program from the configuration and pass the relevant value to the caller.\nUse Cases\nPoints Allocation Strategy\n: Each program has its own points allocation strategies. A point allocation strategy can be created and used within a program. The allocation strategy of one program cannot be used in any other program, not even within the Default Program. To know how to create Points Allocation Strategies, click here.\nPoints Expiry strategy\n: Each program has its own points expiry strategy. A point expiry strategy can be created and used within a program. The expiry strategy of one point cannot be used in any other program, not even in the Default Program. To know how to create Point Expiry Strategy, click here.\nPoints Redemption Strategy\n: Each program has its own points redemption strategy and points to currency conversion ratio. The redemption strategy of one program cannot be used in any other program, not even in the Default Program. Points redemption strategies can be created and used within a program. To know how to create point redemption strategies, click here.\nWhile making redemption, the caller has to specify from which program and how much point needs to be redeemed. Whenever a redemption call is made and the program id is not passed, the points will deduct from the program/till where the redemption call is made.\nManage Trackers\n: Trackers created within a program can be used and evaluated within the program. It will work the same as in the case of a single loyalty program. Tracker of one program can not be used or evaluated in any other program, not even in the default program. To know more click here.\nCustomer Registration\n: Customers once registered in any program by default will register across brands in the org but the enrollment will be done only for the program to which the till belongs.  Enrollment in other brands will not happen till the customer makes a transaction in that program.\nCustomer updates\n: Customer update events will pass through all the programs which as associated with the till from where the event is fired. So if the Org wants to allocate points to a brand loyalty program or a Default program, then they have to write rules on the brand loyalty program and Default program as well.\nManage Tiers\n: Tiers for each program can be created within the program and they work within the program only. Click here to know more.\nConfigure for Transaction event\nNew Transaction\n: Once a transaction is made, the corresponding programs will be identified, and accordingly “new transactions” rules will execute.\nTransaction Update\n: Any transaction update event will only pass through the corresponding program that is configured for the till from which the update event is initiated. In case the transaction creates and transaction update tills are different then rules will run for the program where the transaction has originated.\nTransaction Return\n: For the Transaction return event, the rules will be executed from the program where the purchase was made, not where the return is made. For eg, the Customer transacted at till 1(Program 1) but return the products at till 3 (Program 2), in this case, the return rules will be executed from Program 1, not for Program 2.\nConfiguring Rules/Sets\nRule and set configuration need to be configured at the program level depending on the requirement. The rules configured for lifetime purchases, current points, no. of transactions, etc are always in the context of the program. For example, lifetime purchases are the purchases made in that program.\nFor example, let's assume a customer has made 6 transactions across the organization in different tills/stores.\nIf one writes a rule within program 1 on currentcustomer.lifetimepurchase, it will be evaluated on 1200, and on program 2 it will be evaluated on 900. Moreover, each program will have over customer KPIs such as Lifetime purchase, current points, lifetime points, trackers Visit count, and a number of transactions.\nOne View of Customer\nOne will be able to see program-wise (including Default Program) details of a customer with program-level KPIs in Member care and Binary. See the figure below. For eg, if a concept/till is not mapped in the Default program then the corresponding transaction/point will not be available in customer KPIs in Default Program.\nLimitations\nCurrently, programs can run either at concept or zone but not both\nOne concept/zone can only have one loyalty program (excluding the default program)\nPoints can only be redeemed from one program at a time.\nMultiple Loyalty programs cannot run at the store level i.e. different programs at each store of the brand\nProduct category/brand based loyalty program configurations are not available\nMultiple currencies are not supported across loyalty programs.\nUpdated\n4 months ago\nSetup Behavioral events\nSetup User Groups\nAsk AI\nTable of Contents\nIntroduction\nFeatures\nTerminologies in card module\nCard configurations (Org level)\nCounting Only Active Cards for Customer Limits\nPrerequisite\nCreate card series\nGenerate cards\nModify Card Series\nDelete card series\nCard-based program\nUse Cases\nLimitations"}
{"url": "https://docs.capillarytech.com/docs/user-group", "title": "Setup User Groups", "text": "Setup User Groups\nIntroduction\nA user group comprises individuals in a hierarchical order who belong to a particular organisation. An individual can belong to multiple user groups. An organisation can designate different roles to these members and incentivise them according to the organisation’s preference. User group loyalty allows an organisation to incentivise not only its customers but also other business entities or individuals that contribute to their profits. It is a customer retention solution with custom group structures and includes generic loyalty mechanics which help an organisation to establish brand loyalty.\nIn user group loyalty, an individual’s (member of a group) action will lead to other group members being rewarded.\nFor example, if a fleet driver fills petrol from BPCL, the manager of the fleet group can receive points for the transaction. This way of incentivising the upper management encourages other members of the group to transact with an organisation.\nKey concepts\nThe following are some of the key concepts of user group loyalty\nIn B2B Loyalty, an org is identified as an entity.\nAn individual can be part of multiple groups.\n📘\nYou can configure the total number of groups that a member can be part of.\nThe parent control or the admin role can be transferred from one member to another.\nPermissions to manage group benefits.\nA member of a group can still make individual transactions.\nAll the members in a group can pool in their transactions for a tier upgrade.\nPoints return and downgrade checks are supported in case of transaction return.\nBoth the group and the individual can be incentivized when they transact while representing the group.\nUse Cases\nFollowing are the different scenarios where user group loyalty is applicable.\nB2B Loyalty\nVertical\nDescription\nFleet Loyalty\nFuel Brands can enroll fleet companies in their B2B loyalty programs. Fleet Drivers can earn loyalty points by purchasing fuel at retail outlets but points redemption can happen by fleet owners who are in the same group as the driver.\nCorporate Loyalty Programs\nPoints earned by an employee of a company enrolled in a B2B loyalty program can be redeemed at the company level where other members of the company will also enjoy the benefits of the transaction made by a particular employee.\nCPG and Distributor Loyalty Programs\nA sales structure where existing distributors can recruit new distributors to sell the products. Distributors make money through a percentage of their recruits' sales and also direct sales of products to customers.\nAffiliate Marketing Programs\nThe affiliate enrolled in the program can make customers buy products. With a product purchased by the customer, the rewards are accrued to the affiliate's account.\nNew Terminologies\n1.\nCompany\n: Any business entity which is enrolled in the brand’s B2B loyalty program.\nSub-company\n: A smaller business entity associated with a Company. For example, a big company like Tata can be registered as a company while Tata Motors, TCS can be registered as sub-companies.\nCustomer Role\n: Role is used to capture the association between customer and company. A company can have customers in various roles. For example, a company enrolled in a fleet loyalty program of a brand can have customers in various roles like a driver, associate, owner, etc.\n3.\nCustomer Hierarchy\n: Customer hierarchy is used to capture the association between two customer roles. To know how to create hierarchy using APIs, see\nHierarchy\n🚧\nNote\nFriends and family usergroups are now deprecated.\nUpdated\n2 months ago\nSetup Cards\nSetup Customer Hierarchy\nAsk AI\nTable of Contents\nIntroduction\nKey concepts\nUse Cases\nNew Terminologies"}
{"url": "https://docs.capillarytech.com/docs/hierarchy", "title": "Setup Customer Hierarchy", "text": "Setup Customer Hierarchy\nA user group comprises individuals in a hierarchical order who belong to a particular org. An individual can belong to multiple user groups. An org can designate different roles to these members and incentivize them according to the org’s preference. User group loyalty allows an org to incentivize not only its customers but also incentivize other business entities or individuals that contribute to their profits. It is a customer retention solution with custom group structures and includes generic loyalty mechanics which helps an org to establish brand loyalty.\nConfiguring Hierarchy\nCustomer hierarchy is used to capture the association between two customer roles. Hierarchy definition stores the required attributes for hierarchy creation (such as customer roles), validation rules for each role, group automation, and role-based loyalty permissions. An org can create multiple hierarchy definitions to capture its client companies’ organizational structures. Each company can have only one hierarchy. Once the hierarchy is set up, all the attributes and configurations created in the hierarchy will apply to the customers associated with the company.\nTo create a new hierarchy, do the following.\n📘\nYou can only add new roles and validation rules but cannot modify existing roles and rules.\nOn\nInTouch\n, navigate to\nOrganisation Settings > Hierarchy Configuration\n.\nClick\nNew hierarchy definition\n.\nIn\nHierarchy definition name\n, enter a customized name for the hierarchy.\nIn\nHierarchy definition code\n, enter a unique code for the hierarchy identification.\n📘\nYou cannot change an existing Hierarchy Definition Code.\nClick\nNext\n.\nIn\nRoles\n, add all the relevant user roles in the hierarchy.\n📘\nAt least two user roles are required to create a hierarchy and can extend up to eight roles.\nIn\nValidation rules\n, define the association between two roles to maintain the hierarchical structure.\n📘\nEnable Skip role mapping allowed to allow skip level associations. For example, in a company, an associate can report to a zonal manager in the absence of the city manager. If disabled, hierarchy rules are strictly followed, and skip level associations are not possible.\nA user in the Child role can be associated with the user in the Parent role.\nMax no. of child customers, the maximum value that you can enter is 30,000.\n📘\nYou can set up multiple associations by adding rules. A role can be configured as a parent role in only 1 rule. Similarly, a role can be a child role for only 1 rule. The same role cannot act as both parent and child roles.\nIn\nGroup Automation\n, Enable group automation to create groups implicitly.\nIn Group creation based on, select the role on which the group is created. This role becomes the owner/admin of the group.\nEnable Automated member addition to automatically add all users associated with the admin to the group automatically.\n📘\nYou can create only one rule with automatic member addition.\nIn\nGroup Permissions\n, provide role-based access control on loyalty actions like points redemption and points transfer.\n📘\nYou can change Group Permissions for each role later.\nClick\nCreate\n.\nUpdated\n4 months ago\nSetup User Groups\nSetup Entities and Fields\nAsk AI\nTable of Contents\nConfiguring Hierarchy"}
{"url": "https://docs.capillarytech.com/docs/data-fields", "title": "Setup Entities and Fields", "text": "Setup Entities and Fields\nExtended fields\nView Extended fields on InTouch\nTo view extended fields of your organization:\nOn InTouch navigate to\nSettings\n>\nMaster Data Management\n>\nData Model\n>\nExtended Fields\n.\nYou will see extended fields of each vertical as shown below.\nClick on each vertical to see the extended fields enabled for your org.\nEdit extended fields & Add enum values using InTouch\nYou can update an extended field to show/hide it, set the position on the UI, choose whether mandatory or optional, and add enum values. The extended field format is\nlongtext\n, which supports up to 4GB of text.\nTo add custom enum values to an extended field, click on the extended field\nField\nDescription\nInsert Enum Values (applicable for fields with datatype enum)\nEnter each supported value for the field and click\nAdd\n.\nNew Enum Values (applicable for fields with datatype enum)\nYou will see the list of values added for the extended field. To remove any value from the list, click on the value to select and click\nRemove\n.\nHide Display\nCheck this hide the entended field. This field applies to client-side applications like Instore and does not undergo any server-side validation.\nIs Mandatory\nCheck this to make the extended field mandatory. This field applies to client-side applications like Instore and does not undergo any server-side validation.\nIs Updatable\nChis this to allow updating the extended field values once entered. This field applies to client-side applications like Instore and does not undergo any server-side validation.\nPosition\nSet the position of the extended field on the client application. 1 for the top, 2 for the second, and so on. This field applies to client-side applications like Instore and does not undergo any server-side validation.\nDefault Value\nDefault value for the extended field. This field applies to client-side applications like Instore and does not undergo any server-side validation.\nEnable audit trail\nSelect the checkbox to enable audit logging of the extended field. You can add up to 5 extended fields for audit logging.\nIs it PII data\nSelect the checkbox to classify the extended field as PII data.\nIs this psi data\nSelect the checkbox to classify the extended field as sensitive data. Refer to the PSI data documentation for more\ninformation on classifying PSI data\n.\nReject txn on invalid value\nSelect the checkbox to reject the transaction if the values are invalid.\nTo see extended fields of a vertical, click the respective +\nicon\n.\nFIELD\nDescription\nName\nName of the extended field as created in the DB\nEntity Type\nType of the field\nLabel\nName of the field as it appears on the UI\nData Type\nThe data type of the field\nEnum Values\nSupported values of the field (if applicable)\nIs Mandatory\nIndicates if the extended field is mandatory. This field applies to client-side applications like Instore and does not undergo any server-side validation.\nIs Updatable\nIndicates if the extended field is updatable. This field applies to client-side applications like Instore and does not undergo any server-side validation.\nHide Display\nIndicates if extended field is configured to hide from the client application. This field applies to client-side applications like Instore and does not undergo any server-side validation.\nPosition\nDisplays the position set for the extended field. This field applies to client-side applications like Instore and does not undergo any server-side validation.\nDefault value\nDisplays the default value of the extended field. This field applies to client-side applications like Instore and does not undergo any server-side validation.\nIs Audit trial enabled\nIndicates if audit logging of extended field is enabled.\nIs PII data\nIndicates if the extended field is classified as PII data.\nIs PSI data\nIndicates if the extended field is classified as PSI data. Refer to the PSI data documentation for more\ninformation on classifying PSI data\n.\nConfigure org extended fields and enum values through API\nYou can view the list of extended fields enabled for an organization through a V2 API.\nRequest: https://{host}/v2/extendedFields\nMethod: GET\nSample Request:\nhttps://newapi.nightly.capillary.in/v2/extendedFields\nSample Response:\nJSON\n{\n\"entity\": {\n\"CUSTOMER\": [\n{\n\"name\": \"gender\",\n\"createdBy\": -1,\n\"createdOn\": \"2017-04-12\",\n\"modifiedBy\": -1,\n\"modifiedOn\": \"2017-04-12\",\n\"label\": \"Gender\",\n\"entityType\": \"CUSTOMER\",\n\"dataType\": \"STANDARD_ENUM\"\n},\n{\n\"name\": \"marital_status\",\n\"createdBy\": -1,\n\"createdOn\": \"2017-05-18\",\n\"modifiedBy\": -1,\n\"modifiedOn\": \"2017-05-18\",\n\"label\": \"Marital Status\",\n\"entityType\": \"CUSTOMER\",\n\"dataType\": \"STANDARD_ENUM\"\n},\n{\n\"name\": \"Age\",\n\"createdBy\": -1,\n\"createdOn\": \"2017-05-18\",\n\"modifiedBy\": -1,\n\"modifiedOn\": \"2017-05-18\",\n\"label\": \"amount\",\n\"entityType\": \"CUSTOMER\",\n\"dataType\": \"INTEGER\"\n},\n{\n\"name\": \"Region\",\n\"createdBy\": -1,\n\"createdOn\": \"2017-05-18\",\n\"modifiedBy\": -1,\n\"modifiedOn\": \"2017-05-18\",\n\"label\": \"Region\",\n\"entityType\": \"CUSTOMER\",\n\"dataType\": \"CUSTOM_ENUM\"\n},\n{\n\"name\": \"dob\",\n\"createdBy\": -1,\n\"createdOn\": \"2017-06-13\",\n\"modifiedBy\": -1,\n\"modifiedOn\": \"2017-06-13\",\n\"label\": \"Date of Birth\",\n\"entityType\": \"CUSTOMER\",\n\"dataType\": \"DATETIME\"\n},\n{\n\"name\": \"ssnNumber\",\n\"createdBy\": -1,\n\"createdOn\": \"2017-06-13\",\n\"modifiedBy\": -1,\n\"modifiedOn\": \"2017-06-13\",\n\"label\": \"SSN Number\",\n\"entityType\": \"CUSTOMER\",\n\"dataType\": \"STRING\"\n},\n{\n\"name\": \"nationality\",\n\"createdBy\": -1,\n\"createdOn\": \"2017-06-13\",\n\"modifiedBy\": -1,\n\"modifiedOn\": \"2017-06-13\",\n\"label\": \"Nationality\",\n\"entityType\": \"CUSTOMER\",\n\"dataType\": \"STRING\"\n},\n{\n\"name\": \"language\",\n\"createdBy\": -1,\n\"createdOn\": \"2017-06-13\",\n\"modifiedBy\": -1,\n\"modifiedOn\": \"2017-06-13\",\n\"label\": \"Preferred Language\",\n\"entityType\": \"CUSTOMER\",\n\"dataType\": \"STRING\"\n},\n{\n\"name\": \"ethnicity\",\n\"createdBy\": -1,\n\"createdOn\": \"2017-07-20\",\n\"modifiedBy\": -1,\n\"modifiedOn\": \"2017-07-20\",\n\"label\": \"Ethnicity\",\n\"entityType\": \"CUSTOMER\",\n\"dataType\": \"STRING\"\n},\n{\n\"name\": \"zip\",\n\"createdBy\": -1,\n\"createdOn\": \"2017-07-20\",\n\"modifiedBy\": -1,\n\"modifiedOn\": \"2017-07-20\",\n\"label\": \"Zip Code\",\n\"entityType\": \"CUSTOMER\",\n\"dataType\": \"STRING\"\n}\n],\n\"REGULAR_LINEITEM\": [\n{\n\"name\": \"associate\",\n\"createdBy\": -1,\n\"createdOn\": \"2017-04-12\",\n\"modifiedBy\": -1,\n\"modifiedOn\": \"2017-04-12\",\n\"label\": \"Associate\",\n\"entityType\": \"REGULAR_LINEITEM\",\n\"dataType\": \"CUSTOM_ENUM\"\n},\n{\n\"name\": \"uuid\",\n\"createdBy\": -1,\n\"createdOn\": \"2017-04-12\",\n\"modifiedBy\": -1,\n\"modifiedOn\": \"2017-04-12\",\n\"label\": \"UUID\",\n\"entityType\": \"REGULAR_LINEITEM\",\n\"dataType\": \"STRING\"\n      },\n\n\"warnings\": [],\n\"errors\": [],\n\"success\": true\n}\nCreating reports using extended fields\nTo display the extended fields on Insights and use this data to create reports, perform the following:\nCreate a JIRA ticket to the Sustenance team and create a vertical-level field on the Capillary platform.\nCreate a JIRA ticket to the Insights team and create an audience filter for the extended field.\nConvert custom field to extended field\nOnce you have the custom field created, raise a ticket to the Platforms team requesting the conversion to the extended field. Once it is created, you can use the field in reports and campaigns.\nHowever, the team verifies the request and decides whether to convert to the extended field.\n📘\nThe team might reject the request if the custom field is too specific and does not make general sense.\nThe platform team takes care of mapping custom field values to extended fields.\nSupported date formats in extended fields\nThe extended fields support following date formats:\nyyyy-MM-dd\nyyyy-MM-ddTHH:mm:ssZ (ISO 8601 with Z for UTC timezone)\nyyyy-MM-ddTHH:mm:ss+hh:mm (ISO 8601 with offset)\nSupported date formats and behaviour\nThe table below explains the behaviour using an example specific to the India cluster.\nInput Format\nExample Value\nInterpretation\nSaved in DB (UTC)\nShown in Member Care\nyyyy-MM-dd\n\"1986-07-15\"\nTime assumed as\n00:00:00\nUTC\n1986-07-15T00:00:00.000+00:00\n1986-07-15T05:30:00+05:30\nyyyy-MM-ddTHH:mm:ssZ\n\"1986-07-15T00:00:00Z\"\nExact UTC timestamp\n1986-07-15T00:00:00.000+00:00\n1986-07-15T05:30:00+05:30\nyyyy-MM-ddTHH:mm:ssZ\n\"1986-07-15T14:30:00Z\"\nExact UTC timestamp\n1986-07-15T14:30:00.000+00:00\n1986-07-15T20:00:00+05:30\nyyyy-MM-ddTHH:mm:ss+05:30\n\"1986-07-15T14:30:00+05:30\"\nLocal time with offset\n1986-07-15T09:00:00.000+00:00\n1986-07-15T14:30:00+05:30\nCustom Fields\nCustom fields are columns that store special or custom information related to customers, transactions, transaction line-items, coupons, and so on. As there is no control over the field values, it is difficult to run reports on custom fields. For example, if the custom field Gender has values M, F, and MF,  it becomes difficult for an analyst to work directly on such data.\nCreate new custom fields\nOn InTouch, navigate to\nProfile\n>\nOrganization Settings\n>\nMaster Data Management\n>\nData Model\n>\nCustom Fields\n.\nThe following are different entries for which you can create custom fields.\nLoyalty registration\nLoyalty transaction\nCustomer feedback\nZone custom fields\nStore custom fields\nPoints redemption\nVoucher redemption (coupon redemption)\nCustomer advanced feedback\nCustomer preferences\nCustomer Card\nTo see the custom fields of an entry, click the respective + icon.\nTo create a new custom field, click\nAdd new custom field\n. The maximum number of characters supported for a custom field name is 20, and the maximum number of supported values for the custom field value is 250.\nFill in the fields and click\nSubmit\n.\nOPTION\nDESCRIPTION\nDisabled\nCheck this to hide the custom field on the UI.\nIs Compulsory\nCheck this to make the field mandatory. This field applies to client-side applications like Instore and does not undergo any server-side validation.\nIs Updatable\nCheck this to make the field value modifiable - once entered can be updated again when needed. This field applies to client-side applications like Instore and does not undergo any server-side validation.\nDisable Custom Field\nCheck this to inactivate the custom field.\nField Name\nName of the field.\nField Type\nChoose the input type - text, text area, select box, checkbox, radio button, button, email body, feedback, and so on.\nBased on the option you choose, you will see relevant configuration fields. For example, if it is a select box, you need to enter the supported values to select.\nField Scope\nChoose the entry of the custom field from the options available.\nLoyalty registration\nLoyalty transaction\nCustomer feedback\nZone custom fields\nStore custom fields\nPoints redemption\nVoucher redemption (coupon redemption)\nCustomer advanced feedback\nCustomer preferences\nLabel\nEnter the field name to appear on the UI\nDefault Values\nEnter the values of the field in case of a selection field such as radio button, checkbox, select box, and so on.\nPosition\nSpecify the sequence order of the custom field. For example, 1 to appear in the first position of the form. This field applies to client-side applications like Instore and does not undergo any server-side validation.\nRegular Expression for verification\nConfigure regex for the field value in the case of the free text field.\nError message for Regex Failure\nEnter the error message to show in case of regex failure.\nHelp Text For The Field\nEnter the help text(more information) you want to show for the field. This appears on the right of the field\nAttributes (Format = Label:Value)\nEnable Audit Trail\nSelect the checkbox if you want to enable audit logging of the custom field. You can add up to 5 custom fields for audit logging.\nIs this pii data ?\nSelect the checkbox if you want to classify the custom field as PII data.\nIs this psi data\nSelect the checkbox to classify the extended field as sensitive data. Refer to the PSI data documentation for more\ninformation on classifying PSI data\n.\n📘\nWhen you make changes in a custom field\nFor Store Server, do a complete sync from Settings or wait until the next auto-sync completes (usually every one hour).\nFor Thin Client, please restart your thin client and check whether you are able to see the changes.\nUpdated\n2 months ago\nSetup Customer Hierarchy\nCreate Search Filter for Entities\nAsk AI\nTable of Contents\nExtended fields\nView Extended fields on InTouch\nEdit extended fields & Add enum values using InTouch\nConfigure org extended fields and enum values through API\nCreating reports using extended fields To display the extended fields on Insights and use this data to create reports, perform the following:\nConvert custom field to extended field\nSupported date formats in extended fields\nCustom Fields\nCreate new custom fields"}
{"url": "https://docs.capillarytech.com/docs/create-search-filter", "title": "Create Search Filter for Entities", "text": "Create Search Filter for Entities\nUse Cases\nOverview\nCreating a Search Filter\nPerform Search\nFAQs\nUpdated\n4 months ago\nSetup Entities and Fields\nUse Cases\nAsk AI"}
{"url": "https://docs.capillarytech.com/docs/use-case-search-filter", "title": "Use Cases", "text": "Use Cases\nUse Case 1: Partial Match with OR Conditions\nYou want to search for a customer using one of several identifiers—\nmobile number\n,\nemail ID\n, or\nexternal ID\n. You're okay with partial input. For instance, typing just part of the mobile number or a fragment of the email ID should still return relevant results.\nSolution\nYou can create a search filter with\nmobile OR email OR external ID\ncondition. This is useful when you don’t have the full details but still want to pull up the right customer profile using whatever you’ve got.\nUse Case 2: Exact Match with AND Conditions\nYou want to search for a customer using a combination of details—\nfirst name\n,\ndate of birth\n, and\ncity\n. In this case, you're doing a full search. You’ll enter the complete first name (e.g.,\nFrodo\n), the full date of birth, and the full city name (e.g.,\nMount Doom\n). No partials.\nSolution\nYou can create a search filter with\nfirst name AND date of birth AND city\n(requires exact match). This approach is ideal when you want to narrow down the results to an exact individual based on multiple known fields.\nUse Case 3: Exact Match with Optional Filter\nYou want to search for a customer using\nfirst name\n,\ndate of birth\n, and\ncity\n. These are your primary fields and require an exact match. Additionally, you want to refine the search further using the\nzip code\n—but this field is optional. If provided, it’ll narrow down the results even more.\nSearch Criteria:\nfirst name AND date of birth AND city\nzip code\n(optional)\nThis is helpful when you have most of the key information but want to add another layer to reduce ambiguity in search results.\nUse Case 4: Primary ID with Optional Filters\nYou’re looking for a specific transaction using the\ntransaction (bill) number\n. To help limit the result set—especially if multiple systems or hotels use similar formats—you can add\ncheck-out date\nand\nhotel name\nas optional filters.\nSearch Criteria:\ntransaction number\ncheck-out date\n(optional)\nhotel name\n(optional)\nUse this when the transaction ID is the main identifier, but extra filters can help isolate the right record more quickly.\nUpdated\n4 months ago\nCreate Search Filter for Entities\nOverview\nAsk AI\nTable of Contents\nUse Case 1: Partial Match with OR Conditions\nSolution\nUse Case 2: Exact Match with AND Conditions\nSolution\nUse Case 3: Exact Match with Optional Filter\nUse Case 4: Primary ID with Optional Filters"}
{"url": "https://docs.capillarytech.com/docs/overview-search-filter", "title": "Overview", "text": "Overview\nThe Search filter feature lets you define how you want to look up Customer or Transaction data.  After creating a search filter, you can use the\nCopy cURL\nfeature to import it into the API tool and run it.\nCore Concepts\nWhat is a Search Filter?\nA\nsearch filter\nis a set of one or more indexed fields used to quickly look up data. You define which fields to search on—this setup is called the\nsearch filter\n.\nThere are two types of filters:\nAND filter\n– Returns results only when\nall\nthe conditions are met\nOR filter\n– Returns results when\nany\nof the conditions are met (available only for the\nCustomer\nentity)\nOnce the filter is set, the system knows how to query the database efficiently. You can then use the\nSearch API\nto fetch the results.\nKey Features\nDefine the fields to search on—including custom and extended fields\nSet the time range for the data you want to query\nSupports\npartial search\n(starts with) for customer records\nWorks across multiple languages\nCompatible with the\nVulcan\nUI framework (but not limited to it)\nChoose which fields appear in the search results; use\nNeo\nfor advanced customization\nUnderstanding Cardinality\nWhen creating a search filter, the system first checks the\ncardinality\nof the fields you've selected. Filters with\nhigh cardinality\nare more likely to pass validation and be activated.\nHigh Cardinality\nmeans the field (or combination of fields) has a large number of unique values. This makes it a strong candidate for indexing and searching.\nExample:\nBill number\n—each value is likely unique.\nLow Cardinality\nmeans the field has only a few unique values. These fields aren’t ideal for filtering on their own.\nExample:\nGender\n—only a handful of values like Male, Female, Other. A filter with only this field will likely fail validation.\n👉\nNote:\nCardinality is calculated based on all\nmandatory fields\nin your filter.\nThe filter must pass the\ncardinality check\nbefore it can be activated.\nSearch Filter Capabilities\nEntity\nFilter Type\nFilter Limit\nMandatory Fields Limit\nNon-mandatory Fields Limit\nSearch Operators\nHistorical Data\nCustomer\nOR\n2\n–\n–\nSTARTS_WITH\n(partial search)\n10 years (based on registration date)\nCustomer\nAND\n5\n5\n6\nEQUALS\n,\nRANGE\n(for date/datetime fields)\n10 years (based on registration date)\nTransaction\nAND\n5\n5\n6\nEQUALS\n,\nRANGE\n(for date/datetime fields)\n365 days (based on billing date)\nExample Flow\nStep 1:\nDefine Filter\nCustomer entity\nFields:\nmobile OR email OR external ID\nFilter type:\nOR\nStep 2:\nCall Search API\nEndpoint:\nv2/search/entity\nReturns customer records that match any of the fields\nUpdated\n3 months ago\nUse Cases\nCreate a Search Filter\nAsk AI\nTable of Contents\nCore Concepts\nWhat is a Search Filter?\nKey Features\nUnderstanding Cardinality\nSearch Filter Capabilities\nExample Flow"}
{"url": "https://docs.capillarytech.com/docs/create-search-filter-", "title": "Create a Search Filter", "text": "Create a Search Filter\n1. Navigate to the Search Filter Configuration Page\nNavigate to\nOrganization Settings\n>\nMaster Data Management\n>\nSearch Filters\n.\nOr, open it directly via URL:\n\\{host\\}/search-criteria/ui\nExample for the Europe cluster:\nhttps://eu.intouch.capillarytech.com/search-criteria/ui\n2. Start Creating a New Filter\nClick\nNew Search Filter\n.\n3. Configure Basic Filter Details\nEntity\n: Select either\nCustomer\nor\nTransaction\n.\nName\n: Enter a name for the filter.\nSearch Condition\n: Choose\nAND\nor\nOR\n.\nEntity\nSearch Condition Options\nUsage\nTransaction\nAND only\nCombine fields (e.g., bill number\nAND\nbill date). You can mark fields as mandatory.\nCustomer\nAND OR\nAND\n: Combination searches like first name\nAND\nlast name.\nOR\n: Partial searches like the first few letters of a name or phone number.\n4. Set Search Duration\nApplicable only for\nAND\ncondition.\nMaximum:\n365 days\nFor\nCustomer\nfilters using\nOR\n, the duration is fixed at\n10 years\n.\nThis defines the rolling window for searchable data.\nDuration is based on when the event was ingested:\n–\nCustomer\n: Registration date\n–\nTransaction\n: Billing date\n5. Choose Searchable Fields\nField options vary based on the entity and condition:\nTransaction (AND)\nCustomer (AND)\nCustomer (OR)\nStandard Fields\noutlierStatus\n,\nbillDate\n,\nbillNumber\n,\ntransactionType\n(only one date/datetime allowed)\nfirstName<code>, </code>lastName\nfirstName\n,\nlastName\n,\nmobile\n,\nexternalId\n,\nfullName\n,\nemail\nAdditional Fields\nstorecode\n–\n–\nCustom Fields\nSupported\nSupported\nNot supported\nExtended Fields\nSupported\nSupported\nNot supported\n6. Mark Mandatory Fields (Only for AND)\nAND filters\n:\n– At least one field must be indexed\n– Max 6\nmandatory\nand 5\nnon-mandatory\nfields\nOR filters\n: No mandatory fields required\n7. Validate the Filter\nClick the\nValidate\nbutton.\nOn the\nConfirm Filter Creation\ndialog, click\nYes, Sure\n.\nValidation takes\n15–20 minutes\n.\nFilters with\nhigh cardinality\nhave a better chance of passing.\n8. Activate the Filter\nOnce validation is successful:\nOpen the meatball menu for the filter.\nSelect\nActivate\n, then click\nCreate\n.\nStatus changes from\nActivation in progress\nto\nActive\n.\n9. Deactivating a Filter\nFrom the list page, select\nDeactivate\nfrom the filter's menu.\nNote: Deactivated filters cannot be reactivated. You’ll need to create a new one if needed.\nUpdated\n3 months ago\nOverview\nPerform Search\nAsk AI\nTable of Contents\n1. Navigate to the Search Filter Configuration Page\n2. Start Creating a New Filter\n3. Configure Basic Filter Details\n4. Set Search Duration\n5. Choose Searchable Fields\n6. Mark Mandatory Fields (Only for AND)\n7. Validate the Filter\n8. Activate the Filter\n9. Deactivating a Filter"}
{"url": "https://docs.capillarytech.com/docs/performing-search-", "title": "Perform Search", "text": "Perform Search\nYou can perform searches using two endpoints, depending on the type of results you need. Both support the same search filters—the difference lies in the metadata they return.\nUse\n/api_gateway/cortex/v1/search\nif you only need matching customer or transaction IDs.\nUse\n/v2/search/entity\nif you want enriched results, including standard, custom, and extended fields. You can use the\ncopy cURL feature\nto use this API.\nIt is recommended to use the\n/v2/search/entity\nendpoint for most brand use cases.\nUsing the copy cURL feature\nAfter creating a search filter, you can use the Copy cURL feature in the Search Filter UI to copy the Search API cURL, import it into an API testing tool, and run it. The Copy cURL option appears when the search criteria is validated and active.\nThe following is a sample cURL copied using the Copy Search cURL option for a search filter created for the customer entity with the criteria: firstName or lastName:\ncurl --location 'https://eu.intouch.capillarytech.com/v2/search/entity' \\\n          --header 'Content-Type: application/json' \\\n          --header 'X-CAP-API-OAUTH-TOKEN: {{TOKEN}}' \\\n          --header 'Cookie: _cfuvid={{CFUID}}' \\\n          --data '{\"entityType\":\"CUSTOMER\",\"searchConditions\":[{\"fieldId\":\"firstName\",\"operator\":\"STARTS_WITH\",\"values\":[\"firstName\"]}],\"enrichmentFields\":{\"enrichedFields\":[\"*\"],\"customFields\":[\"*\"],\"extendedFields\":[\"*\"]}}'\nUpdated\n3 months ago\nCreate a Search Filter\nFAQs\nAsk AI\nTable of Contents\nUsing the copy cURL feature"}
{"url": "https://docs.capillarytech.com/docs/search-filter-faq", "title": "FAQs", "text": "FAQs\nHow are null values handled in the search?\nIf a search is created using a field that has no value associated with it, you won’t receive any matching records when you perform the search. For example, if an indexed field called age has no assigned value, the system will not include those records in the search results.\nWhat is the default order for the search results?\nThe search results are returned in descending order based on the registration date. This is the time when the customer data was initially entered into the collection—not the auto-update time. Even if a record is later updated, the ordering remains based on the original registration timestamp.\nWhat happens to deleted customers (PII deletion) in search results? Are changes to customer identifiers reflected in search?\nDeleted customers (due to PII deletion) are removed from search results. When a customer identifier is changed, these changes are also reflected in the search functionality.\nHow can I perform a search?\nYou can use or integrate the\nSearch API\nto search.\nUpdated\n4 months ago\nPerform Search\nMember Care\nAsk AI"}
{"url": "https://docs.capillarytech.com/docs/member-care", "title": "Member Care", "text": "Member Care\nThe Member Care page provides the complete details of a customer.\nIntroduction\nMember Care is an application that offers a 360 view of the customer and also acts as a request management portal for support needs. It enables teams to effortlessly access and oversee customer accounts. Member care can be used by both external and internal users.\nExternal users\n:\nCustomer support team: They can view customer details, handle service requests such as Identifier Change and Account Merge, and monitor real-time customer events for troubleshooting purposes.\nMarketing team: They can get a 360-degree view of customer data and plan campaigns.\nInternal users\n:\nSystem integrators and Customer Success Managers (CSM): They use Member Care to verify the ingestion of customer-level event data. They can instantly check operations performed for a customer.\nSupport team: The Capillary support team utilizes Member Care to troubleshoot and resolve customer tickets, addressing any issues the customer may encounter.\nSearching for a customer or group\nYou can search for a customer or a group by searching from\nSearch\non the Member Care home page or by clicking on the\nSearch\nicon on the details page.\nBy default, if enabled, when you open Member Care, the application opens the new Member Care UI.\nSwitching to the new UI\nTo switch to the new Member Care from the old UI\nCSV\npage, click\nOpen new Member Care\n.\nAlso, from the old UI, if you click\nCustomer Search\nthe customer search opens in the new UI.\nSharing new profile link\nTo share the new Member Care UI, use url\n{host URL}/member-care/ui/\n.\nTo share or view the customer page in the new UI, use url\n{host URL}/member-care/ui/{userId}\n.\nFor example,\nhttps://eucrm.cc.capillarytech.com/member-care/ui/172076358\n.\nSwitching to the old UI\nFrom the\nCustomer Search\npage, click\nOpen old Member Care\nto switch to the old UI.\nIn addition, from the search result page, you can click on the switch icon and switch from the new UI to the old UI.\n📘\nSwitching behavior is applicable only for\nSearch\n>\nCustomer\nand CSV pages. Once you switch to the old UI, everything else will work as is.\nSharing old UI profile link\nYou can share the old UI customer profile link directly. To share, use the url\n{host}/memberCare/search/Customer?oldFlow=true\n.\nFor example,\nhttps://eucrm.cc.capillarytech.com/memberCare/search/Customer?id=172076358&oldFlow=true\n❗️\nYou must use oldFlow=true parameter to directly navigate to the old UI search page. If you use the same URL without the oldFlow parameter, you will be redirected to the new Customer Search page.\nUpdated\n4 months ago\nFAQs\nRegister customers\nAsk AI\nTable of Contents\nIntroduction\nSearching for a customer or group\nSwitching to the new UI\nSharing new profile link\nSwitching to the old UI\nSharing old UI profile link"}
{"url": "https://docs.capillarytech.com/docs/register-customers", "title": "Register customers", "text": "Register customers\nOrgs usually build microsites using Sharingan app and allows registering customers directly through microsites. In cases where a customer cannot access the microsite, the org staff or Capillary admins can register or update the profile information on a specific microsite through Member Care.\nThe following are the steps to register or update a customer.\nChoose the microsite on which you want to register/update a customer through Member Care.\nNavigate to the respective page and register or update a customer.\nPrerequisites\nYou need to have permission to register or update a customer on Member Care.\nThe microsite on which you want to register or update your profile should have the respective event configured.\nSet the microsite on which you want to register/update customer\nBefore proceeding, you need to set the microsite on which you want to register/update a customer through Member Care. You will see form fields configured for the microsite that you set on the Action Settings page.\nTo set the microsite on which you want to register/update a customer, follow these steps.\nOn\nMember Care\n, navigate to\nSettings\n>\nAction Settings\n.\nIn\nNew Customer\n, select the microsite that you want to use to register a customer. For example, membercareReg.\nIn\nEdit Customer\n, select the microsite that you want to use to update customer information. For example, membercareEdit.\nClick\nSave\n.\n📘\nNote:\nIn the preceding screenshot, the membercareReg and membercareEdit are the pages created using Sharingan App. Hence, the page design and form fields can differ for each microsite.\nRegister customer\nBefore registering, ensure that you have set the microsite on which you want to register.\nTo register a customer on a microsite through Member Care, follow these steps.\nNavigate to the\nNew Customer Registration\npage using any of the following processes.\nCustomer Registration page\n(directly)\n: On\nMember Care\n, click\nSearch\n>\nCustomer Registration\n.\nFrom Customer Search page\n: If you are already on the\nCustomer Search\npage, click the ⋮ icon and\nNew Customer\n.\nFrom Customer Profile page\n: If you are already on a customer's profile page, click the\nSelect Actions\ndrop-down and select\nNew Customer\n.\nIn\nNew Customer Registration\n, enter the customer details.\nThe following image shows a sample registration page of a microsite. The page design and form fields might differ for each microsite.\nIn\nName\n, enter the name of the customer.\nIn the\nEmail Address\n, enter the email ID of the customer. For example,\n[email protected]\n, where username123 is the username, capillarytech is the domain and com is the Top Level Domain (TLD).\nUsername:\nThe username portion of the email address can consist of alphanumeric characters (letters and numbers) along with hyphens, underscores, plus signs, and dots.\nDomain:\nThe domain portion of the email address can consist of alphanumeric characters (letters and numbers) along with hyphens, underscores, and dots.\nTLD:\nThe TLD must consist only of alphabetic characters (letters).\nWhen you enter an email id, the system changes the entered email id into the format\n<alphanumeric along with hypen, underscore, plus, dot>@<alphanumeric along with hypen, underscore, dot>.<alphabetic>\nand performs the email validation.\nIn\nExternal ID\n, enter the supported external ID of the customer (if applicable for the org).\nIn\nMobile Number\n, enter the mobile number of the customer.\nIn\nCountry\n, select the country where the customer resides using drop-down options.\nClick\nSave\n. You will see the message -\nCustomer registered successfully\n. Then, It redirects to the customer profile page.\nUpdate customer profile\nYou can modify existing customer details other than the primary identifier. However, secondary identifiers can be modified if the relevant configuration is enabled on the\nRegistration Configuration\npage.\nBefore updating a customer, set the relevant microsite page on which you want to update profile details.\nTo modify customer details on a microsite through Member Care, follow these steps.\nOn\nMember Care\n, navigate to\nSearch\n>\nCustomer\n>\nCustomer Search\n.\nSearch and open a customer profile using customer details such as\nname\n,\nmobile number\n,\nemail ID\n, and\nexternal ID\n.\nIn Select Actions, select\nEdit Customer\nusing the drop-down option\nIn\nUpdate Profile\n, modify the customer profile details.\nClick\nSave\n. You will see the message -\nProfile updated successfully\n. Then, It redirects to the customer profile page.\n📘\nNote:\nThe customer profile update will fail if the customer identifier’s value is the same as an existing customer identifier value.\nUpdated\n4 months ago\nMember Care\nSearch customer/coupon\nAsk AI\nTable of Contents\nPrerequisites\nSet the microsite on which you want to register/update customer\nRegister customer\nUpdate customer profile"}
{"url": "https://docs.capillarytech.com/docs/search-customercoupon", "title": "Search customer/coupon", "text": "Search customer/coupon\nThis page will guide you to search for various customers and coupons using different parameters.\nSearch customers\nThe following are steps to fetch customer details.\nLog on to InTouch and click Member Care tab.\nOn the left navigation bar, click Search > Customer\nIn the Customer Search box, type either the mobile number, email id, or external id of the customer to fetch details. You will see the auto-suggestion list as you type (after the 4th character).\n📘\nNote:\nYou cannot fetch customer details by user id.\nClick the desired customer from the list.\nYou will see the customer information available in each source as shown below. The identifiers and communication channels might differ for each source.\n📘\nNote:\nIf the customer account is merged into another, then you see a message (under the search box) \"The customer you are trying to view is a Merge Victim, click here, to navigate to the Survivor Customer.\nClick on each source account tab to see the respective source information of the customer.\nClick\nShow more\nto see registration information on that particular source.\nOther Information\nCard Information\nThis section displays card details issued to the customer. You can use the Select Card Number drop-down box to see the details of other cards available for the customer.\nThe following is the card information.\nIssued on\n: Card issued date and time.\n*Issued by\n: Unique ID of the card issuer.\nCard series name\n: Name of the card series.\nCard series code\n: Unique code of the card series.\nStatus\n: Displays the current status of the card (NOT_ISSUED, ACTIVE, SUSPENDED, DELETED, or EXPIRED).\nExpiry on\n: Expiry date of the card.\nUpdate card status\nTo update card status, follow these steps.\nIn\nSelect Card Number\n, choose the card number that requires update using drop-down options.\nIn\nStatus\n, click the edit icon.\nSelect the card status from drop-down options -\nNOT_ISSUED, ACTIVE, SUSPENDED, DELETED, or EXPIRED\n.\nClick\nProceed\n.\n📘\nNote:\nThe system does not allow updating EXPIRED  and DELETED card status.\nView card status logs\nNavigate to More Information > Audit Trails > Card Status. You can also download the card status log in CSV format.\n📘\nTime zone representation\nThe time zone for interaction events in\nMore Information > Interactions\naligns with the organisation's local time zone. Any interaction sent through the gateway or systems is displayed in this time zone.\nFor example, if an organisation and its customer support team using Member Care is based in Singapore, the timestamps for customer interaction events will be in Singapore time, even if the organisation is part of the India cluster.\nLoyalty Information\nScroll down to Loyalty Information to see Test & Control status of the customer, loyalty type (loyalty or non-loyalty), and preferred store along with other details mentioned below.\nNote\n-\nChange customer group (Test/Control)\nThe Test and Control groups are used to analyze customer behavior for different campaigns. A customer of Test group will receive campaign messages, whereas a customer in Control group will not receive campaign messages even if targeted for a campaign.\nThe following are the steps to update the current customer group.\nIn the\nLoyalty Information\nsection, click the\nEdit\nicon of the\nTest and Control Status field\n> In\nTo be changed\nselect the new group > Click\nProceed\n.\nUpdate preferred store\nIn the\nLoyalty Information\nsection, click the\nEdit\nicon of\nPreferred Store\n> In\nTo be changed\nselect the store > Click\nProceed\n.\nTo see the customer's loyalty information from a different loyalty program, click the Select Loyalty Program drop-down and select the program that you want to see. This is applicable only for MLP enabled orgs.\nLifetime purchases\n: Total purchases made to date (from the loyalty registration date). This also includes Retro transactions (transactions that are tagged to the customer after registering).\nCurrent points\n: Active points of the customer that are not redeemed or expired.\nLifetime points\n: Total points earned to date (from the loyalty registration date). This also includes points earned through Retro transactions.\nRedeemed points\n: Points that are redeemed by the customer.\nPromised points\n: In case of delayed accrual, points that will be initially issued to the customer are then converted as loyalty points. That is, points for a transaction are initially issued as promised points. If the customer does not return the transaction within the delayed accrual period, these will be converted as loyalty points.\nExpired points\n: Points that are not redeemed and got expired as per the points expiry strategy.\nReturned points\n: Points that are reverted due to transaction returns.\nTier expiry date\n: Date on which a particular expires.\nAdjusted points\n: Points that are added to the customer account or removed from the backend. The value will be positive for added points and negative for deducted points. For example, if 50 extra points are issued for a transaction for some issue, and then removed those 50 from the back-end, you will see Adjusted points as -50.\nOrg Level Subscription Details\nTo see subscription details and NDNC status of the customer, scroll down to the\nOrg Level Subscription\nfield.\nYou can also update SMS and email subscription statuses using the respective\nEdit\nicon.\n📘\nNote:\nUpdate subscription status\nTo update the mobile or email subscription status of the customer, click the respective EDIT icon > Enable TRANS to subscribe to transactional or personalized messages; enable BULK to subscribe to campaign/promotion messages. >\nClick PROCEED.\nFraud Information\nTo see the fraud status of the customer, scroll down to the\nFraud Information\nfield. You can also update the current fraud status - Click the respective\nEdit\nicon > Choose the fraud status > Click\nProceed\n.\nThe following are the different fraud statuses available.\nMarked\n: A customer who has shown fraudulent behavior, but yet to confirm by our team.\nConfirmed\n:  A customer who has been confirmed as a fraud (from the status \"marked\") by our team.\nReconfirmed\n: A confirmed fraud customer who has shown fraudulent behavior again.\nNot_Fraud\n: A customer who has shown fraudulent behavior, but later our team has confirmed as not fraud.\nInternal\n: Internal Capillary users that make transactions and other activities for testing purposes.\n📘\nNote:\nUpdate fraud status\nTo update the Fraud status of the customer, click the EDIT icon next to Fraud Status. > In TO BE CHANGED TO, choose the desired status and click PROCEED.\nSearch coupons\nCoupon details consist of the following information:\nBasic details such as coupon code, series code, series id, created date, expiry date, and the status of the coupon.\nThe customer who received the coupon.\nThe campaign for which the coupon was created.\nThe store that issued the coupon.\nIf the coupon had been redeemed, then the information such as the redemption date, the store where the redemption was done, the discount issued for the coupon, and the customer who redeemed it.\nTo fetch details of a specific coupon, follow these steps.\nLog on to\nInTouch\nand click\nMember Care\n.\nNavigate to\nSearch\n>\nCoupon\n.\nIn\nCoupon Search\n, enter the coupon code that you want to search and press\nEnter\n.\n📘\nNote:\nAutosuggestion does not work for coupon search. You need to type the complete coupon code.\nUpdated\n4 months ago\nRegister customers\nIssue & update cards\nAsk AI\nTable of Contents\nSearch customers\nOther Information\nSearch coupons"}
{"url": "https://docs.capillarytech.com/docs/issue-update-cards", "title": "Issue & update cards", "text": "Issue & update cards\nMember Care lets you issue cards from an active card series to a customer. You need to assign a source for issuing cards. To ensure security, we have also enabled OTP authentication for card issual.\nCard Issual Settings\nAssign source for card issual\nTo set a source for issuing cards:\nOn\nMember Care\n, navigate to\nSettings\n>\nCard Issual Settings\n.\nIn\nSelect source & account for card issual\n, choose the source account that you want to tag for issuing cards.\nEnable OTP for card issual\nNavigate to the\nCard Issual/Linking OTP settings\noption.\nEnable\nCard Issual/Linking OTP settings\nif you want to validate card issual and linking through OTP and choose the channel to send the OTP.\nSMS\n: OTP is sent to the customer's registered mobile number.\nEmail\n: OTP is sent to the customer's registered email ID.\nBoth\n: OTP is sent via both channels\nClick\nSave\n.\nIssue card to customer\nOn\nMember Care\n, search for the customer to whom you want to issue a card.\nIn\nSelect Actions\n, click\nIssue New Card\n.\nIssue manually generated card number\nSelect\nLink card number to customer\nand enter the card number to issue.\nEnter the card number and click\nCheck availability\n.\nIn\nSelect Card Label\n, choose the desired card status.\nClick\nSend OTP\nto send an OTP to the customer via the configured channel (SMS/ Email ID) and in OTP, enter the OTP received by the customer. This field appears only if Card Issual/Linking OTP settings is enabled.\nClick\nSubmit\n.\nIssue card from an auto-generated card series\nSelect\nGenerate and link card number\n.\nIn\nSelect Card Series\n, choose the series from which you want to issue the card.\nIn\nSelect Card Label\n, choose the status label that you want to associate with the card.\nClick\nSend OTP\nto send an OTP to the customer via the configured channel (SMS/ Email ID) and enter the OTP received by the customer. This field appears only if Card Issual/Linking OTP settings is enabled.\nClick\nSubmit\n. An auto-generated card is issued to the customer displaying the card number.\n📘\nNote:\nYou cannot issue cards from a series beyond the allowed limit - this includes overall cards and active cards per customer.\nUpdated\n4 months ago\nSearch customer/coupon\nManage ID change requests\nAsk AI\nTable of Contents\nCard Issual Settings\nAssign source for card issual\nEnable OTP for card issual\nIssue card to customer\nIssue manually generated card number\nIssue card from an auto-generated card series"}
{"url": "https://docs.capillarytech.com/docs/manage-change-request", "title": "Manage ID change requests", "text": "Manage ID change requests\nThis page provides you with information on how to modify identifiers through the Member Care page.\nYou can submit the following change requests:\nGoodwill requests (coupons and points)\nChange mobile number\nChange Email ID\nChange external ID\nAccount merge\nEdit profile\nDelete member's account\nConfigure notifications, auto-approval, OTP settings , and set escalation flow\nNote:\nThis can be performed only from old Membercare\nTo configure Email, Mobile, External ID, or Account Merge settings, do the following:\nOn Member Care, navigate to the\nSettings\ncategory and click\nID Change Request Settings\n. You will see different change request types - Email, Mobile, External ID, Account, and Retro Transaction.\nClick on the option that you want to configure. You will see the corresponding options as shown below.\nConfigure the following settings and then click Save.\nOption\nDescription\nEmail these on arrival of request\nSelect the employees of your org (org POCs) that you want to notify through emails when identifier change or account merge requests are submitted - it could be through Member Care, InStore, or API. Use the\nFilter\nbox to search users by name.\nIn\nAllow Request\n, select any of the following options.\n- Never: Select this if you do not want to send any alerts to org POCs.\n- Always: Select this to always send alerts to org POCs whenever a new request is logged.\n- Only when: Select this to alert org POCs based on the transaction value of the customer.\nAuto Approve\nSet\nAuto Approve\nto On if you want to automatically approve Email, Mobile, External ID, or Account Merge requests, without the requests having to be queued for approval.\nCommunicate Change to\nFor Email or Mobile select whether to notify to the old identifier or new identifier and click Configure to set the notification message.\n- Select\nOld ID\nto send a notification to the old email id or mobile number regarding the identifier change.\n- Select\nNew ID\nto send a notification to the new mobile number or email id.\nFor External ID, you can notify through both SMS and email. Click the respective\nCONFIGURE\nbutton to set the message.\nConfigure Email\n(not applicable for Mobile)\nClick the\nConfigure\nbutton to configure the Email message.\n2. In the\nConfigure Email\nwindow, type the subject in the\nSubject\nbox. In the message body, type the content and insert images. Add custom tags in the message body using the predefined tags wherever required.\n3. Click\nSave\nChanges.\nConfigure SMS\n(not applicable for Email)\nClick the\nConfigure\nbutton to configure the SMS message.\n2. In the\nConfigure SMS window\n, type in the message and include predefined tags wherever required.\nOTP settings\n(Applicable to all identifiers)\nSet the to OTP slider to\nOn\nto enable OTP validation for the customer identifier.\nClick\nSave\nto save the changes.\nUpdate Identifiers Directly (One Step Change)\nOrg admins can update identifiers through one-step change without the need of sending for approval.\nOpen the respective identifier change request page that you want to update - mobile, email or external id\nClick\nOne Step Change\n.\nEnter the current identifier (email ID/mobile number/external ID) in the\nExisting\nbox.\nEnter the new identifier (email ID, mobile number, or external ID) in the\nRequested To\nbox.\nClick\nProceed\n.\nDownload Identifier Change Requests\nYou can download ID change requests (Account Merge, Mobile Reallocation, Email, Mobile, or External ID) as a CSV file. To download the list of requests, do the following.\nOn the respective identifier change requests page, click the\nDownload\ndrop-down that appears on the top-right\nSet the duration of the requests that you want to download in\nStart Date\nand\nEnd Date\nIn Download, select the statuses that you want to download - Pending, Approved, and Declined\nClick\nProceed\nThe list gets downloaded as a CSV file.\nDelete member account\nNavigate to the Membercare home page, then click the three-dots menu. From the\nID change request\ndropdown, select\nDelete member's account\nand submit the request.\nAfter a deletion request is raised for a customer, their status changes to\nDeletion Pending\n. The member account is deleted only after the deletion request is approved. For information on approving or rejecting a request, refer to\nManage requests\n.\nMerge Accounts\nWhen duplicate accounts of a customer can exist. you can merge those accounts into one. One account will be survived and another account will be moved\nSurviving Account\n: The customer account that will remain to continue after merging accounts is the Surviving Account.\nDeactivating Account\n: The customer account that will be removed after merging is a deactivating account. The account once deactivated cannot be activated again and its data cannot be retrieved. However, the entire data will be validated and moved to the surviving account.\n📘\nNote\nIn connected organizations, if a user registers in a different child org using the same primary or secondary identifier, the system merges their profiles in the parent org and then synchronizes those merged changes back to each child org.\nSettings for Account Merge Requests\nYou can configure to notify org POCs on merge requests, automatically approve merge requests without the need of the back-end team to approve it, and notify customers through SMS and email when their accounts are merged.\nOn the Member Care navigation pane, click\nSettings > ID Change Request Settings > Account\n.\nIn\nEmail these on arrival of request\n, select the org POCs that you want to notify on new merge requests.\nSet\nAuto approve\nto On to automatically approve merge requests directly.\nIn\nCommunicate change to\n, select whom to notify in case of account merge.\nCheck\nRequestor\nto notify the customer that requested for account merge.\nCheck\nSurvivor\nto notify the customer whose remains after merging.\nCheck both\nRequestor\nand\nSurvivor\nto notify both.\nTo configure SMS notification, click the\nConfigure\nbutton next to Configure SMS and create the message. Use predefined tags wherever required.\nTo configure email, click the\nConfigure\nbutton next to Configure Email.\nIn\nSubject\n, enter the subject of the email.\nIn the message body, set up the message body with content and insert images. You can add predefined tags in the message wherever required. To add tags, just click the tag from the list on the left.\nClick\nSave Changes\n.\nClick\nSave\n.\nMerge Accounts Directly (One Step Change)\nTo merge duplicate accounts directly, you can use the One Step Change option. Only admin users of an org have access to this feature.\nIn the\nAccount Merge Change Request\npage, click\nOne Step Change\n.\nIn the\nExisting\nBox, type the email ID, mobile number, or external ID of the existing account that you want to merge.\nIn the\nRequested To\nbox, type the email ID, mobile number, or external ID of the account into which you want to merge - survivor account.\nClick\nProceed\n.\nDownload Account Merge History\nTo download accounts merge history as a CSV file, do the following:\nOn the Account Merge page, click the\nDownload\ndrop-down that appears on the top-right\nSet the duration of the requests that you want to download in\nStart Date\nand\nEnd Date\nIn\nDownload\n, select the statuses that you want to download - Pending, Approved, and Declined.\nClick\nProceed\nThe list gets downloaded to your computer as a CSV file.\nEffect of account merging on the customer data\nAfter merging, the account that continues to remain is a survivor account and the account that is merged into the survivor account is a victim account.\nRegistration date\n: The registration date will be the earlier date between the two accounts\nTransactions\n: All transactions of the victim will be merged into the survivor's account\nPoints & Coupons\n: All points and coupons of the victim will be merged into the survivor's account\nRewards\n: All rewards of the victim will be merged into the survivor's account.\nThe following table provides a comprehensive list of changes that will occur when two accounts are merged.\nParameter\nVictim\nSurvivor\nFinal Values after Merging\nMobile Number/Email ID/External ID\nID1\nID1\nNull\nID2\nNull\nID2\nID2\nID1\nID2\nThe customer identifier will be the unique id of the surviving account if the customer id is available in both accounts.\nIf the customer id is not available in the surviving account, then the values will be picked from the deactivating account (if available in that account).\nRegistered Date\nD1\nD2\nD1 - If D1 < D2, then D1 will be the final registered date.\nIf D2 < D1, then D2 will be the final registered date.\nIf D1=D2, then no change takes place.\nThe new registered date will be the earliest of the two dates.\nTier Movement History\nS1\nS2\nIf S1 > S2, then S1 will be the final tier.\nIf S2 > S1, then S2 will be the final tier.\nIf S1=S2, then no tier upgrade takes place.\nThe new tier will be the highest of the two tiers.\nTier Movement History\nS1\nS2\nIf S1 > S2, then S1 will be the final tier, and a new record for upgrading from S2 to S1 will be created on the retaining account.\nIf S2 > S1, then S2 will be the final tier. As no tier upgrade happens in the continued account, no new record will be created in his/her account.\nIf S1=S2, then no tier upgrade takes place, and hence no additional record will be created.\nIssued Rewards\nIR1\nIR2\nIR1+IR2\nThe issued rewards of the deactivating account will be transferred to the surviving account, enabling the customer to use all the rewards of both accounts.\nFor unique rewards: Each reward will be transferred and tagged as issued.\nFor common rewards: Both rewards will be merged and tagged as issued. The expiry date will be the one that has the later expiration date.\nCluster Information\nC1\nC2\nThe final customer data after merging will be recomputed and the cluster will be categorized as per the new figure.\nFor example, assume that the deactivating account is in cluster C1 and the surviving account is in cluster C2. After merging the accounts, based on the new data available cluster strategy is recalculated.\nNow, if the new result meets the strategy of the cluster C3 then the surviving account after merging will be moved to the C3 cluster.\nHowever, after merging the accounts there are chances for the customer to fall either in C1 or C2 based on the recomputed result.\nNDNC Status\nStatus1\nStatus2\nStatus1 - If the mobile number of the deactivating account retains after merging,\nStatus2 - If the mobile number of the surviving account retains after merging.\nNDNC status is specific to a mobile number. So, the NDNC status of the merged account depends on the mobile number that will continue to remain after merging.\nFor example, if the deactivating account's mobile number is retained after merging, the NDNC status will remain the same in the surviving account.\nNDNC Status (When the mobile number is a secondary identifier)\nRegistered\nNot Registered\nNot Registered\nRegistered\nDepending on the final mobile number considered after merging, NDNC status varies.\nFor example, if the NDNC status of the final mobile number is registered in NDNC then the same status will continue to remain.\nOpt-in Status\nWhatever the communication services the surviving account has opted-in for the same will exist even after merging.\nSubscription Status\nWhatever is the subscription status of the surviving account, same will continue to remain after merging.\nMessages\nSet of\nMessages1\nSet of\nMessages2\nSet of Messages2\nMessages or notifications will not be merged or transferred from the deactivating account to the surviving account. The only messages of the surviving account continue to exist even after merging.\nFraud Status\nReconfirmed\nConfirmed\nMarked as Fraud\nNot Fraud\nReconfirmed\nIf the fraud status of the deactivating account is Reconfirmed then the Fraud Status of the surviving account will change to Reconfirmed.\nFraud Status\nConfirmed\nMarked as Fraud\nNot Fraud\nReconfirmed\nReconfirmed\nEven though the fraud status of the deactivating account is Confirmed/Marked as Fraud/ Not Fraud the surviving account's fraud status will remain Reconfirmed.\nFraud Status\nConfirmed\nMarked as Fraud\nNot Fraud\nConfirmed\nEven though the fraud status of surviving customer is Marked as Fraud/ Not Fraud the final status after merging will be changed Confirmed.\nFraud Status\nMarked as Fraud\nNot Fraud\nConfirmed\nConfirmed\nIf both accounts are in confirmed status the final value after merging also remains Confirmed.\nFraud Status\nMarked as Fraud\nNot Fraud\nMarked as Fraud\nIf in any one account, the customer is marked as fraud, then the final status after merging will also be Marked as Fraud.\nFraud Status\nNot Fraud\nMarked as Fraud\nMarked as Fraud\nIf in any one account, the customer is marked as fraud then the final status after merging will also be Marked as Fraud.\nFraud Status\nReconfirmed\nConfirmed\nMarked as Fraud\nInternal\nInternal\nIf at least one account status is internal then the final account status will be Internal.\nFraud Status\nInternal\nConfirmed\nMarked as Fraud\nInternal\nIf at least fraud status of merging accounts is internal then the final surviving account status will be Internal.\nCard details\nC2\nC2\nC1 & C2. The cards of the victim are transferred to the survivor's account.\nTransaction requests\nTransaction Request 1\nTransaction Request 2\nTransaction request 1 & 2. The pending transaction requests of the victim are transferred to the survivor.\nBehavioural Event (BE)\nBE1\nBE2\nBehavioural Event 1 & 2. BE1 is transferred to survivor account.\n❗️\nWhen merging cards with the survivor, the application may generate warnings in the following scenarios:\nIf the total number of cards under the survivor exceeds the defined maximum number of active cards per customer for individual card types.\nIf the total number of cards under the survivor exceeds the defined maximum number of active cards based on global card settings.\nHowever, you can choose to ignore the warning and proceed with adding the cards to the survivor.\n📘\nNote\nWhen merging accounts ,\nCONF_MERGE_POINTS_LEDGER\ncan be enabled to preserve detailed points history when merging customer details. To enable this, raise a JIRA ticket to product support.\nExcluding card merging during account merge\nBy default, when merging customer accounts, the cards associated with the victim account are transferred to the survivor account automatically. In case the customer exceeds the set threshold for the maximum number of cards they can hold, the transfer of cards from a victim to a survivor account will proceed with a warning.\nHowever, if you want do not want to transfer the cards of the victim account to the survivor account during a customer merge, you can raise a ticket and disable the\nCONF_ALLOW_CARD_TRANSFER_TO_SURVIVOR\nconfiguration. This ensures that the cards are not transferred along with the other existing parameters.\n❗️\nThere is no UI to enable this configuration. You need to raise a JIRA ticket (\nsample ticket\n) to the sustenance team to enable these configurations. Turn around time is five days.\nSkipping secondary identifiers when merging user data\nYou can use the\nCONF_SKIP_SECONDARY\nconfiguration to determine whether to skip using secondary identifiers when merging user data. If enabled, the system will not use secondary identifiers when a matching user is found; instead, it will only consider the primary identifier.\nThe section below explains the scenarios when the configuration is enabled and disabled.\nTerms\nCampaign user -  An individual whose identifiers are present in Capillary's Campaign users' list, used for sending campaign messages.\nLoyalty user: An individual who is already a customer and enrolled into a loyalty program.\nIncoming transaction: An incoming transaction from a new or existing customer.\nCONF_SKIP_SECONDARY is disabled\nWhen CONF_SKIP_SECONDARY is disabled, the campaign user will merge with the loyalty user based on matches with the primary identifier or any other identifier.\nExample 1:\nPrimary Identifier - Mobile\nType of User\nEMAIL\nMOBILE\nCampaign user\nE1\nM1\nIncoming transaction user data\nE1\nM2\nPrimary Identifier (Mobile) Match:\nThe system compares the Mobile identifiers.\nCampaign User has Mobile (M1) and the incoming request has Mobile (M2).\nMerge Decision:\nThe Campaign User's existing details (Email: E1, Mobile: M1) will be updated to Email: E1, Mobile: M2.\nDepending on the payload passed, this updated user will be considered a loyalty or non-loyalty user.\nExample 2:\nPrimary identifier - mobile\nType of User\nEMAIL\nMOBILE\nCampaign User\nE1\nM1\nLoyalty User\nNULL\nM2\nIncoming transaction user data\nE1\nM2\nMatching Process:\nPrimary Identifier (Mobile) Matching:\nThe system compares the primary identifier (Mobile).\nCampaign User has Mobile: M1, but the request has Mobile: M2.\nLoyalty User has Mobile: M2, which matches with the request.\nSecondary Identifier (Email) Matching:\nIncoming user data's Email (E1) matches the Campaign User's Email (E1).\nHowever, the merge is primarily driven by the primary identifier (Mobile).\nMerge Process:\nSince CONF_SKIP_SECONDARY is disabled, the merge considers both primary and secondary identifiers.\nCampaign User (Email: E1, Mobile: M1) and Loyalty User (Email: NULL, Mobile: M2) are merged.\nResult:\nCampaign user's Email remains NULL, and Mobile remains M1: Email(NULL), Mobile(M1).\nLoyalty user's Email is updated to E1, and Mobile remains M2: Email(E1), Mobile(M2).\nAfter Merging\nType of User\nEMAIL\nMOBILE\nCampaign User\nNULL\nM1\nLoyalty User\nE1\nM2\n📘\nNote\nIf the survivor user's email or mobile is Null (Loyalty user), then the victim (Campaign user) user's email or mobile will merge into a survivor.\nExample 3:\nPrimary identifier - mobile\nType of User\nEMAIL\nMOBILE\nCampaign User\nNULL\nM2\nLoyalty User\nE1\nNULL\nIncoming transaction user data\nE1\nM2\nPrimary Identifier (Mobile) Match:\nThe system compares the Mobile identifiers.\nCampaign User has Mobile (M2) and the incoming request has Mobile (M2).\nMerge process\nThe merge occurs because the mobile (M2) of the campaign user matches the corresponding data in the incoming transaction user data(M2), and the email (E1) of the loyalty user matches the corresponding data in the incoming transaction user data(E1).\nAfter Merging\nType of User\nEMAIL\nMOBILE\nCampaign User\nNULL\nNULL\nLoyalty User\nE1\nM2\n📘\nNote\nIf the survivor (Loyalty user) user's email or mobile is null, then the victim (Campaign user) user's email or mobile will merge into the survivor.\nThe loyalty user's email remains the same as E1 and mobile changes to M2 because the victim details will be merged into a survivor.\nCONF_SKIP_SECONDARY is Enabled\nWhen CONF_SKIP_SECONDARY is enabled, the system skips secondary identifiers during the merging process of campaign and loyalty users. In this scenario, merging will not happen based on secondary identifier matches alone. Instead, merging relies on primary identifier matches between campaign and loyalty users.\nExample 1:\nPrimary Identifier - Mobile\nType of User\nEMAIL\nMOBILE\nCampaign User\nE1\nM1\nIncoming transaction user data\nE1\nM2\nMatching Process:\nSince CONF_SKIP_SECONDARY is enabled, the system ignores the secondary identifier (Email) and only considers the primary identifier (Mobile).The Campaign User has Mobile: M1, which does not match the incoming request's Mobile: M2.\nMerge Process:\nNo existing user with Mobile: M2 is found in the database.\nSince the primary identifier (Mobile) does not match any existing user, no merge happens with the Campaign User.\nA new loyalty user is created with the provided primary identifier (Mobile: M2).\nResult:\nCampaign User: Remains unchanged: Email: E1, Mobile: M1.\nNew Loyalty User: Created with: Email: NULL, Mobile: M2 (since the incoming request's primary identifier is M2, and secondary identifiers are ignored).\nAfter Merging\nType of User\nEMAIL\nMOBILE\nCampaign User\nE1\nM1\nNew loyalty user (based on the payload)\nNULL\nM2\nExample 2:\nPrimary Identifier - Mobile\nType of User\nEMAIL\nMOBILE\nCampaign User\nE1\nM1\nLoyalty User\nNULL\nM2\nIncoming transaction user data\nE1\nM2\nMatching Process:\nPrimary Identifier (Mobile) Matching:\nThe system looks at the primary identifier (Mobile).\nCustomer 3 has Mobile: M2, which matches with the Loyalty User's Mobile: M2.\nSecondary Identifier (Email) Matching:\nEven though CONF_SKIP_SECONDARY is enabled, Customer 3's Email: E1 matches the Campaign User's Email: E1.\nHowever, the merge is primarily driven by the primary identifier (Mobile).\nMerge Process:\nSince CONF_SKIP_SECONDARY is enabled, the merge is based on the primary identifier.\nCustomer 3 (Email: E1, Mobile: M2) matches with both the Campaign User (Email: E1, Mobile: M1) and the Loyalty User (Mobile: M2).\nResult:\nThe merge happens because the primary identifier (Mobile) matches. Campaign User (Email: E1, Mobile: M1) and Loyalty User (Mobile: M2) are merged.\nAfter Merging\nType of User\nEMAIL\nMOBILE\nCampaign User\nNULL\nM1\nLoyalty User\nE1\nM2\n📘\nNote\nIf the survivor user (Loyalty User) has NULL in either email or mobile, the corresponding field from the victim user (Campaign User) will be merged into the survivor.\nIn this case, since the Loyalty User's Email was NULL, it is updated to E1 from the Campaign User.\nExample 3:\nPrimary Identifier - Mobile\nType of User\nEMAIL\nMOBILE\nCampaign User (Customer 1)\nNULL\nM2\nLoyalty User (Customer 2)\nE1\nNULL\nIncoming transaction user data (Customer 3)\nE1\nM2\nPrimary Identifier Matching:\nThe primary identifier is Mobile.\nCustomer 3 has Mobile: M2, which matches Customer 1's Mobile: M2.\nSecondary Identifier Matching:\nCustomer 3 has Email: E1, which matches Customer 2's Email: E1.\nSince CONF_SKIP_SECONDARY is enabled, secondary identifiers should generally be ignored. However, in this case, secondary identifiers still cause a conflict due to the match.\nMerging process:\nThe system identifies that Customer 3's Email (E1) matches Customer 2's Email, and Mobile (M2) matches Customer 1's Mobile. The system gives preference to the Loyalty user (Customer 2).\nThe attempt to add Customer 3 fails because there is a conflict with existing users, and preference is given to the Loyalty user where the primary identifiers are not a match.\nResult:\nCustomer Type\nEmail\nMobile\nCampaign User (Customer 1)\nNULL\nM2\nLoyalty User (Customer 2)\nE1\nNULL\nNew request\nNot added due to conflict\nExample 4:\nPrimary Identifier - Mobile\nType of User\nEMAIL\nMOBILE\nCampaign User\nE1\nNULL\nLoyalty User\nNULL\nM2\nIncoming transaction user data\nE1\nM2\nMatching Process:\nPrimary Identifier (Mobile) Matching:\nThe system considers the primary identifier (Mobile).\nCustomer 3 has Mobile: M2, which matches with the Loyalty User's Mobile: M2.\nSecondary Identifier (Email) Matching:\nDespite CONF_SKIP_SECONDARY being enabled, Customer 3's Email: E1 matches the Campaign User's Email: E1.\nHowever, the merge primarily relies on the primary identifier (Mobile).\nMerge Process:\nDue to CONF_SKIP_SECONDARY being enabled, the merge is based on the primary identifier.\nCustomer 3 (Email: E1, Mobile: M2) matches both the Campaign User (Email: E1, Mobile: M1) and the Loyalty User (Mobile: M2).\nResult:\nThe merge occurs because the primary identifier (Mobile) matches. The Campaign User (Email: E1, Mobile: M1) and the Loyalty User (Mobile: M2) are merged.\nAfter Merging\nType of User\nEMAIL\nMOBILE\nCampaign User\nNULL\nNULL\nLoyalty User\nE1\nM2\nSkipping custom and extended fields during customer merge\nYou can control whether custom fields or extended fields are merged from the victim profile into the survivor profile using the CONF_SKIP_MERGE_HANDLER configuration.\nTo skip merging\ncustom fields\n, set the configuration value to\nCUSTOM_FIELDS\n.\nTo skip merging\nextended fields\n, set the configuration value to\nEXTENDED_FIELDS\n. This applies to extended field data for the\nCUSTOMER\nentity type.\nDefault behavior\nIf the configuration is not defined, only custom fields are merged.\nEnabling the configuration\nTo enable this configuration, raise a JIRA ticket with the Capillary Product Support team.\nHandling common extended fields during customer merge\nThe\nCONF_CUSTOMER_MERGE_OVERWRITE_EXTENDED_FIELD_VALUE\nconfiguration controls how conflicting extended fields are handled when both the survivor and victim profiles have the same field extended field names with different values.\nIf set to\nfalse\n(default):\nThe survivor's values for common extended fields are retained.\nOnly non-conflicting extended fields from the victim are added to the survivor profile.\nIf set to\ntrue\n:\nThe victim’s values for common extended fields overwrite the survivor’s values.\nNon-conflicting extended fields from the victim are still added to the survivor profile.\nMerge behavior scenarios\nScenario\nIf\nCONF_CUSTOMER_MERGE_                                                                                                                             OVERWRITE_EXTENDED_FIELD_VALUE = false\nIf\nCONF_CUSTOMER_MERGE_                                                                                                                                   OVERWRITE_EXTENDED_FIELD_VALUE = true\nThe survivor and victim profiles have the same extended field names but different values\nThe survivor’s values are retained for common fields.\nNon-conflicting fields from the victim profile are added to the survivor.\nExample\n:\nSurvivor:\n\"gender\": \"Male\"\nVictim:\n\"gender\": \"Female\"\n→ Result:\n\"gender\": \"Male\"\nThe victim’s values overwrite the survivor’s values for common fields.\nNon-conflicting fields from the victim profile are added to the survivor.\nExample\n:\nSurvivor:\n\"gender\": \"Male\"\nVictim:\n\"gender\": \"Female\"\n→ Result:\n\"gender\": \"Female\"\nOnly the victim profile has certain extended fields\nThe victim’s fields are added to the survivor profile.\nExample\n:\nVictim:\n\"religion\": \"Jain\"\n→ Added to survivor\nThe victim’s fields are added to the survivor profile.\nOnly the survivor profile has extended fields\nThe survivor’s fields remain unchanged.\nThe survivor’s fields remain unchanged.\nThe survivor profile has no extended fields, but the victim profile has extended fields\nThe survivor ~~~~profile is updated with all extended fields from the victim profile.\nThe survivor profile is updated with all extended fields from the victim profile.\nBoth the survivor and victim profiles have extended fields, but no overlapping extended field names\nAll extended fields from the victim profile are added to the survivor profile.\nExample\n:\nSurvivor:\n\"city\": \"Agra\"\nVictim:\n\"wedding_date\": \"2024-09-02\"\n→ Result: Both fields retained\nAll extended fields from the victim profile are added to the survivor profile.\nUpdated\nabout 1 month ago\nIssue & update cards\nIssue goodwill points & coupons\nAsk AI\nTable of Contents\nConfigure notifications, auto-approval, OTP settings , and set escalation flow\nUpdate Identifiers Directly (One Step Change)\nDownload Identifier Change Requests\nDelete member account\nMerge Accounts\nSettings for Account Merge Requests\nMerge Accounts Directly (One Step Change)\nDownload Account Merge History\nEffect of account merging on the customer data\nExcluding card merging during account merge\nSkipping secondary identifiers when merging user data\nTerms\nCONF_SKIP_SECONDARY is disabled\nExample 1:\nExample 2:\nExample 3:\nCONF_SKIP_SECONDARY is Enabled\nExample 1:\nExample 2:\nExample 3:\nExample 4:\nSkipping custom and extended fields during customer merge\nHandling common extended fields during customer merge"}
{"url": "https://docs.capillarytech.com/docs/issue-goodwill-points-coupons", "title": "Issue goodwill points & coupons", "text": "Issue goodwill points & coupons\nAdministrators of an org can manage goodwill requests and also issue points or coupons directly to customers.\n📘\nNote\nOnly goodwill requests can be raised from new Member Care UI. For everything else, use old Member Care UI.\nGoodwill coupons\n📘\nThis is not applicable for groups.\nIssue Goodwill coupon\nTo instantly issue a coupon to a group or a customer, perform the following:\nIn the navigation pane, go to\nGoodwill Adjustments\n> click\nCoupons\n.\nOn the top-right, click\nOne Step Issual\n. The One Step Coupon Issual dialog box appears.\nIn\nCustomer Search\n, search the customer by mobile number/email/name/external ID\nIn\nComments\n, enter a note for issuing the current goodwill points or coupon.\nIn\nReason\n, choose a reason for issuing the coupon.\nClick\nProceed\n.\nApprove Goodwill coupon requests\nTo approve Goodwill coupon requests, do the following.\nOn the left navigation pane, click\nGoodwill Adjustments\n>\nCoupons\nthat you want to approve.\nIn the\nPending\ntab, scroll to the request that you want to approve and click the respective\nApprove\nbutton. You can also search a request by request id using the\nSearch\nbox\n📘\nTo decline a request, click\nDecline\n. In the\nDecline Coupon Request\nbox, provide the reason for declining this request and click\nProceed\n.\nThe approved and declined requests move to the respective tabs - Approved / Declined.\nGoodwill points\nIssue Goodwill points\nYou can issue Goodwill points to a customer, group or card. If\nAuto Approve\nis enabled for the org in Goodwill Adjustment Settings, points will be directly issued. When it is disabled, a request is created on the Goodwill requests page and authorized users can approve it.\n📘\nFor groups, goodwill point requests are autoapproved and no manual approval is not applicable.\nTo issue points to a customer directly, follow these steps\nIn the navigation pane, go to\nGoodwill Adjustments\n>\nPoints\n.\nOn the top-right, click\nNew Request\n. The New Request dialog box appears.\nIn\nCustomer Search\n, search the customer by mobile number, email ID, name, or external ID. To issue points to a card, type the relevant card number or card external ID.\nIn\nPoints to be added\n, enter the number of points that you want to issue.\nIn\nSelect program id\n, select the loyalty program that you want to associate to these points. Leave it to the default program for single-brand orgs or orgs with a single loyalty program.\nWhen you enter card details to search a customer, the loyalty program will be automatically selected which is associated with the card. You can also change this program manually if required.\nIn\nComments\n, enter a note for issuing the current goodwill points.\nIn\nReason\n, Select a valid reason for issuing goodwill points.\nClick\nProceed\nApprove Goodwill points request\n📘\nThis is not applicable for groups.\nTo approve Goodwill point requests, do the following.\nOn the left navigation pane, click\nGoodwill Adjustments\n>\nPoints\nthat you want to approve.\nIn the\nPending\ntab, scroll to the request that you want to approve and click the respective\nApprove\nbutton. You can also search a request by request id using the\nSearch\nbox.\n📘\nTo decline a request, click\nDecline\n. In the\nDecline Coupon Request\nbox, provide the reason for declining this request and click\nProceed\n.\nThe approved and declined requests move to the respective tabs - Approved/ Declined.\nDownload Goodwill points/coupon requests\nTo download the list of goodwill requests in a CSV file, do the following.\nIn\nGoodwill Adjustments\n, click\nCoupons\nor\nPoints download\n.\nClick the\nDownload\nbutton.\nSet the duration for which you want to download in the\nStart Date\nand\nEnd Date\nbox\nIn\nDownload\n, select the statuses that you want to download - Pending, Approved, and Declined\nClick\nProceed\n.\nThe list gets downloaded as a CSV file.\nGoodwill Coupon Adjustment Settings\nYou need to configure Goodwill Coupon Adjustment Settings to do the following.\nEnable or Disable goodwill coupons for the org.\nAdd supervisors (org POCs) to be notified when a new goodwill coupon request is logged.\nAdd standard reason(s) for issuing goodwill coupons. This reason will be shown on InStore and Member Care while requesting goodwill points or coupons for a customer.\nAdd offers (coupons).\nTo configure Goodwill Adjustment Coupons, follow these steps.\nIn\nMember Care\n, click\nSettings\n>\nGoodwill Adjustment Settings\n>\nCoupons\n.\nConfigure each option based on the description provided in the following table and click\nSave\n.\nOPTION\nDESCRIPTION\nEnable goodwill coupons\nSet to ON to enable goodwill coupon rewards for the org.\nAccess only to associate\nSet this to ON to allow only Associate Login users to access this feature (on InStore).\nInStore supports two user roles - Guest Login and Associate Login.\nEmail these on the arrival of a request\nSelect the org users to be notified through email whenever a new goodwill coupon request is created.\nClick\nSelect Options\nnext to the\nEmail these on the arrival of request\nlabel. You will see the list of org users. Select the desired check-boxes that you want to notify. You can search for a specific user using the\nFilter\nbox.\nClick Check All to select all available users\nClick Uncheck All to deselect all selected users\nConfigure reasons for goodwill coupons\nAdd standard reasons that InStore users can choose while issuing Goodwill Coupons.\nYou can add multiple reasons. Use the New box to create a new reason.\nReasons configured here will appear as a drop-down list on InStore while issuing goodwill coupons.\nOffers\nOffers are coupons of the Offer Management System (OMS). You can use offers that are created already using OMS or create a new offer for Goodwill.\nTo claim offers created through OMS, follow these steps.\nClick\nClaim Offer\n.\nYou will see the list of offers that you can claim. Check the required offers that you want to select.\nClick\nClaim\n.\nTo create a new offer, see Create Offer of Offer Management System (OMS).\n*Note**: An offer once claimed can be used within the module and cannot be available for other modules.\nGoodwill Points Adjustment Settings\nGoodwill Points Adjustment Settings let you configure the following.\nEnable or Disable goodwill points for the org.\nAdd supervisors for notifying when goodwill coupons are issued.\nSet the default TILL through which goodwill points are issued.\nSet expiry strategy for the goodwill points issued.\nConfigure SMS/email notification that will be sent to customers when goodwill points are issued.\nTo configure Goodwill Adjustment Points, do the following.\nClick\nSettings\n, expand\nGoodwill Adjustment Settings\n, and click\nCoupons\nor\nPoints\n.\nConfigure the following settings: and click\nSave\n.\nOPTION\nDESCRIPTION\nEnable goodwill points\nSet to ON to enable rewarding goodwill points for the org.\nAuto Approve\nSet to On to auto-approve requests for goodwill points.\nAccess only to associate\nSet this to ON to allow only Associate Login users to access this feature (on InStore).\nInStore has two access roles - Guest Login and Associate Login.\nEmail these on arrival of request\nSelect the org users to be notified through email whenever a new goodwill points request is created.\nClick\nSelect Options\nnext to the\nEmail these on arrival of request\nlabel. You will see the list of org users. Select the desired check-boxes that you want to notify. You can search for a specific user using\nthe Filter\nbox.\nClick Check All to select all available users.\nClick Uncheck All to deselect all selected users.\nConfigure SMS\nConfigure the SMS message that will be sent to customers when goodwill points are issued.\nMake use of the predefined tags wherever necessary and click SAVE to save the message template.\nConfigure Email\nConfigure the email message that will be sent to customers when goodwill points are issued.\nMake use of the predefined tags wherever necessary and click SAVE to save the message template.\nConfigure Default Till\nAll goodwill points of your org will be associated with this TILL. You can change this configuration whenever required. In\nDefault Till\n, select the Till that you want to associate.\nUse default till for goodwill points issued from Member Care\n: Enable this option if you want the default TILL to associate only for goodwill points issued through Member Care. Even if you pass the Till ID (say in API), it will consider only the Till that you set here.\nConfigure reasons for goodwill coupons\nAdd standard reasons that InStore users can choose while issuing goodwill points.\nYou can add multiple reasons. Use the\nNew\nbox to create a new reason.\nReasons configured here will appear as a drop-down list on InStore while issuing goodwill points.\nExpiry Strategies\nIn the drop-down box, select the expiry strategy that you want to assign for the goodwill points.\nIf you want to modify the strategy, open Loyalty Manager, modify that specific strategy in the Points Expiry Strategy tab and reconfigure the loyalty program.\nUpdated\n4 months ago\nManage ID change requests\nRetro transactions\nAsk AI\nTable of Contents\nGoodwill coupons\nIssue Goodwill coupon\nApprove Goodwill coupon requests\nGoodwill points\nIssue Goodwill points\nApprove Goodwill points request\nDownload Goodwill points/coupon requests\nGoodwill Coupon Adjustment Settings\nGoodwill Points Adjustment Settings"}
{"url": "https://docs.capillarytech.com/docs/tag-not-interested-transactions", "title": "Retro transactions", "text": "Retro transactions\nRetro transaction refers to the facility of tagging not-interested transactions to loyalty program customers. That is, a not-interested transaction can be tagged to the respective customer when the customer registers into the loyalty program within the window period (allowed to convert not-interested transactions).\nConfiguring the window period for retro transaction\nYou can customize the retro transaction window period by adjusting the\nCONF_CLIENT_RETRO_MAX_ALLOWED_AGE_DAYS\nsetting in\nOrganisation > Billing\nconfiguration page.\nAdditionally, you have the option to incorporate a buffer time using the\nCONF_CLIENT_RETRO_DELAY_SINCE_REGISTRATION_HOURS\nconfiguration. For instance, if you set this value to 3 hours and a customer registers at 9:00 AM, they will be able to claim loyalty points for non-interested transactions with billing times later than 6:00 AM but not before 5:59 AM.\nOne-Step Tagging of a Not-interested Transaction (Retro Transaction)\nIn Member Care, org admins can create new retro requests and approve requests submitted through InStore or APIs.\nTo tag a not-interested transaction to a registered customer on Member Care, follow these steps.\nOn Member Care, navigate to\nTransaction Requests\n>\nTransaction Link\n.\nClick\nOne Step Change\n.\nIn the Search box, enter the mobile number, email ID, or external ID of the customer to which you want to tag a transaction and select the customer from the auto-suggestions drop-down.\nIn Select Transaction, enter the not-interested\nTransaction Number\n, and\nTransaction Date\n. If you have more than one transaction with the same transaction number, use\nStore\nto get transactions of a specific store.\nClick\nSearch\n.\nSelect the transaction if there is more than one transaction (else it is selected by default) and click Tag.\n📘\nYou can tag a transaction only if it is within the window period allowed. To know or update the window period for a retro transaction, see CONF_CLIENT_RETRO_MAX_ALLOWED_AGE_DAYS on the Billing Configuration page.\nYou will see the error message, Transaction is too old to mark as retro.\nApprove Retro Transaction Requests\nTo approve a retro transaction request submitted through InStore or API, do the following.\n📘\nYou can tag a transaction only if it is within the window period allowed. To know or update the window period for a retro transaction, see CONF_CLIENT_RETRO_MAX_ALLOWED_AGE_DAYS on the Billing Configuration page.\nYou will see the error message,\nTransaction is too old to mark as retro\n.\nOn the left navigation pane, click\nTransaction Requests\n>\nTransaction Link\n. You will see the list of retro transaction requests with details, requested by, account to be merged with, store at which the request is made, and time of the request.\nIn the\nPending\ntab, navigate to the desired request and click the respective\nApprove\nbutton.\n📘\nTo decline a request, click\nDecline\n. In the\nDecline Coupon Request\nbox, provide the reason for declining this request and click Proceed.\nThe approved and declined requests will move to the Approved and Declined tabs respectively.\nDownload Retro Transaction Requests\nTo download retro transaction request history as a CSV file, do the following:\nOn the\nTransaction Link\npage, click the\nDownload\ndrop-down that appears on the top-right\nSet the duration of the requests that you want to download in\nStart Date\nand\nEnd Date\n.\nIn\nDownload\n, select the statuses that you want to download - Pending, Approved, and Declined\nClick\nProceed\n.\nThe list gets downloaded to your computer as a CSV file.\nNotification Settings for Retro Transactions\nThrough this setting, selected org admins can receive notifications whenever a new retro request is created and also configure SMS and email notification template for the customer when a transaction is tagged to him/her.\nClick\nSettings\n, expand\nID Change Request Settings\n, and click\nRetro Transaction\n.\nIn\nAlerting the supervisor\n, configure the following.\ni. In\nEmail these on arrival of request\n, select the org users to be notified through email whenever a new retro request is created and select any of the following.\nNever\n: Select to disable notifications to the org admins.\nAlways\n: Select to always notify the selected recipients on new retro requests.\nOnly when\n: Select to notify the selected recipients only when the transaction amount is less than a specific value and set the value in\nTransaction value\n<.\nii. In Communicating change to a customer, set SMS/email template.\nTo configure SMS notification, click the\nConfigure\nbutton next to Configure SMS and create the message. Use predefined tags wherever required.\nTo configure email, click the\nConfigure button\nnext to Configure Email.\na. In\nSubject\n, enter the subject of the email.\nb. In the message body, set up the message body with content and insert images. You can add predefined tags in the message wherever required. To add tags, just click the tag from the list on the left.\nc. Click\nSave Changes\n.\nClick\nSave\n.\nHandling retro transactions as per original transaction date.\nRetroactive transactions, also known as retro transactions, refer to transactions that are applied to a loyalty program account after the transaction has taken place. This can occur for a variety of reasons, such as an error in the transaction process, a delay in the transaction being recorded, or a promotion being applied retroactively to a past purchase.\nRetro case in airlines\nRetroactive flight rewards refer to the ability to redeem miles or points for flights that you have already taken. Many airline loyalty programs allow you to retroactively claim rewards for flights that you have taken in the past, as long as you were a member of the loyalty program at the time of travel and you have the necessary documentation (e.g., a copy of your boarding pass or ticket receipt).\nTo claim retroactive rewards, you will typically need to contact the airline's customer service department and provide them with your loyalty program account information and the details of your past flights. The process for claiming retroactive rewards can vary by airline.\nIt's worth noting that retroactive flight rewards may not be available for all flights or may be subject to certain restrictions, such as blackout dates or limited availability. It's always a good idea to check with the airline to see what your options are for claiming retroactive rewards.\nLet's understand with one example:\nTake for example, a customer made a flight journey on 20th March but not given loyalty details on that date. Instead, at some point in the future (say 20th april), wishes to avail the benefits of that journey, and so reaches out to customer service for the same. In this case, the processing date (20th April) is more than the transaction date (20th March).\nThis might lead to a problem, because the customer might have upgraded/degraded from a tier in this time period. Say, the customer might be on the silver tier on 20th March and Gold tier on 20th April. If the journey is processed as per 20th April, benefits will be given as per the gold slab even though the customer is on the silver slab on the date of the transaction.\nLet's understand with one more example:\nA brand has the below strategy for tier upgrade. Take 5 international flights in a year and upgrade from silver to gold. Else the customer will be downgraded.\nTier upgrade to silver - Jan 1, 23\nTier downgrade/renewal date - Jan 1, 24\nNow, let's take the above same scenario, however this time the claim happens in next year.\nUpdated\n4 months ago\nIssue goodwill points & coupons\nReallocate mobile numbers\nAsk AI\nTable of Contents\nConfiguring the window period for retro transaction\nOne-Step Tagging of a Not-interested Transaction (Retro Transaction)\nApprove Retro Transaction Requests\nDownload Retro Transaction Requests\nNotification Settings for Retro Transactions\nHandling retro transactions as per original transaction date."}
{"url": "https://docs.capillarytech.com/docs/reallocate-mobile-numbers", "title": "Reallocate mobile numbers", "text": "Reallocate mobile numbers\nReallocate Mobile Number (to a New Customer)\nTelecom companies usually reallocate old disconnected numbers (after it has remained unused for some time) to new customers. In such scenarios where a new customer has a mobile number of the already registered customer (but inactive), you can reallocate the number to the new customer.\nFor example, consider this case where Tom registers in your loyalty program with the mobile number: 123456789 and is not active for a very long time. Hence, the number is deactivated by the telecom company. Suppose the same number is allocated to another person named John who wants to register in the loyalty program. As Tom is no longer active on the registered mobile number, you can reallocate the number to John and register him.\nTo reallocate the mobile number, do the following.\nOn the navigation pane, click ID Change Requests > Mobile Reallocation.\nThe Mobile Number Re-Allocation Requests page displays the requests for reallocating the old mobile numbers to new customers.\nIn the Pending tab, click the Approve button of the desired request.\nTo decline a request, click Decline. In the Decline Coupon Request box, provide the reason for declining the request and click Proceed.\nYou can see approved and declined requests in their respective tabs (Approved, Declined).\nTo download mobile reallocation requests, click the Download drop-down, set the duration of the requests you want to download in Start Date and End Date, and click Proceed.\nSettings to Auto-approve Mobile Reallocation Requests\nYou can configure to automatically approve mobile reallocation requests without back-end team's approval.\nClick Settings, expand ID Change Request Settings, and click Mobile Re-Allocation.\nSet Auto Approve to On.\nClick Save.\nDownload Mobile Reallocation Requests\nTo download the history of mobile reallocation requests, do the following.\nOn the Mobile Reallocation page, click the Download drop-down that appears on the top-right\nSet the duration of the requests that you want to download in Start Date and End Date\nIn Download, select the statuses that you want to download - Pending, Approved and Declined.\nClick Proceed\nThe list gets downloaded to your computer as a CSV file.\nUpdated\n4 months ago\nRetro transactions\nManage customer feedback\nAsk AI\nTable of Contents\nReallocate Mobile Number (to a New Customer)\nSettings to Auto-approve Mobile Reallocation Requests\nDownload Mobile Reallocation Requests"}
{"url": "https://docs.capillarytech.com/docs/manage-customer-feedback-1", "title": "Manage customer feedback", "text": "Manage customer feedback\nIntroduction\nCapillary's Feedback Management(CFM) system helps their clients in managing customer feedback. CFM is a process that is based on the systematic collection of customer feedback data, the analysis of the data, and defined dissemination and follow-up actions. With the CFM in place, it becomes easier for the business owners with insight that further can be used to improve their business, products, and/or overall customer experience.\nTo access Feedback Management System, log in to\nInTouch\nand navigate to the\nWorkbench\npage. Click on\nFeedback Management\nin the left panel. You can see the following options:-\nAdd Ticket\nSearch Ticket\nUpload Ticket\nReports\nCCMS reports\nAdd Ticket\nTo add a ticket, click on\nFeedback Management\n(\nInTouch Workbench\npage). Click the\nAdd Ticket\noption, the following page appears\nClients can add a new ticket for their customer feedback. This ticket can be used for future references and also can be used by customers in checking the status of their raised ticket. Few fields are mandatory that need to be filled and the remaining are custom fields, for example,\nfeedback_anniversary\n,\nthe purpose of visit\n, etc. Once all fields are filled, click on\nSubmit\n.\nFind below the description of the mandatory fields:\nMandatory Field Name\nDescription\nStatus\nSelect from the drop-down the required options (OPEN, PARTIAL, CLOSE)\nDepartment\nSelect from the drop-down the department (APPARELS, BOOKS, HOME-NEEDS)\nPriority\nSelect either low, medium, or high priority from the drop-down.\nSubject\nThe issue of the complaint is the subject for example Wrong Size, Fade Colour, etc.\nDetails\nWrite a description giving specific of the complaint raised.\nMobile Number\nEnter the customer's registered mobile number.\nCustomer Name\nEnter the name of the customer.\nEmail Id\nEnter registered email id.\nAssigned To\nAssign it to respective department heads or person concerned.\nDue Date\nProvide a due date for the complaint to be resolved.\nSearch Ticket\nTo\nSearchTicket\n, click on\nFeedback Management\n(InTouch\nWorkbench\n). Click the\nSearch Ticket\noption, the following page appears:\nThe fields are shown above in the screenshot need to be filled(\nStatus\n,\nPriority\n,\nDepartment\n,\nDue Date till-from\n,\nCreated Date\n, etc.) to search for a particular ticket of a customer. Search can further be done by selecting the custom field option. You can also view and edit the ticket using the\nSearch Issue Download\noption. See the figures below for better clarity.\nThe tickets can further be edited. Click on the ticket and you will be navigated to the following page:\nUpload Ticket\nTickets can be uploaded either using CSV or by adding\ncustomer attributes\n. To Upload a ticket using either of the options, go to\nUpload Ticket\nunder\nFeedback Management\n, the following page appears:\nReports\nTo access\nReports\n, go to InTouch Workbench >\nFeedback Management\n.\nClick the\nReports\noption, the following page appears:\nOn the Reports page, you need to do the following:\nEnter the\nLast Updated Date Between _And\nEnter the\nCreated Date Between_And\nSelect from the drop-down whom to assign under\nAssigned to\nSelect\nYes/No\nunder\nInclude Inactive\nCheck the box either for\nDownload as CSV\nor\nDownload Revision Log as CSV\nSelect\nCustom Fields\nOn the Reports page, you can further see the\nMaster Table\nas well as\nRevision Logs\nfor a complete analysis of the tickets raised. See the following figures for better clarity:\nCCMS Reports\nTo see\nCustomer Complaint Management Reports\n(CCMS), click on\nFeedback Management\nwhich is located on the left panel of the Intouch\nSettings\npage. Click on the\nCCMS\noption, the following page appears:\nIn CCMS reports, you can view the status, department, dates, etc. with regards to the ticket. It will also give an overview of the issue and its related details. Further, you can also get details about the overall escalation in the\nOverview Escalation\n. See the figure below:\nUpdated\n4 months ago\nReallocate mobile numbers\nMember Care New UI\nAsk AI\nTable of Contents\nIntroduction\nAdd Ticket\nSearch Ticket\nUpload Ticket\nReports\nCCMS Reports"}
{"url": "https://docs.capillarytech.com/docs/member-care-new-ui", "title": "Member Care New UI", "text": "Member Care New UI\nThe member care page provides the complete details of a customer.\nIntroduction\nThe new Member Care UI displays the customer details in a better-organised way and provides a better user experience.\nBy default, the new member care is enabled for all the orgs.\nSwitching to the new UI\nTo switch to the new member care from the old UI\nCSV\npage, click\nOpen new Member Care\n.\nAlso, from the old UI, if you click\nCustomer Search\nthe customer search opens in the new UI.\nSharing new profile link\nTo share the new member care UI, use url\n{host URL}/member-care/ui/\n.\nTo share or view the customer page in the new UI, use url\n{host URL}/member-care/ui/{userId}\n.\nFor example,\nhttps://eucrm.cc.capillarytech.com/member-care/ui/172076358\n.\nSwitching to the old UI\nFrom the\nCustomer Search\npage, click\nOpen old Member Care\nto switch to the old UI.\nIn addition, from the search result page, you can click on the switch icon and switch from the new UI to the old UI.\n👍\nNote\nSwitching behavior is applicable only for\nSearch\n>\nCustomer\nand CSV pages. Once you switch to the old UI, everything else will work as it is.\nYou can enable the config\nCONF_MCARE_ENABLE_ORG_TZ_CHANGES\nto ensure the details appear on the New Member Care UI according to the organization's time zone. To enable this config, create a ticket to the Capillary Product Support Team. This configuration is not applicable for the Old Member Care UI.\nSharing old UI profile link\nYou can share the old UI customer profile link directly. To share, use the url\n{host}/memberCare/search/Customer?oldFlow=true\n.\nFor example,\nhttps://eucrm.cc.capillarytech.com/memberCare/search/Customer?id=172076358&oldFlow=true\n❗️\nYou must use oldFlow=true parameter to directly navigate to the old UI search page. If you use the same URL without the oldFlow parameter, you will be redirected to the new Customer Search page.\nUpdated\n4 months ago\nManage customer feedback\nCustomer overview\nAsk AI\nTable of Contents\nIntroduction\nSwitching to the new UI\nSharing new profile link\nSwitching to the old UI\nSharing old UI profile link"}
{"url": "https://docs.capillarytech.com/docs/customer_overview", "title": "Customer overview", "text": "Customer overview\nIn Member Care, you can view profile information, customer status, subscription details, interactions, transactions, and other loyalty details of a customer. This section provides information on how to access customer details and update specific information from Member Care.\nTo view the overview of customer details:\nLog on to InTouch and navigate to\nMember Care\n.\nFrom the drop-down in\nSearch\n, select\nCustomers.\nIn the search box, enter the complete customer identifier such as registered mobile number, email ID, external ID, card number, card external ID, or name, and from the search result list select the customer profile.\nBy default, the application displays the\nOverview\ntab. The\nOverview\ntab displays the basic details of the customer. This page is also called Customer Single View (CSV).\nTo know more details about the customer click the\nLoyalty\n,\nEvents\n,\nIncentives\n, and\nCommunications\ntabs.\nOverview\nThe overview tab contains below details:\nNo.\nTitle\n1\nSource profile\n2\nCustomer status and name\n3\nCustomer identifiers\n4\nCommunication channels\n5\nCustomer attributes\n6\nCustomer stats\n7\nStore details\n8\nActive Coupons\n9\nRecent transactions\n10\nCustomer segments\nSource profiles\nThis page shows the customer registration sources in multiple tabs. Capillary supports different sources such as InStore, Facebook, Webengage, WeChat (China-specific), mobile app websites, Line, TMALL, E-commerce sites, WhatsApp, and more.\nBy default, InStore is set as the default source. There are also sources such as Mobile Push, Facebook, and WeChat that can have multiple accounts within the org. You can see the customer details from each account of the source.\nFor example, in the above image, you can see numbers on top of the profile icons. The number 3 on the Whatsapp icon means that the customer has profiles from three WhatsApp accounts of the org. You can click on the Whatsapp icon and choose between one of the three profiles that you want to see.\nCustomer status and name\nThis section shows the current status (custom status label or fraud status) of the customer, the name, and the date when the customer registered. The customer status setting is not by default enabled for an org, its enabled only on a request from the Success team.\nAll orgs might not have Customer Status enabled. Hence, you would see Fraud Status (default enabled) for orgs that have not enabled Customer Status. The\nFraud Status\nis the legacy version of\nCustomer Status\n.\nFraud status contains predefined values (MARKED, CONFIRMED, NOT_FRAUD, RECONFIRMED, INTERNAL), unlike Customer label which contains user-defined values (called custom labels).\nThis remains blank when Both Customer Status and Fraud Status are not set for the customer.\nYou can also see the Status card available in the overview tab.\nHere you can see the following statuses of the customer:\nLoyalty status\n: Displays the loyalty status. For example, Loyal.\nTest & control status\n: You can also change the current group of customers from test to control or vice versa. Click on the more options icon > Change test and control status > In\nChange to\n, set the new status.\nCustomer status code\n:  Defines the current customer status in the Capillary system.\nCustomer status label\n: Defines the customer status.   To change the customer status label, click on the more options icon >\nChange customer status label\n>\nChange to\n, choose the new status >\nReason\n, type the reason or notes for updating the status label > Click\nSave\n.\n👍\nNote\nFrom June 2024, the customer status feature will be enabled by default for new organizations.\nGroup details\n❗️\nThis is applicable only to customers who are part of a hierarchy. See\nMember hierarchy\nfor more details.\nThe section shows below details:\nThe number of groups the customer belongs to\nCustomer's contribution towards the group\nGroup lifetime spend\nCompany name and role of the member in the group\nYou can click the download icon and download the total list of groups the customer belongs to.\nCompany group\nCustomer identifiers\nThis section shows the registered identifiers of the customer. The first identifier is the primary identifier of the org and the remaining are the supported secondary identifiers. Member Care supports mobile numbers, email ID, external ID, card number, card external ID, WeChat union ID, and more. However, you will see only org-supported identifiers\nBy default, it shows up to three identifiers. To view more identifiers, click\nShow more\n.\nMember hierarchy\n❗️\nThis is applicable only for customers who are part of a company group.\nFor members who are part of a company/non-family & friends group, you can click the hierarchy icon and view the member hierarchy. For more information on hierarchy, see\nMember hierarchy\n.\nThe member hierarchy page displays the member hierarchy with their primary identifier. You can search for a member and also click on the\nDownload\noption to download the member list.\nCommunication channels\nThis shows the communication channels associated with each source profile. Click on the drop-down to expand. Each source can have multiple communication channels. A customer can have different identifiers for a channel across sources.\nThe section\nReachable on\nshows the communication channels that are available for the customer. For example, if a customer has logged in to the org's app, we capture the Android or iOS device ID. A mobile push icon will be shown. Similarly, if a user has shared his/her email address, we will show the e-mail icon.\n📘\nThe Communication channels section shows blank when no information is available. This happens especially when customer has registered using card number or external  ID without providing any communication details.\nActive coupons\nShows the list of active coupons available for the customer. Use the horizontal scroll options to toggle between different coupons available. You will see the code and the applicable discount for each coupon.\nRecent transactions\nThis section shows the recent transactions of the customer. You will see the transaction date, transaction number, points issued, points redeemed, and the type of transaction - Regular, Return, or Mixed. Use the horizontal scroll options to toggle between different transactions available.\nTo view complete details of each transaction or access recent transactions, click\nView all\n.\nCustomer attributes\nThis shows the custom field and extended field details captured for the customer. The names shown in the screenshot may differ for each org depending on what was created or enabled for your org.\nCustom fields are denoted with a blue dot.\nStore details\nThis shows the store-related information of the customer such as registered TILL, recently transacted store, date and time of the recent transaction, and preferred store (store code).\nYou can also change the preferred store of the customer. To change click the more options icon >\nChange preferred store\n. You will see the current store and an option to change the store.\nIn\nChange to\n, choose the new preferred store and click\nSave\n.\nBehavioural stats\nThis shows the key metrics of the customer transactions such as:\nLifetime purchase\nAverage transaction value\nTotal transactions\nAverage basket size\nFrequency of visit\nEarn-burn ratio\nCoupon redemption rate\nReferrals made\nSegments\nCustomer Segmentation is a logical grouping of audiences based on shared characteristics. Segments are used to tailor the marketing efforts of brands effectively. Segmentation is usually done based on demographics or customer behavior. Member Care shows the list of segments that the customer is in. These segments were created on Insights+. You can see the segment value of the customer in each segment.\nTo view segment details, click\nView all\n. You can search for a specific segment using the Search box.\nGroups\n❗️\nThis is only applicable if customer is part of any group.\nDisplays the details of groups the customer belongs to. You can also click the download icon and download the group details.\nSubscription status\nThis section allows you to view and set the subscription status of a customer.\nTo view the subscription status, click on the desired source profile > select the org from the drop-down > select the channel.\nTo set the subscription status,\nSelect the source > org and click on the three dots.\nSelect the channel.\nTo enable or disable the promotional subscription status, click the\nPromotional status\ntoggle switch.\nTo enable or disable the transactional subscription status, click the\nTransactional status\ntoggle switch.\nClick\nSave\n.\nCards\nYou can view the details of each active card of the customer. To toggle between different cards,  either use the horizontal scroll options or the drop-down box.\nTo view the loyalty details of a specific card, click on the card or select the card from the drop-down.\nLink card\nTo link a card,\nOn the\nCards\nsection, click the three dots menu.\nIn the\nCard number\nfield, enter the card number that you want to link.\nClick\nCheck availability\nto check the availability of the card.\nFrom the\nCard label\ndrop-down, select\nACTIVE\n. Only ACTIVE labels can be assigned to the cards issued from here.\nClick\nSave\n.\nTo configure card issual settings and OTP validation, refer\nCard issual settings\n.\nIssue card\nTo issue a card,\nFrom the\nSelect card series\ndrop-down, select the card series.\nFrom the\nCard label\ndrop-down, select\nACTIVE\n. Only ACTIVE labels can be assigned to the cards issued from here.\nIf OTP validation is enabled for the org, enter the OTP received.\nClick\nIssue\n.\nChange card status & label\nTo change the status and label of a card,\nOn the\nCards\nsection, click the three dots menu.\nFrom the\nCard number\ndrop-down, select the card number for which you want to change the status and label.\nFrom the\nNew card status & label\n, select the card status and label.\nClick\nSave\n.\n📘\nNote\nYou cannot configure any restrictions/blocking actions for customers based on the card status.\nUpdated\n2 months ago\nMember Care New UI\nLoyalty details\nAsk AI\nTable of Contents\nOverview\nSource profiles\nCustomer status and name\nGroup details\nCustomer identifiers\nMember hierarchy\nCommunication channels\nActive coupons\nRecent transactions\nCustomer attributes\nStore details\nBehavioural stats\nSegments\nGroups\nSubscription status\nCards\nIssue card\nChange card status & label"}
{"url": "https://docs.capillarytech.com/docs/view-loyalty_details", "title": "Loyalty details", "text": "Loyalty details\nThe\nLoyalty\ntab on the Customer Singe View page shows the complete loyalty summary of the customer.\nOverall points summary\nThe\nOverall points summary\ntab shows current points, lifetime points, redeemed points, and expired points , return points, adjusted points, promised points and lifetime purchases of the customer.\nPrograms (program level details)\nIn the\nPrograms\ntab, you can see the loyalty details of the customer for each program. By default, the selected loyalty program will be the org-level program.\nIf your org is\nMLP\nenabled, you can create individual programs based on zone, concept, or cards. You can toggle between these programs to see more details about each program.\nThe selected program will show the following details:\nTier Details\n: It shows the tier details for the selected program like what steps are needed to upgrade the tier, the current tier, and many more.\nProgram Points Summary\n: It shows a points summary of the selected program. You can see details of all the types of available points like current points, lifetime points, redeemed points, return points, adjusted points, and promised points and lifetime purchases.\nClicking on\nView Details\nwill redirect you to the\nIncentives\ntab where you can see the details like points issued, redeemed time and the event associated with the points.\nTrackers\nClicking the\nTrackers\ndropdown shows the trackers that are currently active for the selected user profile.\nCoalition Loyalty\nThe\nCoalition Loyalty\ndropdown shows all the active coalition programs for the selected user profile. Coalition programs are the programs created outside Capillary based on partnerships with some external brands or partners, who have their own loyalty program.\nSupplementary Membership\nYou can see the details of active supplementary programs the customer is associated with. Supplementary programs are small loyalty programs that run along with loyalty programs but for a shorter span.  A customer can enroll in more than one supplementary program at a time.\nTargets\nThe\nTargets\ndropdown shows the target loyalty details set for the customer. You can choose the different target groups of the customer, and the target achievement for different periods.\nUpdated\n4 months ago\nCustomer overview\nEvent details\nAsk AI\nTable of Contents\nOverall points summary\nPrograms (program level details)\nTrackers\nCoalition Loyalty\nSupplementary Membership\nTargets"}
{"url": "https://docs.capillarytech.com/docs/view-event_details", "title": "Event details", "text": "Event details\nThe\nEvents\ntab on the Customer Single View page shows the transactional summary of the customer.\nTransactions\nThe\nTransactions\ntab provides a summary of the transactions made by the selected customer.\nYou can view transaction details such as transaction number, transacted time, transaction ID, loyalty program associated with points/coupons issued, store name, transaction amount, gross amount, applied discount, details of points, line items, payment information, etc.\nNote:\nThe separator used in transaction values is determined by the base currency. For example, if the base currency is set to DE (Germany), the period ('.') will be used as the separator. For example, 80,000 will be displayed as 80.000.\nViewing retro transaction\nTo view the retro transaction,\nVerify if the transaction is processed according to the transaction date.\nConfirm if the transaction is converted into a regular transaction based on retro functionality.\nOn the Member Care customer single view page, Click\nEvents\n.\nClick on the transaction to check if the transaction has been converted from not-interested to regular.\nAdvanced points view\nAdvanced points breakup provides information about:\nLineitem earn breakup\nTransactional level earn breakup\nThis view allows you to understand the points allocation at line-item & bill level.\nTo check how the retro transaction is handled, click on a retro transaction, and click\nAdvanced points view\n.\n📘\nNote\nRaise a ticket to the Capillary's tech team and the UI team, to enable advanced points view.\nFor more information on retro transaction requests, refer to the\nretro transaction requests\ndocumentation.\nBehavioral events\nBehavioral events are non-transactional events that include customers' activities across different channels. You can see the history of Behavioral Events data of the customer.\nClick on the search icon to search for the behavioral event using the account ID, and event name.\nMilestones\nThe\nMilestones\ntab displays all the\ntarget\n-related information about the customer. Milestones is a method that brands can use to monitor the Key Performance Indicators (KPIs) of their customers and acknowledge them for their loyalty. For more information on Milestones, refer\nMilestone loyalty documentation\n.\nThe card displays all the\ntarget group\nthe customer is a part of. A customer can be a part of multiple targets.\nEach card represents a target. You can find the following information on the card:\nName of the target,\nDuration of the target\nThe number of\ncycle\npresent in the target.\nClick on a target group, to view information about the target and the timeline, including the target name, tracker type, evaluation type, and KPI of the target.\nThe timeline depicts the customer's progression within the target, including details such as the milestone start date, cycle duration, target status, and milestone end date.\nSub-milestones are intermediate rewards that are given to customers. A milestone can have\nsub-milestones\ninside each cycle.\nFor example, if the target reward is 10,000 points, the brands can break up the reward into smaller target rewards like 2000 points, 2000 points, 2000 points, and 4000 points.\nYou can click the dropdown and view the access details about the sub-milestones. To determine the completion status, you can check the border of the target icon. When the cycle is completed, the target icon changes from a grey color to green.\nRewards catalog\nA rewards catalog is a curated collection of items or experiences that are available for redemption by members of a loyalty program. The\nRewards catalog\ndisplays the reward programs associated with the organisation. You can click on any reward program to view the details of the rewards such as reward type, reward ID, coupon series etc.\nAudit logs\n🚧\nNote\nBy deafault, audit logging feature is not enabled for all organisations. To enable, create a JIRA ticket with the org ID to the sustenance team.\nThe Audit logs display a detailed trail of records and track activities related to member interactions and system changes.\nBy default, the changes to the following fields are audited:\nStandardField, - first name and last name\nCommunication channels\nMerge events\nSubscription status\nCustomer status\nCustomer merge\nIdentifier change\nYou can also enable\nAudit Trial\nfor the\ncustom field\nand\nextended fields\nin the organisation settings, and can track changes to the below fields:\nCustomer extended and custom fields\nCard extended and custom fields\n📘\nNote\nA maxium of 5 custom field and extended field can be audited.\nTo search for a log, you can click the search icon and search using Log ID.\nYou can filter the audit logs with the type of change.\nUpdated\n4 months ago\nLoyalty details\nIncentive details\nAsk AI\nTable of Contents\nTransactions\nViewing retro transaction\nBehavioral events\nMilestones\nRewards catalog\nAudit logs"}
{"url": "https://docs.capillarytech.com/docs/view-incentive_details", "title": "Incentive details", "text": "Incentive details\nThe\nIncentives\ntab on the Customer Single View page shows the complete summary of\nincentives\nthat a customer received.\nPoints\nPoints\ntab shows details about all the\npoints\nof the selected loyalty program with the time and date of the event. For\nMLP\nenabled orgs, you can use the loyalty program drop-down box to see points details in different programs.\nYou can view information about the points issued or redeemed time and the event associated with the points.\nPoints Schedule\nThe\nPoint Schedule\ntab displays the schedule details for granting loyalty points to the customer.\nYou can click on the program to view information about the points expiry schedule, conversion schedule and trigger-based points.\nExpiry schedule\n- Displays the points expiry schedule.\nConversion schedule\n- Displays promised points conversion schedules of a customer for across all programs of the org.\nTrigger based points\n- Displays the summary of trigger-based points programs.\nCoupons\nThe\nCoupons\ntab shows details about all the\ncoupon\ns of the selected loyalty program with the details of the event. For\nMLP\nenabled orgs, you can use the loyalty program drop-down box to see coupon details in different programs.\nYou can click on a coupon for more details such as coupon ID, store name, expiry date, coupon series, discount value, redeemed number of coupons, coupon status and transaction number associated with the coupon.\nTo search for a coupon, click the search icon and search using coupon series or coupon ID.\nCart promotions\nCart promotions enable brands to run modern-day promotions with a primary focus on items on the cart.\nGift Vouchers\nThe\nGift vouchers\ntab enables brands to distribute or issue payment vouchers to their customers. The vouchers give you information about the gift vouchers issued, such as promotion ID, earned promotion ID, earned source etc.\nBadges\nThe\nBadges\nare a type of visual recognition used in loyalty programs to reward customers for their progress, specific actions or achievements. These serve as a form of gamification and a sense of pride and accomplishment within the user, reinforcing the targeted behaviors and boosting engagement. To know more about Badges, visit\nhere\n.\nUpdated\n4 months ago\nEvent details\nCommunication details\nAsk AI\nTable of Contents\nPoints\nPoints Schedule\nCoupons\nCart promotions\nGift Vouchers\nBadges"}
{"url": "https://docs.capillarytech.com/docs/view-communication_details", "title": "Communication details", "text": "Communication details\nThe\nCommunication\ntab on the Customer Single View page shows the communication summary of every communication channel for your customer.\nYou can view details of the following communication channels:\nSMS\nEmail\nPush notification\nWeChat\nWhatsApp\nZalo\n📘\nNote\nNote: By default, OTPs are not masked on Member Care. You can raise a ticket and enable OTP masking. See the\ndocumentation\nto configure OTP masking.\nTo search for a message, you can click on the search icon and search using the Message ID.\nUpdated\n4 months ago\nIncentive details\nIdentifier change request\nAsk AI"}
{"url": "https://docs.capillarytech.com/docs/manage-id-change_requests", "title": "Identifier change request", "text": "Identifier change request\nThis page provides you with information on how to submit and approve identifier change requests via the Member Care page.\nSubmit change requests\n🚧\nContact the Capillary Access Team if you do not have access to submit or approve requests.\nYou can submit the following change requests:\nChange mobile number\nChange Email ID\nChange external ID\nAccount merge\nEdit profile\nDelete member's account\nTo approve or reject requests, configure notifications, auto-approval, OTP settings, and set escalation flow, refer to\nManage ID change requests (Old Member Care UI)\n.\nUpdate customer identifier\nCustomer identifiers include mobile numbers, email IDs, and external IDs. An organization can have one or more of these identifiers.\nUpdate mobile number\nNavigate to the Membercare home page, then click the three-dots menu.\nFrom the\nID change request\ndropdown, select\nChange mobile number\n.\nEnter the new mobile number.\nClick\nVerify and send request\n.\nChange email ID\nNavigate to the Member Care home page, then click the three-dots menu.\nFrom the\nID change request\ndropdown, select\nChange email id\n.\nEnter the new email ID and click\nVerify and send request\n.\nChange external ID\nNavigate to the Membercare home page, then click the three-dots menu.\nFrom the\nID change request\ndropdown, select\nChange external id\n.\nEnter the new external ID and click\nSend request\n.\nDelete member account\nNavigate to the Membercare home page, then click the three-dots menu. From the\nID change request\ndropdown, select\nDelete member's account\nand submit the request.\nAfter a deletion request is raised for a customer, their status changes to\nDeletion Pending\n. The member account is deleted only after the deletion request is approved.\nFor more information on member account deletion request configuration and request statuses, refer to\nPII deletion configuration\n.\nMerge Accounts\nWhen duplicate accounts of a customer exist, you can merge those accounts into one. One account will be retained, and the other account will be removed.\n*Surviving Account\n: The customer account that will continue to exist after the accounts are merged is referred to as the Surviving Account.\nDeactivating Account / Victim account\n: The customer account that will be removed after merging is referred to as a deactivating account. Once deactivated, this account cannot be reactivated, and its data cannot be retrieved. Except for Behavioural events and requests, all other data is transferred to the survivor account.\nApprove change requests\n👍\nContact the Capillary Access Team if you do not have access to submit or approve requests.\nFor requests other than account deletion, auto-approval days cannot be configured.\nTo approve any change requests, do the following:\nOn the Member Care home page sidebar, navigate to\nMember Care\n>\nRequests\n>\nMember requests\n.\nClick on the identifier you want to view, approve or reject.\nTo approve or reject a request, select the\nPending\ntab. You can click\nAll\ntab to view all requests,\nApproved\ntab to view approved requests and\nRejected\ntab to view requests that were rejected.\nYou can select the desired date range and view the requests that were created within that specific duration.\nClick\nApprove\nor\nReject\nicon to approve or reject an identifier request.\nClick\nYes, approve\nbutton to approve the request.\nClick\nYes, reject\nto reject a request. It is mandatory to enter the reason for rejection.\nUpdated\n4 months ago\nCommunication details\nPoints & coupons request\nAsk AI\nTable of Contents\nSubmit change requests\nUpdate customer identifier\nUpdate mobile number\nChange email ID\nChange external ID\nDelete member account\nMerge Accounts\nApprove change requests"}
{"url": "https://docs.capillarytech.com/docs/issue-goodwill-points_coupons", "title": "Points & coupons request", "text": "Points & coupons request\nAdministrators of an org can manage goodwill requests and also issue points or coupons directly to customers.\nGoodwill coupons\nIssue Goodwill coupon\nTo issue a coupon to a customer, perform the following:\nOn the Member Care homepage, search for the customer you want to issue a coupon.\nClick the ellipsis menu on the Customer Single View (CSV) page.\nClick\nGoodwill request\nClick\nCoupons\nFrom the\nSelect coupon\ndropdown, choose any coupon of your choice.\nFrom the\nReason\ndropdown, choose the appropriate reason for issuing the coupon.\nIn the\nComments\nsection, enter a note for issuing the goodwill coupon.\nClick\nSend request\n.\nA coupon is issued to the customer.\nTo approve goodwill coupon requests, refer to old Member Care documentation\nhere\n.\nIssue Goodwill points\n📘\nNote:\nBy default, auto approve is enabled for points issual.\nTo issue goodwill points to a customer, perform the following:\nOn the Member Care homepage, search for the customer you want to issue points.\nClick the ellipsis menu on the Customer Single View (CSV) page.\nClick\nGoodwill request\nClick\nPoints\nEnter the points you want to add in the\nPoints to be added\nfield.\nFrom the\nProgram\ndropdown, choose the appropriate program.\nIn the\nComments\nsection, enter a note for issuing the goodwill coupon.\nClick\nSave\n.\nPoints have been issued to the customer.\nUpdated\n4 months ago\nIdentifier change request\nRetro transaction request\nAsk AI\nTable of Contents\nGoodwill coupons\nIssue Goodwill coupon\nIssue Goodwill points"}
{"url": "https://docs.capillarytech.com/docs/retro_transaction", "title": "Retro transaction request", "text": "Retro transaction request\nIntroduction\nRetroactive transactions or Retro transactions are those transactions that are applied to a loyalty program account after the transaction has taken place. This can occur due to a number of factors such as an error in the transaction process, a delay in the transaction being recorded, or a promotion being applied retroactively to a past purchase. Retro transaction allows brands to choose the date to be followed for retro transactions as per their policies.\n📘\nTo enable retro transactions for your org, contact the Capillary sustenance team.\nHandling retro transactions\nCapillary handles retro transactions based on the date of the transaction as well as the date of processing. A not-interested transaction can be tagged to the respective customer when the customer registers into the loyalty program within the window period.\nFor instance, if a customer took a flight on March 20th but did not provide loyalty details on that date and later reached out to the airline’s customer care to obtain loyalty points, the transaction date is March 20th, and the date on which the loyalty points are processed becomes the date of processing.\nTo avail of the airline rewards, the customer can provide flight and loyalty program account information to the airline. The airline then tags the transaction and awards the reward to the customer based on the date of transaction or date of processing.\nConfiguring the window period for retro transaction\nTo customize the retro transaction window, perform the following:\nNavigate to\nOrganisation settings\n.\nNavigate to\nSystems & Deployment\n>\nIntouch POS Configuration\n>\nBilling\n.\nOn the\nBilling configuration\npage, enter the  value in the\nCONF_CLIENT_RETRO_MAX_ALLOWED_AGE_DAYS\ntextbox to configure the maximum allowed window for a retro transaction.\nTo configure buffer time, in the\nCONF_CLIENT_RETRO_DELAY_SINCE_REGISTRATION_HOURS\nset the value of your choice.\nFor instance, if the value is set to 3, the customer registering at 9:00 AM will be able to claim loyalty points for a non-interested transaction with billing times later than 6:00 AM but not before 5:59 AM.\nSubmiting transaction tagging request\nTransaction tagging request allows you to tag a not-interested transaction into a regular transaction.\nPerform the steps below to submit a transaction tagging request:\nOn the Member Care homepage, search for the user you want to submit a transaction tagging request.\nClick the three-dot menu.\nExpand the\nMore actions\ndropdown, and click\nTransaction requests\n.\nEnter the non-tagged transaction number and click\nSearch transaction\n.\nYou can filter the transactions based on date and store.\nClick\nSave\n.\nTransaction linking request is raised successfully.\nViewing transaction tagging request\nTo view the transaction tagging request, perform the following steps:\nOn the Member Care home page sidebar, navigate to\nMember Care\n>\nRequests\n>\nMember requests\n.\nClick\nTransaction claims\n.\nClick the\nAll\ntab to view all requests. You can click the\nPending\ntab to review a request, the\nApproved\ntab to view approved requests, and the\nRejected\ntab to view requests that were rejected.\nYou can select the desired date range and view the transaction tag request that was created within that specific duration.\nYou can view retro transaction information within the transaction details on Member Care. For more information, refer to the Event details\ndocumentation\n.\nUpdated\n4 months ago\nPoints & coupons request\nSession Logs\nAsk AI\nTable of Contents\nIntroduction\nHandling retro transactions\nConfiguring the window period for retro transaction\nSubmiting transaction tagging request\nViewing transaction tagging request"}
{"url": "https://docs.capillarytech.com/docs/session_logs", "title": "Session Logs", "text": "Session Logs\nThe session logs feature enables you to track and review changes made for any customer by Intouch admin users. Session history displays the following information:\nHistory of past sessions\nReason for the changes made\nDate and time of each session by any user.\nStarting and ending a session\nSession recording starts and logs the data automatically whenever you log into member care and access a customer profile. To end a session, perform the following:\nClick\nEnd session\n.\nThe\nEnd session\ndialogue box appears. This dialogue box also appears, if you try to navigate to the home page.\nFrom the\nReason\ndrop-down, select the appropriate option. This field becomes optional if no changes are made.\n(Optional) In the\nComments\ntext box, enter additional comments, if any.\nClick\nYes, end session.\nViewing session logs\nFrom the member care home page, click\nSession history\nto view the session logs.\nUpdated\n4 months ago\nRetro transaction request\nGroup view\nAsk AI\nTable of Contents\nStarting and ending a session\nViewing session logs"}
{"url": "https://docs.capillarytech.com/docs/group_view", "title": "Group view", "text": "Group view\nThis section provides you with information on how to view details related to user groups.\n📘\nGroup view is visible only if configuration\nENABLE_USER_GROUP_LOYALTY\nis enabled. You can raise a ticket to sustenance for enabling this config.\nIn Group view, you can view group information, group members, status, interactions and other loyalty details of a group. For information on user groups, see\nUser group\n.\nTo view the overview of customer details:\nLog on to InTouch and navigate to\nMember Care\n.\nIn the\nSearch\n,  from the drop-down, select\nGroups\n.\nIn the search box, you can search using the group external id or any primary member identifier enter the group name from the search result list and select the group.\nThe group view page includes the following information:\nBasic details of the group\nOverview\nLoyalty details\nEvents\nIncentives details\nBy default, the application displays the\nOverview\ntab. The\nOverview\ntab displays the basic details of the group.\nOverview\nThe overview tab includes below details:\nNo.\nTitle\nDescription\n1\nGroup basic info\nDisplays the following:\nPresent status of the group\nGroup name\nGroup registered data\nGroup external id\n2\nGroup primary member detail\nDisplays the name of the group's primary member along with the primary identifier detail.\n3\nGroup member details and lifetime spend\nDisplays the number of members in the group and the total amount spent by the group. You can also click the download icon and download the group member list.\n4\nGroup program detail\nDisplays the program to which the group is assigned. For example, gold, classic etc.\n5\nRecent transactions\nDisplays the most recent transactions performed by any group member.\n6\nGroup status\nDisplays the total number of active members, exited members and total lifetime purchases.\n7\nCustomers\nDisplays the group member list with their role, joined date, points earned by each and permissions set for each member. You can click the download icon and download the group members list.\n8\nGroup points\nEnables you to assign points for a group\nLoyalty details\nTo view the group loyalty details, navigate to the\nLoyalty\ntab.\nTier details\nThis section shows the below details related to tier:\nTier category\nValidity details\nPoints required to upgrade the tier\nTier change log\nProgram Points Summary\nThis section shows a points summary of the selected program. You can view details of all the types of available points such as current points, lifetime points, redeemed points, return points, adjusted points, and promised points.\nTrackers\nThis shows the trackers that are currently active for the selected user profile.\nEvents\nThe events tab displays the complete transaction details of the group such as transaction number, transacted time, transaction ID, group member who performed the transaction, loyalty program associated with points issued, store at which the transaction is made, transaction amount, discount applied, details of points, line items, payment, and more.\n📘\nThe primary difference between the event tab in customer view and group view is that the group view also displays the specific group member's information responsible for the transaction.\nIncentives\nThe incentive tab displays include information about all points-related (earn/burn/expiry/return) and point schedule events related to loyalty. This also displays the detail of the group member who performed the event.  This is similar to the group ledger API.\n📘\nThe primary difference between the Incentives tab in customer view and group view is that the group view also displays the specific group member's information responsible for the event.\nIssue group points\nSee\nIssue group points\n.\nUpdated\n2 months ago\nSession Logs\nAdvanced points breakup view\nAsk AI\nTable of Contents\nOverview\nLoyalty details\nTier details\nProgram Points Summary\nTrackers\nEvents\nIncentives\nIssue group points"}
{"url": "https://docs.capillarytech.com/docs/advanced-points-breakup_view", "title": "Advanced points breakup view", "text": "Advanced points breakup view\nCurrently, our membercare is used by customer support executives or brands’ help level managers, to guide customers with their detailed breakup of the bill. A standard bill/invoice would not contain a detailed breakup of the points issued to the customer on that bill. It would simply display the total points issued on that bill.\nTo know the detailed view, end users tend to call the customer support, and the kind of Advanced view of the points detail we showed on membercare was very confusing, with all the technical jargon used.\nLet's think of this with a simple use case:\nAs a customer support executive or loyalty manager, I would like to have a simple bill-like view of a Transaction on membercare, to better understand the events taking place in a bill and give a clear summary of the bill to my customers.\nNow, with this latest enhancement:\nNOTE\n: To enable the Advanced points breakup view, raise a ticket to the Capillary's tech team and the UI team.\nWith new improvised points break up view you can see and understand the allocation at line-item & bill level.\nNew view focuses on line item level and bill level break up to help users better understand the allocations done.\nUpdated\n4 months ago\nGroup view\nConnect+\nAsk AI"}
{"url": "https://docs.capillarytech.com/docs/connectplus_overview", "title": "Overview", "text": "Overview\nThis page provides you an overview about Connect+.\nConnect+ is Capillary's user-friendly, no-code integration tool. It empowers you to effortlessly bring data into the Capillary platform from an FTP location and export data from Insights to any FTP location. A set of predefined templates for a number of tasks such as customer registration, transaction management, transfer of files etc. are available and enables you to perform the tasks without the need for a development environment.\nBenefits of using Connect+\nCreate integrations without coding/developer support. You can use various functionalities and use them together to perform desired actions.\nAvoids infrastructure management.\nEnables monitoring, viewing reports and troubleshooting.\nDecrypt encrypted ingestion data and encrypt before sharing.\nIngest CSV files without headers.\nWide selection of templates that can help to address a wide range of use cases.\nDataflow limits\nDefault limit: 300 MB or 2 million records in a single file, whichever is lower.\nMaximum tested limit: 650 MB or 5 million records in a single file. The limit can be increased based on approval. For approval, contact the Capilarry support team.\nIf there are multiple files to be merged, the above limit applies to one file and not the total limit on all files to be merged together.\nUsecases\nData ingestion\nYou can use the Connect+ templates and create a dataflow that can:\nread transaction data from the input CSV file which is stored in the FTP server,\ntransform the input file to API JSON format and\nadd or update the data using the defined APIs as per the schedule.\nExample: Customer add template, Transaction add template, Intouch user add template, data reconciliation template, test and control template etc.\nData export or outflow\nYou can use Connect+ to export the data present in the org in the format required.\nFor example, you can use the appropriate templates and  create a dataflow that can:\njoin multiple files and export to a merged file\ntransfer files from one FTP location to another\nConnect+ does not replace Data Export but extends it by addressing the last-mile operations that cannot be achieved through Data Export.\nBulk requests\nConnect+ can be used to raise requests in bulk and update the data further based on the approval flow. For example, it can be used to create PII deletion requests in bulk.\nData merging\nYou can use Connect+  to merge files and add them to the respective organisation. A wide range of Join templates are available to choose from.\nData conversion\nConnect+ supports data conversion from one format to the other. For example, you can use a CSV to XML file conversion template to convert the data in CSV file format to XML.\nConnect+ Data Import versus Data Import feature\nConnect+\nData import\nConnect+ is used for regularly scheduled or interval-based data ingestion.\nData import is used for historical data ingestion and cleanup operations.\nConnect+ uses Capillary v2 APIs to load data into the Capillary database thus triggering loyalty rules and Dynamic Vouchering System (DVS).\nData import does not trigger loyalty programs or the Dynamic Vouchering System (DVS) as CDP database is directly updated.\nConnect+ supports functionalities such as header mapping, reordering, and other data transformation operations.\nData import does not allow for data manipulation or transformation during the transfer process.\nConnect+ supports data reconciliation by comparing the source file with the output file to identify missing events.\nData import feature does not support data reconciliation.\nTerminologies in Connect+ - Understanding key concepts\nWorkspace\nA Workspace is an org-level or multi-org-level environment for managing data and enables mapping of one or more InTouch organizations to it. It helps ingest the data from different sources into the org-level tables in the Capillary database. The Workspace is created by Connect+ administrators.\nTo select your workspace, click the dropdown next to Connect+, and select your org from the list.\nDataflow\nA dataflow in Connect+ is a defined sequence of steps or operations that you set up to collect data from a defined source, transform, or process data and transfer it to a defined location. It's essentially a workflow specifically designed for handling data. Dataflows in Connect+ can be used to automate tasks such as data ingestion, transformation, and integration between various systems and data sources.\n📘\nEach workspace can have one or more Dataflows.\nExample:\nAn\nAdd transaction\ndataflow that can connect to a source, process data and add to the Capillary platform.\nTemplates\nTemplates in Connect+ are pre-defined configurations or patterns that you can use as a starting point for creating dataflows or integration workflows within the Connect+ platform. These templates are designed to simplify the process of setting up common data integration tasks and processes. You can select a template that matches your use case and create a dataflow.\nFor example, if you frequently need to import data from a specific type of source system into your organization's database, Connect+ might offer a template for that type of integration, making it easier for you to configure the dataflow without having to build it entirely from scratch.\nBlocks in Connect+ templates\nThe blocks in Connect+ templates are the building blocks of dataflow, helping connect to a source such as FTP and a destination such as an API, transform or filter data, merge files, and so on.\nThese blocks are predefined steps or operations that are part of the template's workflow. They represent specific tasks or functions that need to be performed as part of the data integration or workflow process. The building blocks make up the template's logic and determine what the template does and how it behaves.\nHere are some common examples of blocks that you might find in Connect+ templates:\nConnect to Source Block:\nUsed to specify the source of the data that needs to be ingested or transferred, such as connecting to a database, an FTP server, or a cloud storage service.\nDecrypt Block:\nUtilized for decrypting source files, particularly if they are encrypted.\nData Transformation Block:\nDefines how the data should be transformed or manipulated before it's moved to the destination. This can include tasks like data mapping or converting data formats.\nData Destination Block:\nSpecifies where the data should be sent or stored, such as a database, a cloud-based data warehouse, or an analytics platform.\nEncrypt Block:\nUsed for encrypting the output files.\nTrigger Frequency Block:\nContains actions that trigger the dataflow at defined intervals.\n📘\nThe availability and specific actions within a Connect+ template depend on the template's purpose and use case.\nExpressions\nExpressions in Connect+ are conditional expressions that can be used to make filter data or take decisions based on conditions or boolean expressions.\nExample:\n${header_value:equals('paid'):or(${header_value:equals('refunded')})}\nwhere,\n${header_value:equals('paid')}\nchecks if the value of a header named header_value is equal to the string 'paid'. If this condition is met, it returns true.\n:or\nis a logical OR operator used to combine conditions. In this case, it checks whether the previous condition is true OR the following condition is true.\n${header_value:equals('refunded')}\nchecks if the value of the header_value header is equal to the string 'refunded'. If this condition is met, it returns true.\nSo, the entire expression checks if the header_value header is equal to either 'paid' OR 'refunded'. You can use this to filter or process data accordingly.\nFor more information on expressions in Connect+, refer to\nKnow about expressions in Connect+\n.\nUpdated\n2 months ago\nAdvanced points breakup view\nGetting started\nAsk AI\nTable of Contents\nBenefits of using Connect+\nDataflow limits\nUsecases\nData ingestion\nData export or outflow\nBulk requests\nData merging\nData conversion\nConnect+ Data Import versus Data Import feature\nTerminologies in Connect+ - Understanding key concepts\nWorkspace\nDataflow\nTemplates\nExpressions"}
{"url": "https://docs.capillarytech.com/docs/connectplus_getting_started", "title": "Getting started", "text": "Getting started\nThis page provides you with information on geting started with Connect+.\nPrerequisites\nKnow about terminologies used in Connect+\n-  Refer to documentation on\nConnect+ terminologies\n.\nOAuth credentials, API client secret and key\n- Connect+ supports only OAuth authentication. For information on how to create a client secret and key, refer to the documentation\nCreating an API client key and secret\n.\nAccess to the relevant access groups\n- If you do not have sufficient access group permission, the API will not run successfully. For more information on setting access group permissions, refer to our documentation on\naccess groups\n.\nIntouch access to organization\n- To access Connect+ for an organization, you must gain Intouch access to that organization. To request Intouch access, submit a Jira ticket with the Access Control Team.\nFTP server for file transfer with appropriate access\n- Move access is required for uninterrupted movement of the files between folders.\nAccessing Connect+\nTo access Connect+ from the Intouch home page,\nSelect the organization to open Connect+.\nClick\nHome\nand select\nConnect+\n.\nThe system redirects you to Connect+ without needing to log in again.\nCreating dataflow\nDataflow is a defined sequence of steps or operations that you set up to collect data from a defined source, transform, or process data, and transfer it to a defined location.\nTo create a dataflow, follow the steps below:\nOn the Connect+ homepage, from the drop-down, select the workspace to add your dataflow.\nClick on\nAdd dataflow\n.\nIn the\nDataflow name\ntext box, enter the name for the dataflow.\nIn the\nTemplate\nsection, click\nSelect template\nand from the\nDataflow templates\nwindow, select your preferred template.\nClick\nDone\n.\nClick\nContinue\n.\nThe blocks to configure the template appear.\n🚧\nNote\nThese are based on the template selected and can differ from template to template.\nRefer to the documentation of the respective block and enter the details:\nConnect to Source\n- Data source information action block\nDecrypt-data\n- Encryption details action block\nTransform-data\n- Mapping header action block.\nConnect to Destination\n- API details action block\nTrigger\n- Schedule trigger action block\nClick\nSave and continue\nIf all the inputs are valid, Connect + will successfully create the data flow. For monitoring the performance of dataflow, navigate to the\nPerformance\npage. For more information, refer to the\ndocumentation\non analysing dataflow.\nViewing dataflow configuration\nTo view the configured dataflow details, perform the following:\nFrom the home page, click on the dataflow you want to view.\nClick the\nConfiguration\ntab.\nThe tab displays the configuration details.\nEditing dataflow\nAt any point in time, you can navigate to the Connect+ home page, search for the dataflow and edit it. You cannot edit a live data flow. To edit a dataflow, follow the steps below:\nNavigate to the home and search for the dataflow. Click on the kebab menu and select\nEdit\n.\nClick on any of the action blocks you wish to edit.\nMake the required changes.\nClick\nSave and continue\n.\nStop and restart dataflow\nStop dataflow\nTo stop a dataflow, perform the following steps:\nOn the Connect+ homepage, click on the kebab menu corresponding to the dataflow you wish to stop.\nClick\nStop\n.\nClick\nYes, stop\nto stop the dataflow.\nFrom the\nStatus\ndropdown, click on\nStopped\nto view the stopped dataflow.\nThe dataflow stops and the status changes to\nStopped.\nRestart dataflow\nTo start a stopped workflow, perform the following steps:\nOn the Connect+ homepage, click on the kebab menu corresponding to the template you wish to start.\nClick\nStart\n.\nThe dataflow starts and the status changes to\nLive\n.\nDeleting dataflow\nTo delete a dataflow, perform the following steps:\nOn the Connect+ homepage, choose the dataflow you wish to delete and click on the corresponding kebab menu.\nClick\nDelete\n.\nClick\nYes, delete\n.\nThe dataflow is deleted and the status is changed to\nDeleted\n.\nAnalyze dataflow performance\nThe Connect+ home page displays the list of dataflows running along with their performance status for the last 24 hours.\nFor a detailed dataflow analysis, click on the respective dataflow to view the detailed performance and error data.  Refer to the\nAnalyse dataflow\nfor documentation and dataflow analysis and refer to\nTroubleshooting guide\nfor troubleshooting steps.\nUpdated\n2 months ago\nOverview\nUsing  expressions for data transformation\nAsk AI\nTable of Contents\nPrerequisites\nAccessing Connect+\nCreating dataflow\nViewing dataflow configuration\nEditing dataflow\nStop and restart dataflow\nStop dataflow\nRestart dataflow\nDeleting dataflow\nAnalyze dataflow performance"}
{"url": "https://docs.capillarytech.com/docs/know-about-expressions-in-connect", "title": "Using  expressions for data transformation", "text": "Using  expressions for data transformation\nThis page provides you with information on expressions that you can use in Connect+ actions.\nConnect+ uses two kinds of expressions:\nspelExpression\nfor the transformation block and\nNiFi expression\nfor other fields.\nCreating expression\nThe table below provides sample expressions along with additional information to assist you in understanding and creating new expressions as needed.\nArithmetic expressions\nSupported Operators\nExpression Format\nExample\n/\nexp{hdr{header 1} [operator] hdr{header 2}}\n*Note:** Ensure that the braces are matched properly (opened and closed).\nExample 1: Calculate net amount\nHeaders: LineItem_Amount, LineItem_Discount\nExpression: exp{hdr{LineItem_Amount} - hdr{LineItem_Discount}}\nExample 2: Calculate net amount based on quantity\nHeaders: LineItem_Amount, Quantity\nExpression: exp{hdr{LineItem_Amount} * hdr{Quantity}}\nExample 3: Currency conversion (INR to USD)\nHeaders: LineItem_Amount\nExpression: exp{hdr{LineItem_Amount} / 74}\nString operations\nSupported Operators\nExpression Format\nExample\nstartsWith\nendsWith\nconcat\nsubstring\nexp{string expression1.concat(string expression2)}\nExample 1: Concatenate headers for description\nHeaders: Item_Name, Item_Purpose\nExpression: exp{hdr{Item_Name}.concat(hdr{Item_Purpose})}\nExample 2: Concatenate headers with fixed info for item\nHeaders: Item_Name, Item_Purpose\nExpression: exp{hdr{Item_Name}.concat(' is used for ').concat(hdr{Item_Purpose})}\nExample 3: Remove '+' prefix from mobile number\nHeaders: Mobile_No\nExpression: exp{('hdr{Mobile_No}'.startsWith('+')) ? 'hdr{Mobile_No}'.substring(1) : 'hdr{Mobile_No}'}\nConditional Operations\nOperator\nExpression Format\nExample\n? :\nexp{(conditional expression) ? expression1 : expression2}\nExample 1: Add country code +91 to the mobile number if the length of the number is 10, otherwise return the existing value.\nHeaders: Mobile_No\nExpression:  exp{('hdr{Mobile_No}'.length() == 10) ? '+91'.concat('hdr{Mobile_No}') : 'hdr{Mobile_No}' }\nExample 2: Check if an item is returned. If yes, set transaction type value as 'RETURN' else  set it to 'REGULAR'.\nHeaders: Is_Returned (Possible values 'true' / 'false')\nExpression: exp{ ('yes'.equalsIgnoreCase('hdr{Is_Returned}')) ? 'RETURN' : 'REGULAR' }\nComplex expressions\nExample\nScenario: Calculating non-fractional qualified quantity based on product category\nDescription: In this scenario, we want to compute the qualified quantity based on the product category. If the product category is one of FUEL, JEWEL, or METAL, then the qualified quantity is determined by taking the difference between LineItem_Amount and LineItem_Discount and dividing it by LineItem_Rate. However, if the product category falls outside of these categories, the qualified quantity defaults to LineItem_Qty.\nHeaders: Product_Category, LineItem_Discount, LineItem_Amount, LineItem_Rate, LineItem_Qty\nExpression:\nexp{ ({'FUEL','JEWEL','METAL'}.contains('hdr{Product_Category}') ) ? T(Math).floor( (hdr{LineItem_Amount} - hdr{LineItem_Discount}) / hdr{LineItem_Rate}) : T(Math).floor(hdr{LineItem_Qty}) }\nThis expression employs conditional logic to ensure accurate calculation of the qualified quantity based on the specified conditions and input data.\nUsing SpEL expressions in data transformation\nIn the data transformation block, you can use expressions for the following:\nFiltering data\nMapping attribution identifier type\nMapping header that has consistent values\nFiltering data\nYou can use filter expression to filter the data that needs to be processed.\nConsider a transaction dataflow that includes a\nFinancial status\nheader with values such as paid, refunded, or not paid.\nTo exclusively process dataflow for transactions that are either paid or not paid, in the Transformation block, you can use the filter expression\n${header_value:equals('paid'):or(${header_value:equals('not paid')})}\n. This expression should be entered in the\nFilter tab\nwithin the\ntransformation\ntext box.\nMapping attribution identifier type\nEvery transaction or customer addition is linked to a specific store or till. The details of these stores or tills are configured in the attribution block. Here, you have the flexibility to use expressions to define constant values for the identifier type.\nFor example, consider the scenario of a customer addition dataflow and the store code information is found under the 'SC_NUMBER' column in the source file. Here, you would set the identifierType as 'STORE_CODE' and map the identifierValue to the 'SC_NUMBER' column.\nIn this case, use the expression const{STORE_CODE} in the identifierType field and specify 'SC_NUMBER' as the identifierValue. This setup ensures that the attribution of 'STORE CODE' is consistently associated with the 'SC_NUMBER' column in your data.\nMapping header that has consistent values\nConsider a scenario where you're adding transaction data using the \"add transaction dataflow,\" and all the transactions share the same currency code, INR. The challenge here is that there's no specific header column in the source file indicating the currency code; instead, this information was conveyed via email.\nIn this situation, you can map the header to the API field by performing the following:\nAdd a new column to your source file with the header \"Currency Code\".\nPopulate this new column with the value \"INR\" for all transactions.\nMap this \"Transaction Type\" header to the API field\ncurrencyCode\n.\nThis way, you explicitly specify that the currency code for all transactions is INR. However, there's a more efficient way to achieve this using an expression.\nSimplify with expressions\nYou can streamline this process by using the expression const{INR} in the API field\ncurrencyCode\n. This expression communicates that the value for the API field\ncurrencyCode\nis consistently \"INR\" for all transaction data. This approach eliminates the need for additional columns and simplifies the mapping process.\nAvoiding common errors in expression\nThe examples below can help you to avoid errors when working with the MVEL expressions.\nChallenge\nIssue\nSolution\nExample\nSyntax errors\nIncorrect syntax can lead to parsing errors.\nEnsure correct syntax with proper placement of brackets, quotes, and operators.\nexp{'hdr{to_change}'.equals('1')}\nVariable scope\nReferencing variables outside their scope can be risky.\nDeclare and access variables within the appropriate scope.\nexp{var1 = 'Hello'}\nfollowed by\nexp{var2 = hdr{to_change}.equals(var1)}\nNull handling\nMishandling null values can lead to errors.\nUse null-safe operators to handle potential null values.\nexp{hdr{to_change} != null && hdr{to_change}.equals('1')}\nProperty access\nIncorrect property access syntax can cause issues.\nAccess properties with the correct syntax, such as\nhdr['to_change']\n.\nN/A\nFunction calls\nImproper usage of function calls can lead to errors.\nFollow the correct function call syntax with parentheses and parameters.\nexp{toUpperCase('hello')}\nString concatenation\nIncorrect string concatenation syntax can be problematic.\nUse the '+' operator for string concatenation.\nexp{'Hello ' + 'world'}\nOperator precedence\nIncorrect operator order can yield unexpected results.\nUse parentheses to control the order of evaluation.\nexp{(1 + 2) * 3}\nType conversion\nMismatched data types can cause issues.\nEnsure data types match or perform conversions when needed.\nexp{Integer.parseInt(hdr{to_change}) == 1}\nCollection handling\nMishandling collections can result in errors.\nUnderstand collection operations, including indexing.\nexp{myList[0]}\nComplex expressions\nOvercomplicated expressions can hinder readability.\nKeep expressions concise and organized.\n`exp{(a && b\nUpdated\n4 months ago\nGetting started\nConfigure blocks\nAsk AI\nTable of Contents\nCreating expression\nArithmetic expressions\nString operations\nConditional Operations\nComplex expressions\nUsing SpEL expressions in data transformation\nFiltering data\nMapping attribution identifier type\nMapping header that has consistent values\nAvoiding common errors in expression"}
{"url": "https://docs.capillarytech.com/docs/configure-blocks-connectplus", "title": "Configure blocks", "text": "Configure blocks\nThis page provides you with information on configuring blocks in Connect+.\nConnect+ has various blocks that are used to create a dataflow. The blocks in a dataflow is based on the selected templates and can differ from template to template.\nUpdated\n4 months ago\nUsing  expressions for data transformation\nConnect to Source\nAsk AI"}
{"url": "https://docs.capillarytech.com/docs/connect-to-source", "title": "Connect to Source", "text": "Connect to Source\nThis block enables you to define the source location of the data that needs to be ingested. The connect to source block has the following fields:\nField name\nDescription\nHostname\nURL (address) of the SFTP/FTP server from where the source file is available. For example,\ndata.capillarydata.com\n.\nUsername and Password\nCredentials to access this SFTP/FTP server. This provides read/write access to the files on the server.\nSource Directory\nThe directory path where the source file is available. For example,\n/APAC2Cluster/A_Connect\nConnect+ usually supports any text-based files with a delimiter, irrespective of extensions such as .txt, .csv, or .dat etc. In addition, _.ok _file format is also supported.\nFilename Pattern\nFile names in the regex pattern. If you give a filename pattern\nfile\n.*.csv _, the application takes any file that starts with the file name\nfile\n.\nProcessed Directory\nThe path to save the file to be processed. The data to process is captured from the processed file. Processing is the operation of formatting and transforming a given set of data to extract the required information in the appropriate format. For example,\n/APAC2Cluster/Process\n.\nUnzip Files\nIf the files are compressed, you can select this option to unzip the file and then select the original file.\nAPI Error Filepath\nThe SFTP/FTP path where you want to save the API error file. This file includes the error details that occurred during the  API calls. This field is applicable only where API endpoints are required (data ingestion).\nSearch Directory Recursively\nSelect the checkbox, if you want to search for the defined file anywhere in the root folder of the server. For example, if there are multiple folders inside\n/APAC2-Cluster/A_Connect\n, it looks for files matching the pattern inside each folder under\n/APAC2-Cluster/A_Connect\n.\nPort\nThe source SFTP/FTP port number. Generally, 22 for SFTP and 21 for FTP.\nPrivate key\nPrivate key used to authenticate an SFTP connection\nusing SSH\n.\nKey passphrase\nAn optional passphrase associated with the SSH key. Provide the passphrase only if the passphrase was set during the key generation. If the private key does not have a passphrase, set the field to\nnull\n.\nCopy the directory file path\nDefining column header for transform block\nAdding the source file header information using a CSV file with the column headers\nYou can upload a CSV file with the column headers of the input source file or define the header data manually. This makes mapping fields in the\ntransformation block\neasier. Once you define the headings, they are automatically retrieved in the transformation blocks and you can map corresponding API fields against them.\nThe maximum supported size of a CSV file is 5 MB. After attaching the file, you can delete it by clicking the delete icon. The system allows you to switch to the manual option after uploading the CSV file. The values should be separated by a comma only. Watch the video below for more information on uploading the CSV file and mapping the API fields.\nAdding the header information manually\nIf you do not have a CSV file for mapping, you can select the\nAdd manually\noption and define the headings manually in the transformation block. Watch the video below for more information.\nIf you do not have a CSV file for mapping and the source file is headerless you can select the\nAdd manually\noption and choose the\nIs file headerless\noption to define the headings separated by a comma. These headings are retrieved in the Transformation block, and you can also add additional headings in the\ntransformation block\nitself. Watch the video below for more information.\nS3 File Service Location as a Source\nField Name\nDescription\nBucket Name\nThe name of your S3 bucket. Provided by the access team.\nRegion\nRegion in which your bucket is located. Provided by the access team.\nAccess Key and Secret\nThese credentials are required to access the S3 bucket. Provided by the access team.\nInput Path\nThe location within the S3 bucket is where the input data resides.\nOutput Path (Processed Path)\nDefines where the processed data will be placed in the S3 bucket. The output path cannot be the same as the input path or a sub-path of the input path (e.g., you cannot have \"input/\" and \"input/processed/\"). Additionally, the output path cannot be the root (\"/\"); a folder must be created within the root for this purpose.\nError Path\nDesignates the location for storing error files.\nSSH Authentication\nSSH (Secure Shell Protocol) is a secure method of connecting to your SFTP (SSH File Transfer Protocol) servers for data transfer. Instead of passwords, SSH authentication relies on a key pair: a public key and a private key.\nPrivate key\n: Stored on your device and used when you connect to the server.\nPublic key\n: Shared with the access team, who link it to your username on the SFTP server to enable SSH-based authentication.\nOptionally, you can add a passphrase when creating your key for additional security.\nSteps to Enable SSH Authentication for SFTP\nTo use SSH for SFTP connections in the\nConnect to Source\nblock, complete the following steps:\nGenerate an SSH key pair\nOpen your terminal (macOS or Windows) and run:\nBash\nssh-keygen -t rsa -b 4096 -C \"\n[email protected]\n\"\n-t\n: Specifies the key algorithm. RSA is recommended.\n-b\n: Specifies the key length in bits. A higher value indicates stronger encryption.\n-C\n: Adds a comment, typically your email address, for identification.\nii. When prompted, choose a location to save the keys.\nmacOS:\n/Users/user_name/.ssh/\nWindows:\nC:\\Users\\user_name\\.ssh\\\nTwo files are generated:\nid_rsa\n→ Private key\nThe private key is in the OpenSSH format, including the header and footer lines (\n-----BEGIN RSA PRIVATE KEY-----\nand\n-----END RSA PRIVATE KEY-----\n).\nid_rsa.pub\n→ Public key\niii.\n(Optional)\nWhen prompted, add a passphrase to secure the key. Press\nEnter\nto skip if you do not want one.\nShare the public key\nLocate the\n.pub\nfile (public key) on your device.\nCreate a Jira ticket for the access team, and include:\nPublic key\nUser email ID\nFolder path for error and processed files\nRequired permissions\nFor details, refer to the\nsample Jira ticket\nfor instructions.\nPrepare your private key for Connect+\nLocate your private key file (e.g.,\nid_rsa\n).\nEncode the private key in Base64 format. You can use a terminal command or an online Base64 encoding tool.\nThe encoded key must include the BEGIN/END tags:\n-----BEGIN OPENSSH PRIVATE KEY-----  \n[Base64 content]  \n-----END OPENSSH PRIVATE KEY-----\nKeys without these tags are invalid.\nAuthentication Rules\nIf a private key is used, set the\nPassword\nfield to\nnull\n.\nYou cannot provide both a password and a private key.\nIf you switch from password-based authentication to key-based, replace the password with\nnull\nand configure the private key.\nUpdated\nabout 1 month ago\nConfigure blocks\nConnect to Source - Kafka\nAsk AI\nTable of Contents\nDefining column header for transform block\nAdding the source file header information using a CSV file with the column headers\nAdding the header information manually\nS3 File Service Location as a Source\nSSH Authentication\nSteps to Enable SSH Authentication for SFTP\nAuthentication Rules"}
{"url": "https://docs.capillarytech.com/docs/configuring-ingest-kafka-stream-in-api", "title": "Connect to Source - Kafka", "text": "Connect to Source - Kafka\nThis block enables you to define the Kafka server details. Below is the screenshot showing the fields in the block.\nThe table below describes the fields in the block:\nField Name\nDescription\nkafka brokers\nKafka server URL. The URL is a combination of the server address and the port number.\n*Example**:\nkafka-connectplus:9092\nkafka topics\nPredefined topic name from which you consume messages. These topics must already exist in your Kafka system. You can list multiple topics separated by commas.\nConsumer Group Id\nSpecifies the predefined consumer group ID used for access control.\nSecurity Protocol\nSpecify the security protocol you want to use to exchange data between the Kafka client and server. The supported protocols are:\nPLAINTEXT\n:  No data encryption or authentication.\nSSL\n: Uses the SSL protocol for data encryption but no SASL authentication.\nSASL_PLAINTEXT\n: Uses SASL protocol for authentication but does not encrypt data.\nSASL_SSL\n: Uses the SASL protocol for authentication and SSL for encryption.\nSASL Mechanism\nSpecify the authentication method used to connect to Kafka. The supported mechanisms are\nGSSAPI\n,\nPLAIN\n,\nSCRAM-SHA-256\nUsername and Password\nUsername and password to access the Kafka server.\nHeaders as Attribute\nChoose the headers to be used as attributes.\nKafka message headers can contain metadata such as\nuser ID\n,\npriority\n, and\nsource system\n. Connect+ extracts these headers as data attributes and makes them available to all steps in the flow. You can use these attributes for:\nRouting\n: Direct messages based on header values\nFiltering\n: Process only relevant messages\nTracking\n: Enable observability and trace message flow\nSimplified Logic\n: Apply business rules without parsing the main message.\nUpdated\n4 months ago\nConnect to Source\nDecrypt Data\nAsk AI"}
{"url": "https://docs.capillarytech.com/docs/decrypt-data", "title": "Decrypt Data", "text": "Decrypt Data\nThis block enables the descryption of an encrypted source file. It is an optional feature that can be enabled if the source file is encrypted. All the fields within this block become mandatory once you enable the Decrypt data action block. You can use the\nIs Enabled\ndrop-down to control the activation of this block.\nField name\nDescription\nEncryption Algorithm\nThe algorithm that was used to encrypt the file. At present, only files encrypted using the PGP algorithm can be decrypted. Hence, by default, PGP encryption is always selected.\nPrivate Key File\nPrivate Key in the base64 encoded format.\nPrivate Passphrase\nThe password that is required to unlock the private key.\nIs Enabled\nEnable or disable the decrypt function.\nUpdated\n4 months ago\nConnect to Source - Kafka\nConnect to Destination\nAsk AI\nTable of Contents"}
{"url": "https://docs.capillarytech.com/docs/connect-to-destination", "title": "Connect to Destination", "text": "Connect to Destination\nThis block enables you to define the details of the v2 API that will be used for running the dataflow.  The API details are auto-filled. You must enter the API client key and secret key to initiate the API.\nThe table contains the fields and their descriptions.\nField name\nDescription\nClient Key\nEnter the API client key. For information on creating an API client key, refer to\nCreating API client key and secret\n.\nClient Secret\nEnter the API client secret. For information on creating an API client key, refer to\nCreating API client key and secret\n.\nAPI EndPoint\nAPI endpoint. For example,\n/v2/customers\n. This field is auto-filled for the available templates.\nAPI Base Url\nAPI cluster URL of the org. For more information on cluster URLs, refer to\ndocumentation on host URLs\n. This field is auto-filled.\nOAuth Base Url\nThis URL is used when an API uses the OAuth for authentication and authorization, serving as the base address for the authorization server. For example: {host}/v3/oauth/token/generate. This field is auto-filled for the pre-defined templates.\nAPI Method\nAPI method. For example, POST. This field is auto-filled for the pre-defined templates.\nBulk Support\nIf set to true, allows for processing multiple records within a single JSON payload. Setting a\ngrouping limit greater than one\nindicates that the system can create bulk payloads for downstream API calls. This field is auto-filled for the pre-defined templates.\nRequest Split Path\nThis is for internal purposes and can be left empty.\nResponse Split Path\nApplicable when Bulk spport is set to true. It is used to divide a single API response containing multiple objects into distinct parts. This is particularly useful for APIs that return a collection of results, such as successes and failures, within a single response. For example, using the expression\n$.result.errors.data._,$.result.success.data._\ngroups the success data under one object and error data under another. Example response below:\n{\n\"result\": {\n\"success\": {\n\"data\": [\n{\n\"id\": \"123\",\n\"status\": true,\n\"message\": \"Customer created successfully\"\n},\n{\n\"id\": \"456\",\n\"status\": true,\n\"message\": \"Order placed successfully\"\n}\n][\n{\n\"id\": \"123\",\n\"status\": true,\n\"message\": \"Customer created successfully\"\n},\n{\n\"id\": \"456\",\n\"status\": true,\n\"message\": \"Order placed successfully\"\n}\n]\n},\n\"errors\": {\n\"data\": [\n{\n\"id\": \"789\",\n\"status\": false,\n\"code\": \"E101\",\n\"message\": \"Invalid address\"\n}\n][\n{\n\"id\": \"789\",\n\"status\": false,\n\"code\": \"E101\",\n\"message\": \"Invalid address\"\n}\n]\n}\n}\n}\nRecoverable Error Codes\nSpecific error codes that indicate situations in which the system should attempt to retry the failed operation. For example, you can error codes such as - 502 Bad Gateway, 504 Gateway Timeout, 520 Unknown Error, 521 Web Server Is Down etc.\nParse Path Map\nLets you define expressions to parse the status message and error code from your API response, and include them in the error file. This is crucial since API responses can have varying structures for error information. This field is auto-filled for the pre-defined templates. Ex:\n{\"status_code\": \"$.error.code\", \"error_message\": \"$.error.message\",\"displayLabel\": \"$.error.displayLabel\"}\nYielding Error Codes\nError codes that will be retried an unlimited number of times. This strategy is usually reserved for specific error types where the expectation is that the issue will eventually resolve without intervention, but it might take an indefinite amount of time.\nExample: When a \"429\" error (indicating that the request rate is too high) is encountered, the system configured with this strategy will retry the request indefinitely until it is successful. This is because the rate limit is expected to eventually lift, allowing the request to proceed.\nMax Retries\nDefines the maximum number of attempts to make an API request in case of failures. This field is auto-filled for the pre-defined templates.\nAdditional headers\nApplicable only for certain templates. This enables the auto-approval for the request. For example, for issuing goodwill points or for tagging customers to an old transaction templates, this enables auto-approval for those requests.\nError Handling\nIn case of any errors connecting to the destination URL, refer\nTroubleshooting guide\n.\nUpdated\n4 months ago\nDecrypt Data\nTransform Data\nAsk AI"}
{"url": "https://docs.capillarytech.com/docs/transform-data", "title": "Transform Data", "text": "Transform Data\nData transformation in Connect+ is the process of converting the ingested data to JSON format. To achieve this,  you need to map the fields in the source files to the appropriate API fields in this block.  This helps connect+ to convert the data to JSON, call the APIs successfully and upload the data. These fields in this Connect+ block are parameters of the JSON payload of the API associated with the template that you have selected for the dataflow.\nPerform the following to map the fields:\nIf the workspace is linked to multiple orgs, select the org ID from the\nIntouch Org\ndrop-down.\nIn the\nFile Delimiter\ntext box, enter the delimiter used to separate the headings in the source file. By default, the delimiter is set as a comma.\nMap the API fields with the appropriate columns in the source file. To map, perform the following:\nIf the column header fields were not uploaded or defined, enter the column header name in the\nFile header\ntext box. This is the name of the column header in the source file that will have information for an API field. For example, a column named source can have values for the API field called source. You can also click on\nAdd more headers\nand can\nadd more headers\nor\nadd headers using expression\n.\nSelect the\nAPI field\nname from the API fields drop-down that corresponds to the column header specified in the File header text box. The number of mandatory fields that need to be mapped is displayed next to the parent API field.\nIf required, in the\nFilter data\ntext box, use\nexpression language\nand add a filter condition to include or exclude data from the source file.\nExample:\nConsider a transaction dataflow that includes a\nFinancial status\nheader with values such as paid, refunded, or not paid. To exclusively process dataflow for transactions that are either paid or not paid, you can use the filter expression\n${header_value:equals('paid'):or(${header_value:equals('not paid')})}\n.\nRefer\nDefining column headers\nfor more information on mapping the API fields.\nAdding a header using the expression\nIf the value of an\nAPI Field\nis the same for all the customers, you can use\nconst{value}\n. For example, to categorize\nloyaltyType\nas\nloyalty\nfor all customers, you can enter\nconst{loyalty}\nagainst the API field\nloyaltyType\n.  For more information, refer to the documentation on\nusing expression\n.\nTo add a header using an expression,\nClick\nAdd header using expression\n.\nEnter the expression in the text box.\nFrom the API field drop-down, select the API field you want to map to the header.\nAdding additional header\nIf you selected\nAdd manually\nas the Column headers input method (with or without header names) for transforming data in the\nConnect to source\nblock, you will have the option to add additional headers. You can add the additional header while mapping the fields or\nediting\n.\n🚧\nNote\nIf you added the header information through the CSV file method, you cannot add additional headers.\nUpdated\n4 months ago\nConnect to Destination\nJoin Data\nAsk AI\nTable of Contents\nAdding a header using the expression\nAdding additional header"}
{"url": "https://docs.capillarytech.com/docs/join-data", "title": "Join Data", "text": "Join Data\nThis block enables the merging of two or more files and adds the merged file to the platform. You need to enter the details of files that need to be identified, compared and merged. Enter the below details:\nField\nDescription\nFiles 1-2 Join Types\nEnables you to select the type of SQL join command.\nInner join\n-  An Inner Join returns only the rows that have matching values in both tables being joined.\nFor example, suppose you have two tables: \"Line item table\" and \"Bill level table,\" and you want to determine which items were purchased in each bill and calculate the total cost of each item in every bill. When you use the Inner Join option, the merged table will include only the records that have matching BillNumbers in both data sources.\nLeft outer join\n- A Left Outer Join returns all the rows from the left table and the matching rows from the right table.\nFor example, consider two tables: \"Customers\" and \"Orders.\" When you use a Left Outer Join, you retrieve all customer records along with any matching order records. If a customer has no orders, the customer record is still included with NULL values in the order-related columns.\nRight outer join\n- A Right Outer Join returns all the rows from the right table and the matching rows from the left table.\nFor example, consider two tables: \"Orders\" and \"Customers.\" When you perform a Right Outer Join, you retrieve all order records along with any matching customer records. If an order has no associated customer, the order record is still included with NULL values in the customer-related columns.\nOuter join\n- An Outer Join, also known as a Full Outer Join, returns all rows from both tables, including matching rows and those with no matches.\nAll Files Delimiter\nEnter the file delimiter (comma or tab) to separate fields in the .csv file. By default, the delimiter is a comma (,).\nFile 1 Regex\nEnter the name of your first file here in the format\nfilename_.*.fileformat\n. The asterisk represents the wildcard.\nFor example, for the system to search for files that begin with the name \"BILL_LEVEL_MERGE\" followed by any sequence of characters you can enter the file name as \"BILL_LEVEL_MERGE.*.csv\". This will enable the system to locate files that match this pattern.\n*NOTE:** The file works in an FCFS manner. The files that are uploaded first and second are merged first.\nFile 2 Regex\nEnter the name of your second file in the format:\nfilename.*.fileformat\n. The asterisk represents the wildcard.\nFor example, for the system to search for files that begin with the name \"BILL_LEVEL_MERGE\" followed by any sequence of characters you can enter the file name as \"BILL_LEVEL_MERGE.*.csv\". This will enable the system to locate files that match this pattern.\n*NOTE **: The file works in an FCFS manner. The files that are uploaded first and second are merged first.\nFile 1 Headers\nEnter the column header name of File 1 that needs to be compared.\nThis is compared with the column headers in the File 2.\nTo match columns based on multiple headers, enter the header names separated by a comma.\nFile 2 Headers\nEnter the column header name of File 2 that needs to be compared.\nThis is compared with the column headers in the File 1.\nTo match columns based on multiple headers, enter the header names separated by a comma.\nFile Join Use Case\nFrom the dropdown, select TRANSACTION_LINE_ITEM.\nThis is an inner join operation where one row in the bill maps to multiple line items.\n*NOTE:**The option None is not applicable.\nOutput Filename\nEnter the output filename.\nBy default, the filename format is merge_yyy-mm-dd, where merge is the file name, yyyy-mm-dd is the year month, and date on which the file is created.\nAlphabetical Sort\nSelect this check box to ensure accurate sorting of the files in alphanumerical order. By default, this is always enabled.\nNOTE: It is recommended to always select the checkbox before proceeding further.\nMerge based on common Name\nMake sure that this check box is always selected.\nThis makes sure that the system identifies the correct files to be merged.\nMerge based on common name Template File One\nEnter the filename using the <common> tag.\nFor example, if there are files with names\nTktABC.dat\n*, and\nTktDocument_ABC.dat\n, and if you enter the value as TktDocument*<common>.dat, the system looks for the file and selects TktDocument_ABC.dat for merging.\nABC is the common tag among the files.\nMerge based on common Name Template File Two\nEnter the filename using the <common> tag.\nFor example, if there are files with names\nTktABC.dat\nand\nTktDocument_ABC.dat\n, and if you enter the value as TktDocument\n<common>.dat, the system looks for the file and selects TktDocument_ABC.dat for merging.\nABC is the common tag among the files.\nFile One is Headerless\nSelect the check box if the columns in file one do not have a header.\nFile Two is Headerless\nSelect the check box if the columns in file two do not have a header.\nFile One Mention Header names\nDefine the heading order of the columns in fIle one separated by commas.\nFile Two Mention Header names\nDefine the heading order of the columns in fIle two separated by commas.\nMatch All Regex\nSelect\nTrue\nfrom the dropdown to keep only the matching files in the server and delete the files that are not matched. By default, the value is set as\nFalse\n.\nAll Unique Match\nSelect\nTrue\nto identify and delete duplicate files.\nFTP file upload instructions\nWhen uploading files to the FTP path:\nEnsure that all files that need to be merged are added simultaneously.\nIf you are adding different sets of files that need to be merged, maintain a minimum gap of at least 10 minutes between each upload. For example, if you want to merge files A and B, and also C and D, do not add files A, B, C, and D together. Add files A and B first, and then add files C and D only after a minimum of 10 minutes.\nIf you need to re-add any files:\nRemove the existing file from the process folder first.\nThen, add the new files to the input folder for proper handling.\nUpdated\n4 months ago\nTransform Data\nCSV-To-XML-Converter\nAsk AI\nTable of Contents\nFTP file upload instructions"}
{"url": "https://docs.capillarytech.com/docs/csv-to-xml-converter", "title": "CSV-To-XML-Converter", "text": "CSV-To-XML-Converter\nEnter the following details.\nField\nDescription\nXML Top\nHeader declaration of the XML file. This includes the XML version, character encoding, and so forth.\nXML file name\nThe name of the XML file.\nXML Repeating Component\nThe repeating elements of the XML file. This is the section of the XML file where the data is present.\nInput File Delimiter\nThe file delimiter. This template supports commas (,) and pipes (%>%)\nXML Bottom\nThe closing tags of the XML file.\nUpdated\n4 months ago\nJoin Data\nPush to S3\nAsk AI"}
{"url": "https://docs.capillarytech.com/docs/push-to-s3", "title": "Push to S3", "text": "Push to S3\nEnter the following details:\nS3 Object name/Filename\n- Defines the name that will be given to the file(s) uploaded to S3. Use the default value. You can also use the\nexpression language\nand define the file name. For the \"Audience reload from FTP template\", enter the object name in the format\n<audience_Group_Name>/${filename}\n, where audience_Group_Name is the audience name used in the Engage+.\nS3 Bucket Name\n- Enter the S3 bucket name.\nContent Type\n- Use the default value\napplication/octet-stream\n. This enables the copying of all file types.\nAccess Key & Secret Key\n- Enter the S3 access key and secret key.\nAWS region\n- Enter the AWS region to which you are transferring the files.\nUS East 1 - For the bucket in the India region\nEU West 1 - For the bucket in the EU region\nAP Southeast 1 - For the bucket in the Singapore region\nUS East 2 - For the bucket in the US regions\nNote:\nIf you do not have information on the Access key, secret and AWS region, create a ticket to the Sustenance team.\nNote:\nIf you do not have information on the Access key, secret and AWS region, create a ticket to the Access team.\nUpdated\n4 months ago\nCSV-To-XML-Converter\nEncrypt Data\nAsk AI"}
{"url": "https://docs.capillarytech.com/docs/encrypt-data", "title": "Encrypt Data", "text": "Encrypt Data\nThis block enables the encryption of an output file generated, using the PGP algorithm. All the fields within this block become mandatory once you enable the Decrypt data action block. You can use the\nIs Enabled\ndrop-down to control the activation of this block.\nField name\nDescription\nEncryption Algorithm\nThe algorithm to encrypt the file. At present, only the PGP algorithm is supported. Hence, by default, PGP encryption is always selected.\nPublic User Id\nPublick user ID.\nPublic Key File\nServer location of the public key file.\nIs Enabled\nEnable or disable the encrypt function.\nUpdated\n4 months ago\nPush to S3\nSchedule Trigger\nAsk AI"}
{"url": "https://docs.capillarytech.com/docs/schedule-trigger", "title": "Schedule Trigger", "text": "Schedule Trigger\nThis block enables you to schedule the time at which the dataflow should be triggered.\nYou can configure the dataflow activity to execute daily, hourly, or on a minute basis.\n🚧\nThe minimum triggering interval for the dataflow is set at 5 minutes, meaning that even if a value less than that, such as 1 minute, is entered, the dataflow will still trigger at 5-minute intervals.\nSchedule trigger at specified minutes\nSelect\nMinutes\nto schedule a trigger at specific minute intervals The minimum duration allowed is 5 minutes.\nSchedule hourly trigger\nSelect\nEvery hour(s)\nto schedule the dataflow trigger at regular intervals, such as every 2 hours. Specify the frequency in the \"Every ___ hour(s)\" field.\nSelect\nAt\nto set a specific time for dataflow execution, such as 13:00. Configure the time using the provided hour and minute drop-down menus.\nSchedule daily trigger\nSelect\nEvery day(s)\nto schedule the dataflow trigger at regular intervals, such as every 2 days. Specify the frequency in the \"Every  ___ day(s)\" field.\nSelect\nEvery week day\nto set a specific time in a week day for dataflow execution, such as 13:00. Configure the time using the provided hour and minute drop-down menus.\nUpdated\n4 months ago\nEncrypt Data\nRebuild Headers / Define Headers and Transform Data\nAsk AI\nTable of Contents\nSchedule trigger at specified minutes\nSchedule hourly trigger\nSchedule daily trigger"}
{"url": "https://docs.capillarytech.com/docs/rebuild-headers-define-headers-and-transform-data", "title": "Rebuild Headers / Define Headers and Transform Data", "text": "Rebuild Headers / Define Headers and Transform Data\nThis block enables you to map and manipulate the data in the input file during file transfer. Below is the screenshot of the block.\nThe table contains the fields and their descriptions.\nField\nDescription\nHeaders Mapping\nMap the column headers or headings according to the input file.\n*Syntax:**\n{\"heading1 of output file\":\"heading1 of input file\", \"heading2 of output file\":\"heading2 of input file\"}\n*Example:**\n{\"TAmount\":\"t_amount\", \"BillID\":\"Bill_Number\"}\nHere,\nt_amount\nand\nBill_Number\nin the input file are stored as\nTAmount\nand\nBillID\nrespectively in the output file. The information in the input and output files is identical.\\\nYou can manipulate or change the information in the output during file transfer. This is done by using expressions.\n*Example:**\n{\"TAmount\":exp{hdr\"t_amount\"+1}}\nHere,\nt_amount\nin the input file is stored as\nTAmount\nin the output file. Each value under\nTAmount\nin the output file is the value from\nt_amount\nin the input file increased by 1.\\\nSee\nExample use case\nfor details.\nOutput Headers Order\nSpecify the order of column headers in the output file or skip columns during the transfer. The headings should be comma-separated without spaces between them.\n*Syntax:**\nheading1,heading2\n*Example:**\nTAmount,bill_name,BillID\nSee\nExample use case\nfor details.\nInput File Delimiter\nFile delimiter separates fields in the input file.\nOutput File Delimiter\nFile delimiter separates fields in the output file. Delimiter allowed: pipe (|), comma (,) ampersand (&), per cent (%). Alphabets and numbers cannot be delimiters.\nOutput Filename\nName of the output filename with extension. Extensions allowed: .txt or .csv.\nThe output filename cannot be null. Ensure that the output filename matches the one specified in the Connect to destination block.\nIs the file headerless?\nSelect the check box if the columns in the input file do not have a header.\nMention header names (for use in mapping and expressions)\nDefine the column header or heading in the output file if the input file does not have a heading or column header. There cannot be spaces between two heading names and do not use double quotes.\n*Syntax:**\nheading1,heading2\n*Example:**\nTAmount,BillID\nSee\nExample use case\nfor details.\nUpdated\n4 months ago\nSchedule Trigger\nMask Contents in a CSV\nAsk AI"}
{"url": "https://docs.capillarytech.com/docs/mask-contents-in-a-csv", "title": "Mask Contents in a CSV", "text": "Mask Contents in a CSV\nThe\nhash-csv-fields\nblock enables you to hash/mask the contents in a CSV file. This can be used when the CSV file contains PII data or any sensitive data. The hashing algorithm supported are:\nSHA-256\nSHA-512\nSHA-1\nMD5\nRIPEMD-160\nField\nDescription\nEnabled\nSelect true to enable the hashing.\nHashing Algorithm\nLists the available supported hashing algorithms.\nHeaders need to be hashed\nDefine the column header names that need to be hashed. The headings should be comma-separated without spaces between them.\nSyntax:\nheading1,heading2\n*Example:**\nemail,mobile\nDelimiter\nThe delimiter used to separate the header names. The delimiters supported are:\nPipe (|)\nComma (,)\nAmpersand (&)\nPer cent (%)\nUpdated\n4 months ago\nRebuild Headers / Define Headers and Transform Data\nInvoke Neo Iteratively\nAsk AI"}
{"url": "https://docs.capillarytech.com/docs/invoke-neo-iteratively", "title": "Invoke Neo Iteratively", "text": "Invoke Neo Iteratively\nThe\nInvoke-Neo-Iteratively\nblock allows you to import data from a\nNeo API\nand configure the number of times the API is invoked.\nThe following table lists the fields:\nField\nDescription\nEnter url\nSelect the\nNeo API\nfrom the drop-down menu. The drop-down lists\nDataflows\nlabelled as\nconnectplus\n.\nAuthorization\nAuthorisation key for the API, if required.\nNEO API METHOD\nMethod of the API. Supported values:\nGET\nand\nPOST\n.\n*Note:** This block supports only\nPOST\ncalls that do not require any body parameters.\nSplit Response\nSet the value to\ntrue\nusing the drop-down to separate each array in a response. For example, if an API returns an array of objects, and each object has its own set of properties, setting the value to\ntrue\nwill list each array as an individual response.\nAPI Iteration End Condition\nConditions for terminating the API call. You can define a custom condition for terminating the API call.\nMax retries\nNumber of times the API is called. There is no limit for the number of retries.\nUpdated\n4 months ago\nMask Contents in a CSV\nConvert JSON to CSV/Avro Format\nAsk AI"}
{"url": "https://docs.capillarytech.com/docs/convert-json-to-csvavro-format", "title": "Convert JSON to CSV/Avro Format", "text": "Convert JSON to CSV/Avro Format\nThe\nJson-to-Csv-Converter\nblock enables conversion from CSV or Avro formats to JSON and from JSON to CSV.\nTo configure the\nJson-to-Csv-Converter\nblock, follow these steps:\ni. Select the file format to convert from in the\nRecord Reader\ndrop-down.\nThe available formats are:\nReader\nDescription\nCSVReader\nInput data is in CSV format.\nAvroReader\nInput data is in\nAvro\nformat.\nJSONTreeReader\nInput data is in JSON format\nii. Select the file format to convert to in the\nRecord Writer\ndrop-down.\nThe available formats are:\nWriter\nDescription\nCSVRecordSetWriter\nExport data to CSV format.\nJsonRecordSetWriter\nExport data to JSON.\nCustomerV2RecordSetWriter\nExport data to\nCustomer V2\nformat.\niii. Enter the parameter to group by under the\ngroupBy\nfield. For example, if the API has a parameter called\norgId\n, enter the value in the text field to group the responses by the organisation ID.\nUpdated\n4 months ago\nInvoke Neo Iteratively\nConvert CSV to JSON\nAsk AI"}
{"url": "https://docs.capillarytech.com/docs/convert-csv-to-json", "title": "Convert CSV to JSON", "text": "Convert CSV to JSON\nField Name\nDescription\nSort by\nArranges rows based on a chosen column so that similar entries appear together. This is often a prerequisite for grouping to group the similar entries.\nAlphabetical sort\nArranges data in alphabetical or alphanumeric order based on a chosen column\nGroup by\nCollects and organizes data entries that share the same value in a specified header. When you group by a field (e.g., \"bill ID\"), all rows with the same value are consolidated into a single JSON object, with the grouping key appearing once and the related fields organized as a sub-structure (like an array). Sorting by the grouping field often precedes this operation to ensure all related entries are grouped together.\nGrouping limit\nThe \"grouping limit\" parameter sets a threshold on the number of grouped entries to be included in a single output structure. This helps manage payload size when handling many related entries. For example, if grouping by \"bill ID\" with a limit of 10, each JSON object will contain information for up to 10 bills; if there are more than 10, multiple output structures will be generated. It effectively splits bulk data into manageable chunks.\nExample\nConsider a CSV file containing records for different bills. Each bill may have multiple identifiers (mobile or email) and associated items. The goal is to:\nSort\nthe data so that rows with the same\nbill ID\nare together.\nApply an\nalphabetical sort\nto ensure a consistent order.\nGroup by\nthe\nbill ID\nto combine records for each bill.\nApply a\ngrouping limit\nso that each output structure contains data for a maximum of two unique bill IDs.\nOriginal CSV Data\nbill ID,identifier name,identifier value,itemID\nBILL002,email,\n[email protected]\n,ITEM-A\nBILL001,mobile,040-1234567,ITEM-X\nBILL002,mobile,050-9876543,ITEM-B\nBILL001,email,\n[email protected]\n,ITEM-Y\nBILL003,mobile,044-5551234,ITEM-P\nBILL001,mobile,044-1112233,ITEM-Z\nBILL003,email,\n[email protected]\n,ITEM-Q\nBILL002,email,\n[email protected]\n,ITEM-C\nStep 1: Sorting and Alphabetical Sort\nPurpose:\nArrange rows based on the\nbill ID\nand alphabetically/alphanumerically so that records with the same bill are adjacent.\nConfiguration:\nSet\nSort header\nvalue to\nbill ID\nand\nAlphabetical Sort\nto True.\nResult:\nThe data is reordered alphabetically (or alphanumerically) by\nbill ID\n.\nSorted CSV Data\nbill ID,identifier name,identifier value,itemID\nBILL001,mobile,040-1234567,ITEM-X\nBILL001,email,\n[email protected]\n,ITEM-Y\nBILL001,mobile,044-1112233,ITEM-Z\nBILL002,email,\n[email protected]\n,ITEM-A\nBILL002,mobile,050-9876543,ITEM-B\nBILL002,email,\n[email protected]\n,ITEM-C\nBILL003,mobile,044-5551234,ITEM-P\nBILL003,email,\n[email protected]\n,ITEM-Q\nStep 2: Group By\nPurpose:\nGroup all records with the same\nbill ID\ninto a single JSON object.\nConfiguration:\nSet \"group by\" as\nbill ID\n.\nJSON Structure (Before Applying Grouping Limit):\nJSON\n[\n  {\n    \"bill ID\": \"BILL001\",\n    \"identifiers\": [\n      { \"identifier name\": \"mobile\", \"identifier value\": \"040-1234567\" },\n      { \"identifier name\": \"email\", \"identifier value\": \"\n[email protected]\n\" },\n      { \"identifier name\": \"mobile\", \"identifier value\": \"044-1112233\" }\n    ],\n    \"items\": [\n      { \"itemID\": \"ITEM-X\" },\n      { \"itemID\": \"ITEM-Y\" },\n      { \"itemID\": \"ITEM-Z\" }\n    ]\n  },\n  {\n    \"bill ID\": \"BILL002\",\n    \"identifiers\": [\n      { \"identifier name\": \"email\", \"identifier value\": \"\n[email protected]\n\" },\n      { \"identifier name\": \"mobile\", \"identifier value\": \"050-9876543\" },\n      { \"identifier name\": \"email\", \"identifier value\": \"\n[email protected]\n\" }\n    ],\n    \"items\": [\n      { \"itemID\": \"ITEM-A\" },\n      { \"itemID\": \"ITEM-B\" },\n      { \"itemID\": \"ITEM-C\" }\n    ]\n  },\n  {\n    \"bill ID\": \"BILL003\",\n    \"identifiers\": [\n      { \"identifier name\": \"mobile\", \"identifier value\": \"044-5551234\" },\n      { \"identifier name\": \"email\", \"identifier value\": \"\n[email protected]\n\" }\n    ],\n    \"items\": [\n      { \"itemID\": \"ITEM-P\" },\n      { \"itemID\": \"ITEM-Q\" }\n    ]\n  }\n]\nStep 3: Grouping Limit\nPurpose:\nLimit the number of grouped entries in each output structure to make payloads more manageable.\nConfiguration:\nSet a\ngrouping limit of 2\n, meaning that each output structure will contain data for at most two unique\nbill ID\ngroups. If the total number of unique\nbill ID\nvalues exceeds this limit, the output is split into multiple JSON structures.\nResult with Grouping Limit of 2:\nOutput 1\nJSON\n[\n  {\n    \"bill ID\": \"BILL001\",\n    \"identifiers\": [\n      { \"identifier name\": \"mobile\", \"identifier value\": \"040-1234567\" },\n      { \"identifier name\": \"email\", \"identifier value\": \"\n[email protected]\n\" },\n      { \"identifier name\": \"mobile\", \"identifier value\": \"044-1112233\" }\n    ],\n    \"items\": [\n      { \"itemID\": \"ITEM-X\" },\n      { \"itemID\": \"ITEM-Y\" },\n      { \"itemID\": \"ITEM-Z\" }\n    ]\n  },\n  {\n    \"bill ID\": \"BILL002\",\n    \"identifiers\": [\n      { \"identifier name\": \"email\", \"identifier value\": \"\n[email protected]\n\" },\n      { \"identifier name\": \"mobile\", \"identifier value\": \"050-9876543\" },\n      { \"identifier name\": \"email\", \"identifier value\": \"\n[email protected]\n\" }\n    ],\n    \"items\": [\n      { \"itemID\": \"ITEM-A\" },\n      { \"itemID\": \"ITEM-B\" },\n      { \"itemID\": \"ITEM-C\" }\n    ]\n  }\n]\nOutput 2\nJSON\n[\n  {\n    \"bill ID\": \"BILL003\",\n    \"identifiers\": [\n      { \"identifier name\": \"mobile\", \"identifier value\": \"044-5551234\" },\n      { \"identifier name\": \"email\", \"identifier value\": \"\n[email protected]\n\" }\n    ],\n    \"items\": [\n      { \"itemID\": \"ITEM-P\" },\n      { \"itemID\": \"ITEM-Q\" }\n    ]\n  }\n]\nNote:\nIn this example, there are three unique\nbill ID\nvalues. With a grouping limit of 2, the first output contains grouped data for\nBILL001\nand\nBILL002\n, while the second output contains grouped data for\nBILL003\n.\nResult with Grouping Limit of 3:\nJSON\n[\n  {\n    \"bill ID\": \"BILL001\",\n    \"identifiers\": [\n      { \"identifier name\": \"mobile\", \"identifier value\": \"123-456-7890\" },\n      { \"identifier name\": \"email\", \"identifier value\": \"\n[email protected]\n\" },\n      { \"identifier name\": \"mobile\", \"identifier value\": \"111-222-3333\" }\n    ],\n    \"items\": [\n      { \"itemID\": \"ITEM-X\" },\n      { \"itemID\": \"ITEM-Y\" },\n      { \"itemID\": \"ITEM-Z\" }\n    ]\n  },\n  {\n    \"bill ID\": \"BILL002\",\n    \"identifiers\": [\n      { \"identifier name\": \"email\", \"identifier value\": \"\n[email protected]\n\" },\n      { \"identifier name\": \"mobile\", \"identifier value\": \"987-654-3210\" },\n      { \"identifier name\": \"email\", \"identifier value\": \"\n[email protected]\n\" }\n    ],\n    \"items\": [\n      { \"itemID\": \"ITEM-A\" },\n      { \"itemID\": \"ITEM-B\" },\n      { \"itemID\": \"ITEM-C\" }\n    ]\n  },\n  {\n    \"bill ID\": \"BILL003\",\n    \"identifiers\": [\n      { \"identifier name\": \"mobile\", \"identifier value\": \"555-123-4567\" },\n      { \"identifier name\": \"email\", \"identifier value\": \"\n[email protected]\n\" }\n    ],\n    \"items\": [\n      { \"itemID\": \"ITEM-P\" },\n      { \"itemID\": \"ITEM-Q\" }\n    ]\n  }\n]\nResult with No Grouping:\nJSON\n[\n  {\n    \"bill ID\": \"BILL002\",\n    \"identifier name\": \"email\",\n    \"identifier value\": \"\n[email protected]\n\",\n    \"itemID\": \"ITEM-A\"\n  },\n  {\n    \"bill ID\": \"BILL001\",\n    \"identifier name\": \"mobile\",\n    \"identifier value\": \"123-456-7890\",\n    \"itemID\": \"ITEM-X\"\n  },\n  {\n    \"bill ID\": \"BILL002\",\n    \"identifier name\": \"mobile\",\n    \"identifier value\": \"987-654-3210\",\n    \"itemID\": \"ITEM-B\"\n  },\n  {\n    \"bill ID\": \"BILL001\",\n    \"identifier name\": \"email\",\n    \"identifier value\": \"\n[email protected]\n\",\n    \"itemID\": \"ITEM-Y\"\n  },\n  {\n    \"bill ID\": \"BILL003\",\n    \"identifier name\": \"mobile\",\n    \"identifier value\": \"555-123-4567\",\n    \"itemID\": \"ITEM-P\"\n  },\n  {\n    \"bill ID\": \"BILL001\",\n    \"identifier name\": \"mobile\",\n    \"identifier value\": \"111-222-3333\",\n    \"itemID\": \"ITEM-Z\"\n  },\n  {\n    \"bill ID\": \"BILL003\",\n    \"identifier name\": \"email\",\n    \"identifier value\": \"\n[email protected]\n\",\n    \"itemID\": \"ITEM-Q\"\n  },\n  {\n    \"bill ID\": \"BILL002\",\n    \"identifier name\": \"email\",\n    \"identifier value\": \"\n[email protected]\n\",\n    \"itemID\": \"ITEM-C\"\n  }\n]\nUpdated\n4 months ago\nConvert JSON to CSV/Avro Format\nEvent Notification Block\nAsk AI\nTable of Contents\nExample\nOriginal CSV Data\nStep 1: Sorting and Alphabetical Sort\nStep 2: Group By\nStep 3: Grouping Limit"}
{"url": "https://docs.capillarytech.com/docs/event-notification-block-", "title": "Event Notification Block", "text": "Event Notification Block\nThe Event Notification Block (ENB) is a block that helps to retrieve events from Kafka from specific topics, even before it hits the webhook of consumers. This helps to process the events within Connect+ before it reaches Capillary’s event notification.\nAbout Kafka\nKafka is a software framework where data is published and stored. In Kafka, event data are grouped into specified topics called Kafka topics. A Kafka topic is a channel where specific event data is stored and streamed. Each Kafka topic has a unique name.\nFields\nDescription\nKafka Topics comma separated\nA dropdown field where you can select one or more Kafka topics. Each topic has a checkbox—by checking the ones you need, the event will be added. This field specifies the event names (which correspond to Kafka topics in the event notification system) that you want to retrieve events from.\nUpdated\n4 months ago\nConvert CSV to JSON\nNeo Transformer V2 Block\nAsk AI\nTable of Contents\nAbout Kafka"}
{"url": "https://docs.capillarytech.com/docs/neo-transformer-v2-block", "title": "Neo Transformer V2 Block", "text": "Neo Transformer V2 Block\nThe Neo Transformer V2 Block allows you to call a\nNEO API\nfor data transformation with enhanced retry mechanisms and customizable error handling.\nThe following table lists the fields:\nField\nDescription\nEnter URL\nSelect the\nNeo Dataflow\nfrom the drop-down menu. The drop-down lists Dataflows with the\nConnectplus\ntag.\nAuthorization\nAuthorization key for the API (if required).\nSplit Response\nIf set to\ntrue\n, separates each array in the API response into individual responses. Useful when the API returns an array of objects.\nMax Retry\nDefines the maximum number of times the API will be retried in case of failure. Users can set this value based on their requirements.\nNote:\nCurrently, there is no limitation in setting the number of retries.\nExtra Retry Error Codes\nAdditional status error codes that should trigger a retry.\nNote:\nBy default, only 5XX error codes are retried.\nExtra No Retry Error Codes\nStatus error codes that should\nnot\ntrigger a retry, even if they can be retried by default.\nExample\n: Adding\n500\nerror code will skip retry of APIs with\n500\nerror codes.\nUpdated\n4 months ago\nEvent Notification Block\nConnect to Destination without OAuth or S3 Pull Block\nAsk AI"}
{"url": "https://docs.capillarytech.com/docs/connect-to-destination-block-without-oauth-authentication", "title": "Connect to Destination without OAuth or S3 Pull Block", "text": "Connect to Destination without OAuth or S3 Pull Block\nThe Connect to Destination without OAuth or S3 Pull block is used to fetch or pull files stored in an Amazon S3 bucket. It acts as a source block, meaning it pulls data that can then be used for further processing, transformations, or validations within a dataflow. This block connects to the S3 bucket using AWS Access Key and Secret Key credentials.\nUse Case\nRequirement\nA company stores customer transaction data in an S3 bucket after every purchase made on its e-commerce platform. The data is stored in .csv format and must be pulled into the Capillary platform for further processing and allocation of loyalty points.\nSolution\nCreate a template with the\nConnect to Destination without OAuth\nblock to fetch the file from the specified S3 bucket. Once the files are pulled from S3, you can use the Transform Data block or Neo Transformer for parsing, validating, and mapping fields before pushing to Capillary's APIs. to process the data and allocate loyalty points.\nConfiguring the Connect to Destination without OAuth Block\nPre-Requisite\nThe following are the prerequisites for the\nConnect to Destination without OAuth\nblock:\nAWS Access Key and Secret Key with read permissions for the S3 bucket.\nFor Access Key and Secret, create a ticket with the Capillary Access team.\nBucket Name and the Region where your files are stored.\nField Name\nDescription\nBucket Name\nName of the S3 bucket from which data needs to be pulled.\nRegion\nAWS region where the S3 bucket is hosted.\nExample\n:\nus-east-1\n,\nus-west-1\n,\neu-west-1\nAccess Key\nAWS Access Key ID used to authenticate with the S3 bucket.\nSecret Key\nAWS Secret Access Key used for authentication.\nInput Path\nPath inside the bucket where the source files are located.\nOutput Path\nPath where the files are saved after pulling.\nFilename Pattern\nFile type that needs to be pulled from the S3 bucket. Currently,\n.csv\nfile format is supported.\nAPI Error Filepath\nPath where the error file is stored.\nFile Delimiter\nDelimiter used in the pulled files. The supported delimiters are\ncomma\n(,) ,\npipe\n(|)\nFor details on adding column headers, refer to\nDefining column header\n.\nUpdated\n4 months ago\nNeo Transformer V2 Block\nNeo Transformer Block\nAsk AI\nTable of Contents\nUse Case\nConfiguring the Connect to Destination without OAuth Block\nPre-Requisite"}
{"url": "https://docs.capillarytech.com/docs/neo-transformer-block", "title": "Neo Transformer Block", "text": "Neo Transformer Block\nThe Neo Transformer block allows you to invoke a NEO dataflow for data transformation. Below is the screenshot showing the fields in the block.\nThe table below describes the fields in the block.\nField Name\nDescription\nEnter url\nSelect the\nNeo Dataflow\nfrom the drop-down menu. The drop-down lists Dataflows with the\nConnectplus\ntag.\nAuthorization\nAuthorisation key for the API (if required).\nSplit Response\nSplits the response when the API returns an array of objects.\n*True **- Separates each array element in the API response into individual responses\n*False **- Keeps the response as a single array without separation\nUpdated\n4 months ago\nConnect to Destination without OAuth or S3 Pull Block\nData Validation Block\nAsk AI"}
{"url": "https://docs.capillarytech.com/docs/data-validation-block", "title": "Data Validation Block", "text": "Data Validation Block\nThe Data Validation block ensures data quality by cleaning, validating, and preparing information before moving to the next step in a workflow. Typically, it acts as a middle step, placed after a source or decrypt block and before an API call block. The block is optional and available in both\nDo-It-Yourself (DIY)\nand standard templates.\nThe block runs a Databricks job, identified by its job ID, to process incoming data. The job reads the input file retrieved from the source block, converts it into a temporary table, applies the required validations and transformations, and writes the results to an output table. The output table then serves as the data source for field mapping in subsequent blocks.\nKey capabilities\nThe Data Validation block prepares your data before it moves downstream. You can use it to:\nFilter data:\nKeep only the records that meet specific conditions.\nRemove duplicates\n: Eliminate repeated records to retain only one copy.\nFill missing values\n: Add default or random values in required fields to prevent errors later in the workflow.\nAdd missing details\n: Retrieve additional information from other Databricks tables.\nRename headers\n: Update column names to match the format required by subsequent steps.\nApply custom rules\n: Define validation logic in Databricks, such as validating formats or ensuring uniqueness.\nTransform data\n: Adjust fields, standardize formats, or reorganize records.\nProcess Overview\nThe Data Validation block uses Databricks to apply the capabilities listed above. The workflow follows these steps:\nFile is read\n– Connect+ retrieves the input file from a source such as SFTP. If the file is encrypted, it is decrypted first.\nDatabricks job runs\nTemporary table is created\n– The file is automatically converted into a temporary table in Databricks.\nExample: A CSV file with 10,000 rows and five columns becomes a temporary table with the same structure.\nDatabricks job runs\n– You create a Databricks notebook with your validation and transformation rules. Spark SQL applies these rules to the temporary table.\nOutput table is generated\n– The cleaned, transformed, and validated data is saved to a new temporary output table.\nData returns to Connect+\n– Connect+ retrieves the processed data from the output table and continues the workflow, such as sending it to an API.\nTables are deleted\n– Both the input and output temporary tables are automatically deleted after 10 days, ensuring the block is used for preparation and not storage.\nUse cases\nThe Data Validation block provides multiple options for improving data quality, enriching records and ensuring that only valid and complete information progresses through a workflow. Below are its key applications:\nUse Case 1: Validate Customer Status Before Processing Transactions\nA retail brand wants to award loyalty points only for purchases made by active customers. However, transaction files often include records from inactive or deleted customers, leading to incorrect point allocation.\nSolution\nUse the Data Validation block to check the customer status before processing transactions. Configure a Databricks job that:\nConfirms whether the customer is active.\nRejects transactions from inactive or deleted customers with an error reason.\nAfter validation, only eligible transactions proceed for point allocation.\nUse Case 2: Retrotagging for Late Enrollments\nCustomers sometimes make purchases before enrolling in the loyalty program. When they sign up later, the brand wants to link the past purchases to the customer’s new account and award points retroactively.\nSolution\nUse the Data Validation block to retrotag earlier transactions. Configure a Databricks job that:\nMatches past purchases with the newly created member profile.\nTags earlier visits against the correct customer account.\nThe validated data is then forwarded for point allocation, ensuring customers are rewarded fairly.\nUse Case 3: Enrich Customer Data with Required Identifiers or Append Missing Data\nA brand’s transaction files often include basic details such as LoyaltyID or points, but miss Capillary identifiers like\nuser_id\nor\nbill_id\n. In some cases, files include only a mobile number, while downstream API calls require the first and last names.\nSolution\nUse the Data Validation block to enrich incomplete records. Configure a Databricks job that:\nLooks up missing Capillary identifiers, for example,\nuser_id\n,\nbill_id,\nand missing information like\nfirst and last name\nfrom other Databricks tables.\nValidates that the customer exists and is active.\nThis produces a complete dataset ready for transaction processing.\nUse Case 4: Perform Reconciliation and Audit Checks Before Storing Transactions\nBefore storing transactions, a retail brand needs to verify store IDs, avoid duplicate entries, and identify suspiciously large bill amounts. Without these checks, errors and fraud may affect reporting and rewards.\nSolution\nUse the Data Validation block to perform reconciliation and audit checks. Configure a Databricks job that:\nConfirms store IDs exist in the system.\nRejects transactions already recorded.\nFlags transactions with unusually high values for further review.\nThe cleaned data then continues to the next block for storage or processing.\nUse Case 5: Filter Data\nA retail brand imports a transaction file containing 10,000 records. However, only bills greater than 1,000 rupees are eligible for loyalty points. Without filtering, unnecessary records slow down processing and API calls.\nSolution\nUse the Data Validation block to filter input data. Configure a Databricks job that selects rows with a transaction value greater than\n1000 rupees.\nOnly qualifying records are returned to Connect+ for further processing.\nUse Case 6: Fill Missing Values\nInput files sometimes contain\nnull\nvalues in mandatory fields such as transaction dates. These gaps cause errors in subsequent API calls.\nSolution\nUse the Data Validation block to fill missing values. Configure a Databricks job that:\nReplaces nulls in required fields with default values.\nEnsures mandatory fields are always populated before forwarding the data.\nThis prevents failures during downstream processing.\nUse Case 7: Cleaning Customer Data Before Loyalty Points Allocation\nA retail brand uses Capillary’s loyalty platform to allocate points by importing customer data from an external system. However, the incoming file often includes duplicate records and rows with missing mobile numbers, which impacts point allocation.\nSolution\nUse the\nValidation\nblock in Capillary to clean the data before processing it. Configure a custom Databricks job that:\nRemoves duplicate customer records based on email address or mobile number.\nEliminates rows where the mobile number is missing.\nProvide the Databricks job ID in the Validation block configuration. After validation and cleaning, Capillary forwards the processed data to the next blocks for loyalty points allocation.\nConfiguring the Data Validation Block Interface\nPre-Requisites\nEnsure you have access to the database for your organisation's group. For access, create a ticket to the Capillary Access team.\nName of the target database.\nField name\nDescription\nDataBricks JobId\nThe\nDatabricks Job ID\nthat defines the validation and transformation logic.\nIs Data Validation enabled?\nIndicates whether to perform data validation:\nIf unchecked, the block is skipped and the workflow runs as usual.\nIf checked, the configured Databricks job runs to validate the data.\nCreating a Databricks Job and Job ID\nLog in to the Databricks portal.\nFrom the drop-down menu in the top right corner, select your workspace.\nYour workspace is named\nnotebook-cluster in which your organisation exists\n.\nExample\n:\nnotebook-eucrm\n, where\neurcrm\nis the cluster in which the organisation exists.\nFrom the left pane, click\nWorkspace\n>\nCreate\n>\nNotebook\n.\nWrite a Databricks notebook for the required validation and transformation.\nNote\n: A complex Databricks job might slow down the workflow.\nDatabricks Notebook\nFrom the left pane, click\nWorkflows\n>\nCreate job\n.\nThe job ID is created. Use the Job ID in the\nDataBricks JobId\nfield of the Data Validation block.\nCreate a job and add a task.\nNote\n: In the\nPath\nfield, give the path of your Databricks Notebook.\nCreate a job and a task\nCreating the Databricks Notebook Script\nYou can create a Databricks script to transform and validate the data as per your requirements. The following code should be included in your script.\nMandatory code that cannot be modified\ninput_table = dbutils.widgets.get(\"inputTable\")\noutput_table = dbutils.widgets.get(\"outputTable\")\ndatabase_name = dbutils.widgets.get(\"database_name\")\n\n# Define full table names\ninput_table_name = f\"{database_name}.{input_table}\"\noutput_table_name = f\"{database_name}.{output_table}\"\nUse the following line to write data to the output table. You can change the name of the DataFrame in your script, but the rest of the code must remain unchanged. Here,\nrenamed_df\nis the Dataframe name.\nScript to write into output table\nrenamed_df.write.mode(\"overwrite\").format(\"delta\").saveAsTable(output_table_name)\nNote\n: Use the\ndelta\nformat to store data into the output table\nThe following is a sample Databricks notebook script. The script fetches all the rows from the input table where the value of\nid\nis less than or equal to 30.  These rows are written into the output table, and the columns\nid\nand\nname\nare renamed to\ncustomer_id\nand\ncustomer_name\n, respectively.\nSample Databricks Job\nimport json\nfrom pyspark.sql import SparkSession\n\n# Initialize Spark\nspark = SparkSession.builder.appName(\"Databricks S3 to Table\").getOrCreate()\n\n# Step 1: Read Job Parameters from notebook_params\ninput_table = dbutils.widgets.get(\"inputTable\")\noutput_table = dbutils.widgets.get(\"outputTable\")\ndatabase_name = dbutils.widgets.get(\"database_name\")\n\n# Define full table names\ninput_table_name = f\"{database_name}.{input_table}\"\noutput_table_name = f\"{database_name}.{output_table}\"\n\n# Read data from the input table - This query selects all rows from the table where the `id` column is less than or equal to 30.\ndf = spark.sql(f\"SELECT * FROM {input_table_name} WHERE id <= 30\")\n\n#  Perform the required transformation - Here, rename columns to customer_id and customer_name\nrenamed_df = (\n    df.withColumnRenamed(\"id\", \"customer_id\")\n      .withColumnRenamed(\"name\", \"customer_name\")\n)  # Add more columns as needed\n\n# Write the transformed data to the output table. It is mandatory to write the transformed data into the output table. Here, the data is written to the output table in Delta format.\nrenamed_df.write.mode(\"overwrite\").format(\"delta\").saveAsTable(output_table_name)\nFAQs\nWhere should I create the Databricks job?\nAnswer: You must create the Databricks job in the notebook cluster where your organisation resides.\nWhat kind of transformations can I perform using this block?\nAnswer: You can remove duplicates, drop empty rows/columns, standardise headers, or apply custom logic such as formatting phone numbers or merging columns.\nWhat should the Databricks job contain?\nAnswer: The job should read the input table, apply transformation or validation logic, and write the results to the output table. Subsequent blocks then use the output table for field mapping.\nCan I write a complex Databricks job to achieve my transformation?\nAnswer: You can write a complex Databricks job, but it can slow down the workflow.\nHow are spaces and hyphens in the header names handled?\nAnswer: The spaces ( ) and hyphens (-) in the header names are converted to underscores (_).\nExample\n: If the header name is\nCustomer ID\nit is converted into\nCustomer_ID\n.\nUpdated\n28 days ago\nNeo Transformer Block\nExplore templates\nAsk AI\nTable of Contents\nKey capabilities\nProcess Overview\nUse cases\nConfiguring the Data Validation Block Interface\nPre-Requisites\nCreating a Databricks Job and Job ID\nCreating the Databricks Notebook Script\nFAQs"}
{"url": "https://docs.capillarytech.com/docs/explore-templates", "title": "Explore templates", "text": "Explore templates\nThis page provides you with information on templates available in Connect+.\nThe below table lists the various templates available in Connect+ that you can use to create dataflows or integration workflows in the Connect+ platform.\nSL.NO\nTemplate name\n(Click the template name to access its documentation.)\nPurpose\n1\nCustomer test/control status update\nAssign or update the test/control status of customers\n2\nPII cleanup\nDelete PII data in bulk\n3\nData reconciliation - SFTP\nCompare source data with data in CDP to identify source data that got missed during ingestion.\n4\nCSV to XML conversion\nConvert CSV files into XML\n5\nFleet customers (parent-child association)\n6\nCustomer V2 add\nAdd customer data using the OAuth client.\n7\nCard update\nTo update the card details of a customer.\n8\nCoupon redeem\nTo redeem active coupons of a loyalty customer\n9\nFile transfer templates\nTemplates that allow you to join two files. You can choose from the below templates as per your requirements.\nSFTP to FTP with 2 Files Join\nDownload two files from the SFTP server, unzip, join, zip and push to the FTP server\nSkip unknown files SFTP To SFTP with 2 Files Join\nSFTP to FTP with 3 Files Join\nDownload three files from the SFTP server, unzip, join, remap headers, zip and push to the FTP server\nSFTP To SFTP merge 3 Files Join with encrypt/decrypt\nDownload three files from the SFTP server, decrypt, unzip, join, remap headers, encrypt, zip and push to the SFTP server\nFTP to S3\nPushes files from FTP to Amazon S3\nSFTP to FTP with Headers Definition\nDownload a single file from SFTP server, unzip, remap headers, zip and push to the FTP server\nSFTP To SFTP with 2 Files Join\nDownload two files from the SFTP server, unzip, join, zip and push to the SFTP server\nSFTP to FTP with 3 Files Join with encrypt/decrypt\nDownload three files from the SFTP server, decrypt, unzip, join, remap headers, zip, encrypt and push to the FTP server\nSFTP To SFTP merge 4 Files Join with encrypt/decrypt\nDownload four files from the SFTP server, decrypt, unzip, join, remap headers, encrypt, zip and push to the SFTP server\nSFTP to SFTP with Headers Definition\nDownload a single file from the SFTP server, unzip, remap headers, zip and push to the SFTP server\nSFTP to FTP with 4 Files Join\nDownload four files from the SFTP server, unzip, join, remap headers, zip and push to the FTP server\nSFTP to SFTP transfer\nTransfer SFTP files from one SFTP server to the other with encryption/decryption.\n10\nTransaction templates\nEnables you to add a transaction. You can choose from the below templates as per your requirements.\nTransactions customers V2 add\nSorts, transforms, filters and posts transaction data using the OAuth client.\nTransaction v2 add with filter\nTransaction line-item payment mode merge\nIntouch Transaction v2 Add\nSorts, transforms and post transaction data using the OAuth client\nTransaction v2 add\nDecrypts, sorts, transforms, filters and posts transaction data using the OAuth client\n11\nTransaction line-item merge\nCompares and merges transaction data from both the line item file and the bill-level file, then adds the merged data to the platform.\n12\nCreate and update badges\nEnables you to create and update Badges.\n13\nFTP to S3\nEnables transferring of the files from an FTP location to an S3 server.\n14\nAudience reload from SFTP\nAllows the refreshing of files in the defined FTP location at specified intervals and enables automatic updating of the audience list on Engage+\n15\nDatabricks job trigger template\nEnables to trigger a Databricks job as per a schedule.\n16\nIssue Goodwill points template\nEnables to issue goodwill points to customers.\n17\nCreate Rewards in Bulk\nEnables the creation or update of rewards in bulk\nUpdated\n4 months ago\nData Validation Block\nTest and control template\nAsk AI"}
